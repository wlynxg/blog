<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><follow_challenge><feedId>77250260013802496</feedId><userId>42117541714060288</userId></follow_challenge><title>计算机网络 on Wlynxg's Blog</title><link>https://wlynxg.github.io/blog/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link><description>Recent content in 计算机网络 on Wlynxg's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 22 Aug 2025 17:34:52 +0800</lastBuildDate><atom:link href="https://wlynxg.github.io/blog/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>DHT 详解</title><link>https://wlynxg.github.io/blog/p/dht-%E8%AF%A6%E8%A7%A3/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/dht-%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h1 id="dht-详解">DHT 详解
&lt;/h1>&lt;h2 id="dht-介绍">DHT 介绍
&lt;/h2>&lt;p>DHT（分布式哈希表）是一种用于在分布式环境中存储和查找数据的技术。它基于哈希函数将数据映射到一个大型的分布式网络中的节点上。每个节点负责维护一部分数据的索引，并通过协作来实现高效的数据存储和查找。&lt;/p>
&lt;p>DHT具有以下几个核心概念：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>哈希函数&lt;/strong>：DHT使用哈希函数将数据键（key）映射到整个网络中的特定节点。哈希函数将任意长度的输入映射为固定长度的输出，通常是一个数字或字符串。&lt;/li>
&lt;li>&lt;strong>节点&lt;/strong>：DHT网络由多个节点组成，每个节点都有一个唯一的标识符（通常是一个哈希值）和一个网络地址。节点可以加入和离开网络，并且负责存储和处理与其标识符相关联的数据。&lt;/li>
&lt;li>&lt;strong>数据存储和定位&lt;/strong>：当一个节点要存储数据时，它会将数据的键通过哈希函数转换为一个标识符，并找到该标识符在网络中最接近的节点。该节点负责存储该数据项。当需要查找数据时，节点通过哈希函数找到负责该数据项的节点，并从该节点获取数据。&lt;/li>
&lt;li>&lt;strong>路由表&lt;/strong>：每个节点都维护一个路由表，其中包含其他节点的信息。路由表根据标识符的空间划分为不同的区域，使节点能够快速定位到其他节点。通过路由表，节点可以有效地进行消息传递和数据查找。&lt;/li>
&lt;/ol>
&lt;p>DHT的优点包括高度可扩展性、去中心化、容错性和灵活性。它可以应用于各种分布式系统场景，如对等网络（P2P）文件共享、内容分发网络（CDN）、分布式存储系统等。&lt;/p>
&lt;p>DHT是一个广泛的概念，有许多不同的实现和变体，例如Chord、Kademlia、CAN等。每个实现方式都有其独特的算法和协议，但它们共享相似的基本原则和目标。&lt;/p>
&lt;h2 id="chord-算法">Chord 算法
&lt;/h2>&lt;h3 id="基本要素">基本要素
&lt;/h3>&lt;p>Chord 算法的核心在于&lt;strong>环形链表&lt;/strong>和&lt;strong>跳表&lt;/strong>。Chord算法将节点 IP 和资源 Key 使用统一用某个哈希函数（如SHA-1）计算出一个 m 位的 ID 号。将计算出的 ID 号对 2^m 取模后按顺序排列在环上，该环被称为 &lt;strong>identifier space&lt;/strong>。&lt;/p>
&lt;p>对于一个资源 Key ，用哈希函数计算后的 ID 号为 k，该 Key 由环上第一个 ID 号大于 k 的节点负责维护这个资源。&lt;/p>
&lt;p>环上的每个节点都维护着自身的后继节点，如下图中，N1 节点保存着 N8 节点的信息，N8 节点保存着 N14 节点的信息，以此类推就构成了一个环形链表结构。&lt;/p>
&lt;p>如下图， K10 这个资源就由 N14 这个节点进行负责（14 &amp;gt; 10）。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143140.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="资源定位">资源定位
&lt;/h3>&lt;p>当节点想要查询一个节点的位置时，根据现有结构，他需要依次遍历每一个后继节点，直到查找到资源为止。&lt;/p>
&lt;p>如下图中，节点 N8 想要查找到资源 K54，那么它需要执行 N8 -&amp;gt; N14 -&amp;gt; N21 -&amp;gt; N32 -&amp;gt; N38 -&amp;gt; N42 -&amp;gt; N51 -&amp;gt; N56才能找到 N54 对应的资源。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143153.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="查询优化">查询优化
&lt;/h3>&lt;p>为了解决链表结构查询资源缓慢的问题，Chord 引入了 前置节点（Chord 环变成了环形双向链表）和&lt;strong>finger table&lt;/strong>，finger table 实际上就是一个跳表。&lt;/p>
&lt;p>在 finger table 中，在每个节点 N 上都维护了最多有 m 项（m为 ID 的位数）的路由表（称为 finger table），用来定位资源。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143207.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>如图所示，节点 N8 存储了节点 N14、N21、N32、N42的节点信息。&lt;/p>
&lt;p>节点 N8 需要查询资源 K54 的信息时，将 K54 和自身跳表中的信息进行比较，发现 N42 是距离 K54 距离最近的节点，因此 N8 会直接找 N42 去请求数据，N42 再去重复下面的操作，直到找到 K54 为止。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143250.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="数据冗余">数据冗余
&lt;/h3>&lt;p>在上面的介绍中，资源 k 只会被存储在单一节点 N 上。这种存储方式会导致当节点 N 宕机时，资源 k 无法被其他节点查询到。&lt;/p>
&lt;p>为了解决这种问题，资源数据需要进行冗余存储，以防止节点宕机。&lt;/p>
&lt;p>其冗余策略为，节点 N 在存储资源时，不仅要本机存储，同时也会存放在自己的后继节点中。只存放在后继节点的话安全性依然有不足的情况，因此还可在自身 finger table 中选择节点进行数据存储。&lt;/p>
&lt;h3 id="节点变更">节点变更
&lt;/h3>&lt;p>当节点需要加入时，新节点必须要知道整个 Chord 网络中的一个节点信息，新节点和已知节点进行通信，用以知道自身应该加入的位置（参考链表增加节点的流程）。&lt;/p>
&lt;p>当节点需要退出时，需要将自身存储资源移交给前置和后继节点。&lt;/p>
&lt;h2 id="kademlia-算法">Kademlia 算法
&lt;/h2>&lt;p>Kademlia 算法（后面简称 Kad）的核心在于&lt;strong>二叉树搜索&lt;/strong>。Kad 算法中，资源 ID 和节点 ID 同样是统一编码，在 Kad 算法中 ID 长度为 160bit，可容纳 2 ^ 160 - 1 个资源，这个数量级基本上是整个宇宙中原子的数量。&lt;/p>
&lt;p>在 Kad 算法中使用 XOR （异或）来计算节点 Key 和节点 ID 之间的逻辑距离。&lt;/p>
&lt;h3 id="节点树">节点树
&lt;/h3>&lt;p>在 Kad 算法中，所有节点都可被当作一个二叉树的叶子节点，每一个叶子节点的位置由ID号来确定，如图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143307.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="节点树拆分">节点树拆分
&lt;/h3>&lt;p>每一个节点都可以从自己的视角来对二叉树进行拆分，把这颗二叉树分解为一系列连续的，不包含自己的子树。最高层的子树，由整颗树不包含自己的树的另一半组成；下一层子树由剩下部分不包含自己的一半组成；依此类推，直到分割完整颗树。&lt;/p>
&lt;p>拆分规则是从根节点开始，把不包含自己的子树拆分出来，然后在剩下的子树再拆分不包含自己的下一层子树，以此类推，直到最后只剩下自己。&lt;/p>
&lt;p>下图中， 以 1000 节点视角做拆分，可把整个二叉树拆分为四颗子树：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143231.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>Kad 网络中默认的散列值空间是 m=160（散列值有160bit），所以拆分以后的子树最多有160个。而考虑到实际网络中节点个数远远没有2^160个，所以子树的个数明显小于160个。对于每个节点，当按照自己的视角对二叉树进行拆分以后，会得到n个子树。对于每个子树，如果都分别知道里面1个节点，那么就可以利用这n个节点进行递归路由，从而可以达到整个二叉树的任何一个节点。在拆分子树时，如果 n 选择的较大，会导致大量的桶为空，因为找不到合适匹配的节点；如果n选择的较小，则不能精确匹配节点，一般而言，n 为 log(N)，N 为整个 Kad 网络中的节点数量。&lt;/p>
&lt;p>但是考虑到健壮性（节点可能宕机或者退出），光知道一个显然是不够的，需要知道多个才比较保险。因此 Kad 论文中给出了一个&lt;code>K-桶（K-bucket）&lt;/code>的概念：每个节点在完成子树拆分后，要记录每个子树里面的 &lt;code>K&lt;/code> 个节点。这里所说的 &lt;code>K&lt;/code> 值是一个系统级的常量，一般为 20。K桶实际上就是一个路由表，一个 K桶就是一张路由表，K桶中路由表的条数最大为 K。&lt;/p>
&lt;p>Kad 依赖下面的方式选择 K 桶中的 K 个节点：&lt;/p>
&lt;ul>
&lt;li>当 K 桶中容量未满时，只要属于这个 K 桶的节点都加入 K 桶；&lt;/li>
&lt;li>当 K 桶已满，且 K 桶中存在离线节点，则踢出离线节点，将新节点加入 K 桶；&lt;/li>
&lt;li>当 K 桶中全都是活跃节点，则将新加入节点保留在额外的附属列表中（作为缓存），当 K 桶中有节点停止响应时，才从附属列表取出节点加入 K 桶。&lt;/li>
&lt;/ul>
&lt;h3 id="协议消息">协议消息
&lt;/h3>&lt;p>Kademlia协议共有四种消息。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>PING&lt;/strong>: 测试节点是否仍然在线；&lt;/li>
&lt;li>&lt;strong>STORE&lt;/strong>: 请求节点存储一个键值对；&lt;/li>
&lt;li>&lt;strong>FIND_NODE&lt;/strong>: 消息请求的接收者将返回自己桶中离请求键值最近的K个节点；&lt;/li>
&lt;li>&lt;strong>FIND_VALUE&lt;/strong>: 与FIND_NODE一样，不过当请求的接收者存有请求者所请求的键的时候，它将返回相应键的值。&lt;/li>
&lt;/ul>
&lt;p>每一个RPC消息中都包含一个发起者加入的随机值，这一点确保响应消息在收到的时候能够与前面发送的请求消息匹配。&lt;/p>
&lt;h3 id="资源存储与查询">资源存储与查询
&lt;/h3>&lt;h4 id="存储资源">存储资源
&lt;/h4>&lt;p>节点在存储资源时，需要在网络中找到最多 k 个距离最近的节点，向这些节点发起 STORE 请求，由这些节点负责资源的存储。在查找这 k 个距离最近节点时， Kad 网络采用&lt;strong>递归查询&lt;/strong>的方式进行查询。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先初始节点从距离最近的 k 桶中选择 α 个（一般为 3）距离资源 ID 最近的节点，向这 α 个节点发起 FIND_NODE 请求；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>收到 FIND_NODE 请求的节点会从查询自身 k 桶中距离节点 ID 比自身更近的所有节点，如果没有比自身更近的节点，则返回空；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>初始节点收到 FIND_NODE 响应后将它加入列表中，然后再从已知最近的节点中选择尚未发送给 FIND_NODE 消息的节点继续发送 FIND_NODE 节点信息，直到再没有新节点返回为止；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后再从已知的所有节点中选出 k 个最近的节点用以存储资源信息。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="查询资源">查询资源
&lt;/h4>&lt;p>进行 FIND_VALUE 时和 FIND_NODE 类似，不过在 FIND_VALUE 的过程中，如果当前节点有该资源 ID 的信息，那么则直接返回资源信息。&lt;/p>
&lt;p>由于在 Kad 网络中不能保证强数据一致性，因此会导致返回结果不同，因此下面有几种方式用以增强数据一致性：&lt;/p>
&lt;ol>
&lt;li>查询数据时选择半数相同的数据作为返回值；&lt;/li>
&lt;li>存储数据时带上时间，查询数据时选择最新的数据作为返回结果。&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;strong>参考&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E5%88%86%E6%95%A3%E5%BC%8F%E9%9B%9C%E6%B9%8A%E8%A1%A8" target="_blank" rel="noopener"
>https://zh.wikipedia.org/wiki/%E5%88%86%E6%95%A3%E5%BC%8F%E9%9B%9C%E6%B9%8A%E8%A1%A8&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://en.wikipedia.org/wiki/Kademlia" target="_blank" rel="noopener"
>https://en.wikipedia.org/wiki/Kademlia&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://web.archive.org/web/20120722084813/http://pdos.csail.mit.edu/chord/papers/chord-tn.pdf" target="_blank" rel="noopener"
>https://web.archive.org/web/20120722084813/http://pdos.csail.mit.edu/chord/papers/chord-tn.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf" target="_blank" rel="noopener"
>http://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>DNS 解析失败问题排查</title><link>https://wlynxg.github.io/blog/p/dns-%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/dns-%E8%A7%A3%E6%9E%90%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/</guid><description>&lt;p>&lt;a class="link" href="https://serverfault.com/questions/872316/wierd-arp-issue-with-2-interafces-sharing-same-subnet" target="_blank" rel="noopener"
>https://serverfault.com/questions/872316/wierd-arp-issue-with-2-interafces-sharing-same-subnet&lt;/a>&lt;/p></description></item><item><title>Docker 四种网络模型</title><link>https://wlynxg.github.io/blog/p/docker-%E5%9B%9B%E7%A7%8D%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/docker-%E5%9B%9B%E7%A7%8D%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</guid><description>&lt;h1 id="docker-四种网络模型">Docker 四种网络模型
&lt;/h1>&lt;h2 id="一简介">一、简介
&lt;/h2>&lt;p>为了满足使 Docker 满足复杂业务场景下的网络需求，我们有必要深入了解 Docker 的网络知识，探索 Docker 的多种网络模型。&lt;/p>
&lt;p>Docker 的网络模型主要有四种：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Bridge 模式&lt;/strong>：是 Docker 的默认网络模式，可以使用 &lt;code>–net=bridge&lt;/code> 指定；&lt;/li>
&lt;li>&lt;strong>Host 模式&lt;/strong>：使用 &lt;code>–net=host&lt;/code> 指定；&lt;/li>
&lt;li>&lt;strong>Container 模式&lt;/strong>：使用 &lt;code>–net=container: 容器名称或ID&lt;/code> 指定；&lt;/li>
&lt;li>&lt;strong>None 模式&lt;/strong>：使用 &lt;code>–net=none&lt;/code> 指定。&lt;/li>
&lt;/ul>
&lt;p>下面让我们详细了解一下这几种不同的网络模式！&lt;/p>
&lt;h2 id="二bridge-模式">二、Bridge 模式
&lt;/h2>&lt;p>Bridge 模式是 Docker 默认使用的网络模式。当 Docker 启动时，会自动在主机上创建一个 &lt;code>docker0&lt;/code> 虚拟网桥，实际上是 Linux 的一个 bridge，可以理解为一个软件交换机。它会在挂载到它的网口之间进行转发。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看本机网络配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip addr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker0: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu &lt;span class="m">1500&lt;/span> qdisc noqueue state DOWN group default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether 02:42:51:82:92:0a brd ff:ff:ff:ff:ff:ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> valid_lft forever preferred_lft forever
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 fe80::42:51ff:fe82:920a/64 scope link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> valid_lft forever preferred_lft forever
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Docker 随机分配一个本地未占用的私有网段，这里是 &lt;code>172.17.0.1&lt;/code>，掩码为 &lt;code>255.255.0.0&lt;/code>。此后启动的容器内的网口也会自动分配一个同一网段（&lt;code>172.17.0.0/16&lt;/code>）的地址。&lt;/p>
&lt;p>当创建一个 Docker 容器的时候，同时会创建了一对 &lt;code>veth pair&lt;/code> 接口（当数据包发送到一个接口时，另外一个接口也可以收到相同的数据包）。这对接口一端在容器内，即 &lt;code>eth0&lt;/code>；另一端在本地并被挂载到 &lt;code>docker0&lt;/code> 网桥，名称以 &lt;code>veth&lt;/code> 开头：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动一个容器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -dit ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看网络配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip addr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vethc51f579@if9: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m">1500&lt;/span> qdisc noqueue master docker0 state UP group default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether 5e:fd:53:cc:54:58 brd ff:ff:ff:ff:ff:ff link-netnsid &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 fe80::5cfd:53ff:fecc:5458/64 scope link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> valid_lft forever preferred_lft forever
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入容器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker &lt;span class="nb">exec&lt;/span> -it &lt;span class="o">{{&lt;/span>ID&lt;span class="o">}}&lt;/span> bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装 net-tools&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get install net-tools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看网络配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ifconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">eth0: &lt;span class="nv">flags&lt;/span>&lt;span class="o">=&lt;/span>4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt; mtu &lt;span class="m">1500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet 172.17.0.2 netmask 255.255.0.0 broadcast 172.17.255.255
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ether 02:42:ac:11:00:02 txqueuelen &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>Ethernet&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX packets &lt;span class="m">2452&lt;/span> bytes &lt;span class="m">13783808&lt;/span> &lt;span class="o">(&lt;/span>13.7 MB&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX errors &lt;span class="m">0&lt;/span> dropped &lt;span class="m">0&lt;/span> overruns &lt;span class="m">0&lt;/span> frame &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX packets &lt;span class="m">2012&lt;/span> bytes &lt;span class="m">152399&lt;/span> &lt;span class="o">(&lt;/span>152.3 KB&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX errors &lt;span class="m">0&lt;/span> dropped &lt;span class="m">0&lt;/span> overruns &lt;span class="m">0&lt;/span> carrier &lt;span class="m">0&lt;/span> collisions &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过这种方式，主机可以跟容器通信，容器之间也可以相互通信。Docker 就创建了在主机和所有容器之间一个虚拟共享网络：&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143410.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="三host-模式">三、Host 模式
&lt;/h2>&lt;p>Docker 为了实现网络的隔离，使用了 Network Namespace 对网络进行隔离。但如果启动容器的时候使用host模式，那么这个容器将不会获得一个独立的 Network Namespace，而是和宿主机共用一个 Network Namespace。容器将不会虚拟出自己的网卡，配置自己的IP等，而是使用宿主机的 IP 和端口。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143433.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看最开始的网络配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip addr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 以host模式启动一个容器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -dit -p 80:80 --net host nginx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看网络配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip addr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 未发现多出 veth 接口，网络配置与之前没有任何区别&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>而外界访问容器中的应用，则直接使用 &lt;code>主机IP:80&lt;/code> 即可，不用任何NAT转换，就如直接跑在宿主机中一样。但是，容器的其他方面，如文件系统、进程列表等还是和宿主机隔离的。&lt;/p>
&lt;h2 id="四container-模式">四、Container 模式
&lt;/h2>&lt;p>Container 模式指定新创建的容器和已经存在的一个容器共享一个 Network Namespace，而不是和宿主机共享。新创建的容器不会创建自己的网卡，配置自己的IP，而是和一个指定的容器共享IP、端口范围等。同样，两个容器除了网络方面，其他的如文件系统、进程列表等还是隔离的。两个容器的进程可以通过 lo 网卡设备通信。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143446.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 以默认模式一个容器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -dit --name u1 ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 以 container 模式启动另一个容器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -dit --name u2 --network container:u1 ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看网络配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ifconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 发现只多了一个 veth&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="五none-模式">五、None 模式
&lt;/h2>&lt;p>此模式下容器不参与网络通信，运行于此类容器中的进程仅能访问本地环回接口，仅适用于进程无须网络通信的场景中，例如备份，进程诊断及各种离线任务等。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 以 None 模式运行一个容器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -dit --network none ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入容器查看&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ifconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 只有 lo 网卡&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lo: &lt;span class="nv">flags&lt;/span>&lt;span class="o">=&lt;/span>73&amp;lt;UP,LOOPBACK,RUNNING&amp;gt; mtu &lt;span class="m">65536&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet 127.0.0.1 netmask 255.0.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 ::1 prefixlen &lt;span class="m">128&lt;/span> scopeid 0x10&amp;lt;host&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> loop txqueuelen &lt;span class="m">1000&lt;/span> &lt;span class="o">(&lt;/span>Local Loopback&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX packets &lt;span class="m">29&lt;/span> bytes &lt;span class="m">2569&lt;/span> &lt;span class="o">(&lt;/span>2.5 KiB&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX errors &lt;span class="m">0&lt;/span> dropped &lt;span class="m">0&lt;/span> overruns &lt;span class="m">0&lt;/span> frame &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX packets &lt;span class="m">29&lt;/span> bytes &lt;span class="m">2569&lt;/span> &lt;span class="o">(&lt;/span>2.5 KiB&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX errors &lt;span class="m">0&lt;/span> dropped &lt;span class="m">0&lt;/span> overruns &lt;span class="m">0&lt;/span> carrier &lt;span class="m">0&lt;/span> collisions &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>参考资料：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://vuepress.mirror.docker-practice.com/advanced_network/" target="_blank" rel="noopener"
>高级网络配置 | Docker 从入门到实践 (docker-practice.com)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/xbw_linux123/article/details/81873490" target="_blank" rel="noopener"
>docker容器的四种网络模型_xbw_linux123的博客-CSDN博客_docker 网络模型&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.cnblogs.com/Kit-L/p/13246782.html" target="_blank" rel="noopener"
>Docker的docker0网络 - Kit_L - 博客园 (cnblogs.com)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>HTTP 代理</title><link>https://wlynxg.github.io/blog/p/http-%E4%BB%A3%E7%90%86/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/http-%E4%BB%A3%E7%90%86/</guid><description>&lt;h1 id="http-代理">HTTP 代理
&lt;/h1>&lt;p>HTTP 代理存在两种形式：&lt;/p>
&lt;ul>
&lt;li>第一种是 &lt;a class="link" href="http://tools.ietf.org/html/rfc7230" target="_blank" rel="noopener"
>RFC 7230 - HTTP/1.1: Message Syntax and Routing&lt;/a>描述的普通代理。这种代理扮演的是 “中间人” 角色，对于连接到它的客户端来说，它是服务端；对于要连接的目标服务器来说，它是客户端。它就负责在两端之间来回传送 HTTP 报文，在传送的过程中需要对 HTTP 数据包进行修改；&lt;/li>
&lt;li>第二种是 &lt;a class="link" href="https://tools.ietf.org/html/draft-luotonen-web-proxy-tunneling-01" target="_blank" rel="noopener"
>Tunneling TCP based protocols through Web proxy servers&lt;/a>描述的隧道代理。它通过使用 HTTP 的 CONNECT 方法建立连接，以 HTTP 的方式实现任意基于 TCP 的应用层协议代理。&lt;/li>
&lt;/ul>
&lt;h2 id="普通代理">普通代理
&lt;/h2>&lt;p>普通代理实际上就是一个中间人，同时扮演者客户端和服务端的角色。普通代理会关心 HTTP 数据包，对于每一个 HTTP 数据包都需要修改之后再发送到服务端。&lt;/p>
&lt;p>下图（出自《HTTP 权威指南》）展示了这种行为：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143504.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>对于普通 HTTP 代理，是无法代理 HTTPS 流量的。因为 HTTP 代理本身是一个 HTTP 服务器，没法提供 HTTPS 服务。即使我们将 HTTP 代理直接变成一个 HTTPS 服务器，同样也无法抓取 HTTPS 包。因为 HTTPS 是能够防止中间人攻击的。&lt;/p>
&lt;p>普通代理如果想要实现代理 HTTPS 包，必须要在客户端安装根证书，用于窃取 TLS 交换过程中的双端密钥。这个过程就类似于 Fiddler、Charles等 HTTPS 抓包工具的原理。&lt;/p>
&lt;h2 id="隧道代理">隧道代理
&lt;/h2>&lt;p>隧道代理在某种程度上来说和 HTTP 关系不大，它只是借用了 HTTP 的 CONNECT 方法建立连接。隧道代理实际上和 SOCK 代理更为相似。&lt;/p>
&lt;p>下图（出自《HTTP 权威指南》）展示隧道代理的原理：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143517.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>隧道代理无论是 HTTP 的流量还是 HTTPS 的流量，都能够进行代理。不仅是 HTTP 和 HTTPS，只要是 TCP 或者是 UDP 协议的流量，他都能够代理。&lt;/p>
&lt;p>隧道代理只会无脑转发流量，而不会查看流量，就像一根管子，将两端连接在一起。这也是为什么叫隧道代理的原因。&lt;/p>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>《HTTP 权威指南》&lt;/li>
&lt;/ul></description></item><item><title>HTTP 长连接</title><link>https://wlynxg.github.io/blog/p/http-%E9%95%BF%E8%BF%9E%E6%8E%A5/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/http-%E9%95%BF%E8%BF%9E%E6%8E%A5/</guid><description>&lt;h1 id="http-长连接">HTTP 长连接
&lt;/h1>&lt;h2 id="http-短连接">HTTP 短连接
&lt;/h2>&lt;p>请求 HTTP 时，发送一个HTTP请求就打开一个 TCP 连接，收到响应后就关闭 TCP 连接。&lt;/p>
&lt;p>这种方式就被称为 HTTP 短连接。&lt;/p>
&lt;h2 id="http-长连接-1">HTTP 长连接
&lt;/h2>&lt;p>HTTP 短连接会在每次请求时都新建一个 TCP 连接，这种重复建立 TCP 连接会耗费大量资源。&lt;/p>
&lt;p>如果后续的 HTTP 请求能够复用第一次 HTTP 请求时建立的 TCP 连接，那么就不用浪费大量的资源在 TCP 的建立和销毁上。&lt;/p>
&lt;p>HTTP 长连接技术就实现了这种优化策略。&lt;/p>
&lt;p>HTTP 请求头中，有一个 &lt;code>Connection&lt;/code> 字段，如果要开启长连接，那么就设置 &lt;code>Connection: Keep-Alive&lt;/code>。如果服务器支持 HTTP 长连接，那么也会在响应头中设置&lt;code>Connection: Keep-Alive&lt;/code>；如果服务器不支持长连接，那么则会响应&lt;code>Connection: close&lt;/code>。&lt;/p>
&lt;p>如果服务器支持长连接，那么客户端会复用 TCP 连接，将后续的 HTTP 请求也用同一个 TCP 连接进行发送。&lt;/p>
&lt;p>&lt;code>Keep-Alive&lt;/code> 这个功能在 HTTP 1.0 中默认是关闭的；在 HTTP 1.1 开始则是默认开启的。&lt;/p></description></item><item><title>iOS 后台时对 socket 的处理</title><link>https://wlynxg.github.io/blog/p/ios-%E5%90%8E%E5%8F%B0%E6%97%B6%E5%AF%B9-socket-%E7%9A%84%E5%A4%84%E7%90%86/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/ios-%E5%90%8E%E5%8F%B0%E6%97%B6%E5%AF%B9-socket-%E7%9A%84%E5%A4%84%E7%90%86/</guid><description>&lt;h1 id="ios-后台时对-socket-的处理">iOS 后台时对 socket 的处理
&lt;/h1>&lt;p>在 iOS 平台种，当程序进入后台后会对 TCP/UDP 套接字做处理，这种处理会影响我们在 iOS 端的网络开发，因此需要对其进行了解。&lt;/p>
&lt;p>相关技术文档：https://developer.apple.com/library/archive/technotes/tn2277/_index.html#//apple_ref/doc/uid/DTS40010841-RevisionHistory-DontLinkElementID_1&lt;/p>
&lt;h2 id="基础知识">基础知识
&lt;/h2>&lt;p>iOS 将 socket 根据使用划分为 &lt;strong>listening sockets&lt;/strong> 和 &lt;strong>data sockets&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>listening sockets&lt;/strong>：处于 listen 状态的 TCP socket；&lt;/li>
&lt;li>&lt;strong>data sockets&lt;/strong>：connect 状态的 TCP socket，UDP socket。&lt;/li>
&lt;/ul>
&lt;h2 id="listening-sockets">listening sockets
&lt;/h2>&lt;p>对于处于 listen 状态的 TCP 套接字，在应用进入后台后，socket 会被内核挂起，处于一个特殊的&amp;quot;&lt;strong>暂停状态&lt;/strong>&amp;quot;。&lt;/p>
&lt;p>在&amp;quot;暂停状态&amp;quot;下，内核仍会认为 socket 处于 active 状态。如果有 client 试图连接到该 socket，内核会接收连接，但是该 socket 无法收到连接。在等待一段时间后客户端会放弃连接，返回 &amp;ldquo;&lt;strong>connection refused&lt;/strong>&amp;rdquo; 错误信息。&lt;/p>
&lt;h2 id="data-sockets">data sockets
&lt;/h2>&lt;p>对于 data socket，当 APP 被系统挂起（&lt;strong>suspended&lt;/strong>）时，内核可能会回收该 socket 资源，回收之后所有在该 socket 上的操作都会失效，应用会收到来自内核的 &amp;ldquo;&lt;strong>recvmsg: socket is not connected&lt;/strong>&amp;rdquo; 错误信息。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>因此对于所有类型 socket，最好的处理方式都是在应用进入后台后最好主动关闭它；恢复前台时再重新打开它。&lt;/p></description></item><item><title>IPFS 网络测试</title><link>https://wlynxg.github.io/blog/p/ipfs-%E7%BD%91%E7%BB%9C%E6%B5%8B%E8%AF%95/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/ipfs-%E7%BD%91%E7%BB%9C%E6%B5%8B%E8%AF%95/</guid><description>&lt;h1 id="ipfs-网络测试">IPFS 网络测试
&lt;/h1>&lt;h2 id="说明">说明
&lt;/h2>&lt;p>本测试是为了测试 IPFS DHT 网络在国内使用时的网络情况。&lt;/p>
&lt;p>由于测试环境限制，本测试中手机端网络所处地理位置均在成都。&lt;/p>
&lt;h2 id="测试流程">测试流程
&lt;/h2>&lt;p>设备端：&lt;/p>
&lt;ol>
&lt;li>通过 libp2p 提供的默认 IPFS DHT bootstrap 节点连接到 IPFS 网络；&lt;/li>
&lt;li>在网络中通过 DHT 的查询临近节点的功能搜索网络中节点，并从中筛选出可用作 Relay 的节点，与其建立连接；&lt;/li>
&lt;li>将自身节点信息广播到 IPFS DHT 网络。&lt;/li>
&lt;/ol>
&lt;p>手机端：&lt;/p>
&lt;ol>
&lt;li>设备端通过 libp2p 提供的默认 IPFS DHT bootstrap 节点连接到 IPFS 网络；&lt;/li>
&lt;li>通过 IPFS DHT 网络查询设备端节点信息；&lt;/li>
&lt;li>尝试与设备端建立连接；&lt;/li>
&lt;li>尝试利用 Relay 进行打洞；&lt;/li>
&lt;/ol>
&lt;h2 id="测试结果">测试结果
&lt;/h2>&lt;p>&lt;strong>设备端:&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">&lt;strong>网络环境 \ 操作&lt;/strong>&lt;/th>
&lt;th style="text-align: left">&lt;strong>连接到&lt;/strong> &lt;strong>bootstrap&lt;/strong> &lt;strong>节点耗时&lt;/strong>&lt;/th>
&lt;th style="text-align: left">中继节点筛选耗时&lt;/th>
&lt;th style="text-align: left">&lt;strong>中继****延迟&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>移动宽带&lt;/strong>&lt;/td>
&lt;td style="text-align: left">1s&lt;/td>
&lt;td style="text-align: left">10s&lt;/td>
&lt;td style="text-align: left">150ms~300ms&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>电信宽带&lt;/strong>&lt;/td>
&lt;td style="text-align: left">1s&lt;/td>
&lt;td style="text-align: left">8s&lt;/td>
&lt;td style="text-align: left">150ms~300ms&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>阿里云&lt;/strong>&lt;/td>
&lt;td style="text-align: left">1s&lt;/td>
&lt;td style="text-align: left">11s&lt;/td>
&lt;td style="text-align: left">150ms~300ms&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>手机端:&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">&lt;strong>运营商 \ 操作&lt;/strong>&lt;/th>
&lt;th style="text-align: left">&lt;strong>连接到&lt;/strong> &lt;strong>bootstrap&lt;/strong> &lt;strong>节点耗时&lt;/strong>&lt;/th>
&lt;th style="text-align: left">&lt;strong>查询到服务端节点信息耗时&lt;/strong>&lt;/th>
&lt;th style="text-align: left">&lt;strong>连接到对端节点耗时&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>联通&lt;/strong>&lt;/td>
&lt;td style="text-align: left">1s&lt;/td>
&lt;td style="text-align: left">31s&lt;/td>
&lt;td style="text-align: left">3s&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>电信&lt;/strong>&lt;/td>
&lt;td style="text-align: left">1s&lt;/td>
&lt;td style="text-align: left">29s&lt;/td>
&lt;td style="text-align: left">2s&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>移动&lt;/strong>&lt;/td>
&lt;td style="text-align: left">1s&lt;/td>
&lt;td style="text-align: left">30s&lt;/td>
&lt;td style="text-align: left">3s&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="分析">分析
&lt;/h2>&lt;h3 id="dht-节点和-relay-节点来源">DHT 节点和 Relay 节点来源？
&lt;/h3>&lt;p>查看日志发现，连接的 DHT 节点和找到的中继节点大部分（实测 90% 以上）都是国外的 IP 地址。&lt;/p>
&lt;p>下图是随机选择的几个节点地址进行地理位置查询：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-144333.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-145149.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-145200.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-145208.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="中继节点筛选和查询到服务端节点信息耗时为什么较长">中继节点筛选和查询到服务端节点信息耗时为什么较长？
&lt;/h3>&lt;p>主要有两个原因造成：&lt;/p>
&lt;ol>
&lt;li>当 libp2p 连接到 IPFS 网络时，DHT 模块在启动后，会先执行查询临近节点 DHT 节点池的操作。默认 DHT 节点池子大小为 200 （每个桶 20 个节点，10个桶）个节点，该过程会消耗较长时间；&lt;/li>
&lt;li>当执行查询操作时，会向临近节点发送查询请求。但是由于整个 DHT 网络较为庞大，很难通过一次查询就正好查找到包含设备端节点信息的节点。因此需要多次查询才能查询到对端信息。&lt;/li>
&lt;/ol>
&lt;p>由于设备端只需要执行操作 1，而手机端需要执行操作 1 和 2。因此设备端耗时相比于手机端会短一些。&lt;/p>
&lt;h3 id="中继节点查询为什么这么快">中继节点查询为什么这么快？
&lt;/h3>&lt;p>在默认情况下，libp2p 会根据自身检测到的网络可见性情况而选择是否提供中继服务和 DHT 查询服务。&lt;/p>
&lt;p>默认情况下，当 libp2p 发现节点处于公网可见状态时，会同时开启 DHT 查询服务和 Relay 服务。因此查询到的大部分 DHT 节点（实测在 80% 以上）都可以作为中继服务。&lt;/p>
&lt;p>不过在默认情况下，libp2p 启动 Relay 服务时，会存在资源限制。因此 Relay 节点只能用于传输少量数据。&lt;/p></description></item><item><title>iptables 三表五链</title><link>https://wlynxg.github.io/blog/p/iptables-%E4%B8%89%E8%A1%A8%E4%BA%94%E9%93%BE/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/iptables-%E4%B8%89%E8%A1%A8%E4%BA%94%E9%93%BE/</guid><description>&lt;h1 id="iptables-三表五链">iptables 三表五链
&lt;/h1></description></item><item><title>libp2p peer ID 识别流程</title><link>https://wlynxg.github.io/blog/p/libp2p-peer-id-%E8%AF%86%E5%88%AB%E6%B5%81%E7%A8%8B/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/libp2p-peer-id-%E8%AF%86%E5%88%AB%E6%B5%81%E7%A8%8B/</guid><description>&lt;h1 id="libp2p-peer-id-识别流程">libp2p peer ID 识别流程
&lt;/h1>&lt;p>peer ID 的识别主要是在不安全的连接升级到安全连接阶段完成，peer ID 都是通过连接升级阶段传递公钥获取的。&lt;/p>
&lt;p>libp2p 当前支持两种安全连接，Noise 和 TLS。&lt;/p>
&lt;p>对于 Noise 连接，公钥通过和 Noise 握手数据一起传输时发送到服务端，服务端提取到公钥后再转换为 peer ID。&lt;/p>
&lt;p>对于 TLS 连接，利用 TLS 的 ExtraExtensions 字段携带公钥，服务端从 ExtraExtensions 提取出公钥再转换出客户端 peer ID。&lt;/p></description></item><item><title>libp2p 连接详解</title><link>https://wlynxg.github.io/blog/p/libp2p-%E8%BF%9E%E6%8E%A5%E8%AF%A6%E8%A7%A3/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/libp2p-%E8%BF%9E%E6%8E%A5%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h1 id="整体结构">整体结构
&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-145644.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>libp2p 模块的整体结构如上图所示：&lt;/p>
&lt;ul>
&lt;li>**一个 libp2p 节点可以同时与多个节点建立连接：**如 peer A、peer B等。&lt;/li>
&lt;li>**每个节点可以同时存在多个连接：**如与 peer A 同时建立了 QUIC 连接 A、TCP 连接 B、Relay 连接C，与 peer B 同时建立了 TCP 连接 A、TCP 连接 B、Relay 连接C。&lt;/li>
&lt;li>**每个连接下可以存在多个 Stream：**如 peer A 的 QUIC 连接 A 下面有 stream1、stream2、stream3 等。&lt;/li>
&lt;/ul>
&lt;h1 id="stream-创建过程">Stream 创建过程
&lt;/h1>&lt;p>**Stream 是 libp2p 传输数据的通道。**想要通过使用 libp2p 与对端传输数据，则必须要创建一个到对端的流，通过流进行数据传输。&lt;/p>
&lt;p>下图展示了 libp2p 中创建 stream 的主要逻辑：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-145700.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>下面对流创建过程中的重要步骤进行详细讲解。&lt;/p>
&lt;h2 id="选择连接">选择连接
&lt;/h2>&lt;p>当需要创建流时，本地 libp2p 节点到 peer A 可能有多个可用连接，libp2p 需要从众多连接中挑选出一个连接。&lt;/p>
&lt;p>libp2p 默认的连接排序逻辑为：&lt;/p>
&lt;ul>
&lt;li>先建立的连接 &amp;gt; 后建立的连接；&lt;/li>
&lt;li>直连连接 &amp;gt; 中继连接；&lt;/li>
&lt;li>当前打开 Stream 数量较多的连接 &amp;gt; 当前打开 Stream 数量较少的连接。&lt;/li>
&lt;/ul>
&lt;p>由于 libp2p 的连接选择逻辑较为简单，因此我们对连接排序逻辑进行了部分优化：&lt;/p>
&lt;ul>
&lt;li>先建立的连接 &amp;gt; 后建立的连接；&lt;/li>
&lt;li>Private IP 连接 &amp;gt; Public IP 连接 &amp;gt; 中继连接；&lt;/li>
&lt;li>QUIC &amp;gt; WebTransport &amp;gt; WebRTC &amp;gt; TCP &amp;gt; WebSocket；&lt;/li>
&lt;li>当前打开 Stream 数量较多的连接 &amp;gt; 当前打开 Stream 数量较少的连接。&lt;/li>
&lt;/ul>
&lt;p>由于固定逻辑的排序选择无法适应复杂的网络环境，因此将连接排序函数设置为可自定义，后续可由外层做基于更多指标的连接排序，如连接带宽、丢包率等。&lt;/p>
&lt;h2 id="建立连接">建立连接
&lt;/h2>&lt;p>当本地到对端节点没有可用连接时，libp2p 需要根据地址列表尝试建立连接。&lt;/p>
&lt;p>在建立连接时，由于到 peer A 有多个可能地址，libp2p 需要对这些地址都进行尝试，直到建立一个可用连接或者全部失败。&lt;/p>
&lt;p>在尝试 peer A 的地址列表时，libp2p 首先会对地址列表进行排序.&lt;/p>
&lt;p>libp2p 默认的地址排序逻辑为:&lt;/p>
&lt;ul>
&lt;li>Private IP 地址 &amp;gt; Public IP 地址 &amp;gt; 中继连接地址；&lt;/li>
&lt;li>WebRTC &amp;gt; QUIC IPv6 &amp;gt; QUIC IPv4 &amp;gt; WebTransport IPv6 &amp;gt; WebTransport IPv4 &amp;gt; TCP IPv6 &amp;gt; TCP IPv4。&lt;/li>
&lt;/ul>
&lt;p>对连接地址进行排序后，libp2p 会对所有的地址依次进行连接。但是 libp2p 不会等到连接结果返回再连接下一个。在尝试一个连接后，如果一定延时内（毫秒级别）没有结果返回的话，libp2p 会立即尝试下一个地址。&lt;/p>
&lt;p>当有任意一个地址连接成功后，libp2p 会立即返回当前连接，但是不会终止整个连接过程。直到整个地址列表尝试完成才会终止连接过程。&lt;/p>
&lt;h2 id="触发打洞">触发打洞
&lt;/h2>&lt;p>libp2p 的打洞是由连接事件驱动。&lt;/p>
&lt;p>当成功建立一个连接时，libp2p 会在整个节点内部广播这个事件。libp2p 的打洞模块便会监听该事件。&lt;/p>
&lt;p>打洞模块在收到一个连接建立事件后，会对该事件进行判断：&lt;/p>
&lt;ul>
&lt;li>自身是连接的服务端？&lt;/li>
&lt;li>该连接是 Relay 连接？&lt;/li>
&lt;/ul>
&lt;p>如果满足以上条件，libp2p 会启动打洞逻辑，尝试与该连接所属节点尝试进行打洞。&lt;/p>
&lt;p>libp2p 的默认打洞逻辑仅会在连接建立成功那一刻触发，触发之后如果打洞失败，后续不会再进行尝试。对于运行在 PC 端的 libp2p 来说该逻辑是足够的，因为大部分 PC 端的网络环境不会轻易变化。&lt;/p>
&lt;p>但是对于移动端场景来说是不够的，因为移动端网络变化较为频繁。因此对于打洞模块的触发逻辑需要进行优化：&lt;/p>
&lt;ul>
&lt;li>新增打洞重试事件，当打洞模块监听到该事件后，需要重新对指定节点尝试重新打洞；&lt;/li>
&lt;li>对本机网络进行监听，当本机网络发生改变时触发打洞重试事件；&lt;/li>
&lt;li>启用定时器，定期对打洞失败的节点尝试重新打洞。&lt;/li>
&lt;/ul></description></item><item><title>libp2p 使用与改进</title><link>https://wlynxg.github.io/blog/p/libp2p-%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%94%B9%E8%BF%9B/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/libp2p-%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%94%B9%E8%BF%9B/</guid><description>&lt;h1 id="一使用">一、使用
&lt;/h1>&lt;h2 id="11-网络可见性">1.1 网络可见性
&lt;/h2>&lt;p>libp2p 节点在默认情况下，其节点的网络可见性由 &lt;a class="link" href="https://docs.libp2p.io/concepts/nat/autonat/" target="_blank" rel="noopener"
>AutoNAT &lt;/a>模块和其他节点交互而自动确定。但是 AutoNAT 存在发现时间确认网络可见性时间较长，且需要和较多节点交互的缺点。&lt;/p>
&lt;p>对于设备端、移动端和云端中继节点，网络可见性是预知的，因此需要预设节点网络可见性：&lt;/p>
&lt;ul>
&lt;li>设备端、移动端：设备端和移动端节点默认是工作在 NAT 之后的，预设其网络可见性为 &lt;code>private&lt;/code>；&lt;/li>
&lt;li>云端中继：云端中继节点是具有公网 IP 的，需要预设其网络可见性为 &lt;code>public&lt;/code>。&lt;/li>
&lt;/ul>
&lt;h2 id="12-手动配置地址">1.2 手动配置地址
&lt;/h2>&lt;p>默认情况下，libp2p 节点的地址列表由本地监听地址列表、NAT 映射地址、节点连接中继地址和 AutoNAT 发现地址组成。其中 AutoNAT 发现地址是通过和其他节点交互而确定的（主要是用于发现 NAT 映射地址，类似于传统 NAT 穿透中与 STUN 服务器交互发现 NAT 映射地址）。&lt;/p>
&lt;p>但是 AutoNAT 存在发现时间确认网络可见性时间较长，且需要和较多节点交互的缺点，会导致节点无法第一时间探测到自身外部地址。并且 AutoNAT 发现的地址皆为 IP 形式，无法发现域名形式的地址。&lt;/p>
&lt;p>通过在地址列表中增加手动配置地址的方式可以解决 AutoNAT 存在的问题。&lt;/p>
&lt;ul>
&lt;li>云端中继：手动配置节点公网地址；&lt;/li>
&lt;li>设备端：手动配置节点外部节点能力作为可选项配置。&lt;/li>
&lt;/ul>
&lt;h2 id="13-取消中继节点资源限制">1.3 取消中继节点资源限制
&lt;/h2>&lt;p>libp2p 节点在启用 Relay 能力时，默认情况下会存在资源限制：&lt;a class="link" href="https://github.com/libp2p/go-libp2p/blob/76b266558bb77d71106788f68931ce1ad0adf38a/p2p/protocol/circuitv2/relay/resources.go#L44" target="_blank" rel="noopener"
>source code&lt;/a>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// DefaultResources returns a Resources object with the default filled in.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">DefaultResources&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">Resources&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">Resources&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Limit&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">DefaultLimit&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ReservationTTL&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Hour&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">MaxReservations&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">128&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">MaxCircuits&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">BufferSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2048&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">MaxReservationsPerPeer&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">MaxReservationsPerIP&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">MaxReservationsPerASN&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// DefaultLimit returns a RelayLimit object with the defaults filled in.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">DefaultLimit&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">RelayLimit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">RelayLimit&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Duration&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Minute&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 128K
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于我们的公网中继节点来说，需要取消该限制才能让上层业务正常使用。&lt;/p>
&lt;h2 id="14-启用-natportmap">1.4 启用 NATPortMap
&lt;/h2>&lt;p>NATPortMap 用于在路由器上通过 PCP / NAT-PMP / UPnP 协议进行端口映射。默认情况下，libp2p 未启用 NATPortMap 能力。为了提高打洞成功率，对于设备端默认启用 NATPortMap 能力。&lt;/p>
&lt;h2 id="15-启用-mdns">1.5 启用 mDNS
&lt;/h2>&lt;p>mDNS 用于在局域网发现 libp2p 节点。默认情况下 libp2p 未启用 mDNS 能力。为了方便快速发现局域网中 libp2p 节点信息，对于设备端和移动端默认启用 mDNS 能力。&lt;/p>
&lt;h1 id="二相关改进">二、相关改进
&lt;/h1>&lt;h2 id="21-holepunch">2.1 holepunch
&lt;/h2>&lt;p>libp2p 的 holepunch 模块只是实现了相对基础的 P2P 能力，对于&lt;strong>带有具有防护能力的路由器&lt;/strong> 和 &lt;strong>Port Restricted Cone&lt;/strong> &lt;strong>NAT&lt;/strong> &lt;strong>- Symmetric NAT&lt;/strong> 的打洞能力不足。&lt;/p>
&lt;p>根据调查发现带有具有防护能力的路由器在国内家用环境较为常见。因此对 libp2p holepunch 模块进行了优化，在 libp2p 的 holepunch 打洞阶段结束且打洞失败后，尝试进行高级打洞。流程如下图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-145742.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="22-中继选择与切换">2.2 中继选择与切换
&lt;/h2>&lt;p>由于 libp2p 原生 AutoRelay 模块选择逻辑过于简单，不符合实际需求。因此需要自行实现中继选择逻辑，再通过实例传递的方式覆盖原有中继选择模块。&lt;/p>
&lt;h2 id="23-地址解析服务">2.3 地址解析服务
&lt;/h2>&lt;p>libp2p 原生提供从 mDNS 解析地址和 DHT 解析地址。由于 IPFS 节点大部分在国外，国内用户通过访问 IPFS 速度较慢。因此需要在国内需要提供查询优化服务。&lt;/p>
&lt;h2 id="24-移动端适配优化">2.4 移动端适配优化
&lt;/h2>&lt;p>由于手机操作系统对于 APP 后台管理策略较为严格，因此 libp2p 在手机端运行时遇到了底层 socket 被销毁问题。&lt;/p>
&lt;h2 id="25-mdns-domain-替换">2.5 mDNS domain 替换
&lt;/h2>&lt;p>libp2p 默认是采用一个由 32 ~ 64 字符长度的随机字符串作为 mDNS doamin：&lt;a class="link" href="https://github.com/libp2p/go-libp2p/blob/76b266558bb77d71106788f68931ce1ad0adf38a/p2p/discovery/mdns/mdns.go#L60" target="_blank" rel="noopener"
>source code&lt;/a>。&lt;/p>
&lt;p>为了实现通过 &lt;code>&amp;lt;peer id&amp;gt;.local&lt;/code> 的方式能够直接访问到主机（mDNS标准用法），需要用 peer id 替换该随机字符串。&lt;/p></description></item><item><title>Linux 下 arp_ignore 问题</title><link>https://wlynxg.github.io/blog/p/linux-%E4%B8%8B-arp_ignore-%E9%97%AE%E9%A2%98/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/linux-%E4%B8%8B-arp_ignore-%E9%97%AE%E9%A2%98/</guid><description>&lt;h1 id="linux-下-arp_ignore-问题">Linux 下 arp_ignore 问题
&lt;/h1>&lt;h2 id="问题描述">问题描述
&lt;/h2>&lt;p>在 Linux 主机本地新建一张虚拟网卡（如 TUN、TAP、Bridge等），给主机加上 IP 地址（假设为192.168.123.5）。同一局域网内主机添加相应路由表，执行 &lt;code>ping 192.168.123.5&lt;/code> 的操作，经过实验发现外部主机能够 ping 通 192.168.123.5。&lt;/p>
&lt;p>即使网卡没有启动，依然可以 ping 通。&lt;/p>
&lt;h2 id="问题分析">问题分析
&lt;/h2>&lt;p>经过测试，发现有以下几个特征：&lt;/p>
&lt;ul>
&lt;li>对执行 ping 的局域网主机进行抓包，发现局域网主机发起 ARP 请求时，Linux 主机回复了 ARP 包，回复的 mac 地址是物理网卡真实的 mac 地址；&lt;/li>
&lt;li>多次实验发现，只要 Linux 主机上任意网卡配置了相应 IP，不管对应的网卡有没有开启，局域网主机都可以 ping 通（局域网主机添加了相应路由规则）；&lt;/li>
&lt;li>在 Windows 主机上新建虚拟网卡，执行上面的操作，发现无法 ping 通。&lt;/li>
&lt;/ul>
&lt;p>根据分析猜测应该是 Linux 对 ARP 包的处理逻辑有一些特性。&lt;/p>
&lt;h2 id="linux-源码分析">Linux 源码分析
&lt;/h2>&lt;p>为了更好的了解这个问题，遂决定去看一下 Linux 的内核代码。看的是 Linux 3.10 的代码，源码地址：https://elixir.bootlin.com/linux/v3.10/source&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// net/ipv4/arp.c
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">arp_process&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">sk_buff&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">skb&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Special case: IPv4 duplicate address detection packet (RFC2131) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">sip&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 判断是不是 arp 请求
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">arp&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ar_op&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nf">htons&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ARPOP_REQUEST&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 判断是不是本地地址
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">inet_addr_type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">net&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tip&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RTN_LOCAL&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 判断是否开启 arp_ignore
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nf">arp_ignore&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">in_dev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tip&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">arp_send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ARPOP_REPLY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ETH_P_ARP&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sha&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dev&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">dev_addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sha&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">goto&lt;/span> &lt;span class="n">out&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看路由表：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@ubuntu:~# ip r show table &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">local&lt;/span> 192.168.123.5 dev br0 table &lt;span class="nb">local&lt;/span> proto kernel scope host src 192.168.123.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>192.168.123.5 就是一个本地地址。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">arp_ignore&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">in_device&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">in_dev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__be32&lt;/span> &lt;span class="n">sip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">__be32&lt;/span> &lt;span class="n">tip&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">IN_DEV_ARP_IGNORE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">in_dev&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="cm">/* Reply, the tip is already validated */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="cm">/* Reply only if tip is configured on the incoming interface */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scope&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RT_SCOPE_HOST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Reply only if tip is configured on the incoming interface
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * and is in same subnet as sip
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scope&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RT_SCOPE_HOST&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="cm">/* Do not reply for scope host addresses */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scope&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RT_SCOPE_LINK&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="cm">/* Reserved */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="cm">/* Do not reply */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nf">inet_confirm_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">in_dev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查询内核的 &lt;code>arp_ignore&lt;/code>参数:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@ubuntu:~# cat /proc/sys/net/ipv4/conf/all/arp_ignore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>发现内核的 &lt;code>arp_ignore&lt;/code> 参数为 0，那么代表着 Linux 会回复这个包。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// net/ipv4/arp.c
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">arp_process&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">sk_buff&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">skb&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Special case: IPv4 duplicate address detection packet (RFC2131) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">sip&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 判断是不是 arp 请求
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">arp&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ar_op&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nf">htons&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ARPOP_REQUEST&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 判断是不是本地地址
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">inet_addr_type&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">net&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tip&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RTN_LOCAL&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 判断是否开启 arp_ignore
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nf">arp_ignore&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">in_dev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tip&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 回复网卡 mac
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">arp_send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ARPOP_REPLY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ETH_P_ARP&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sha&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dev&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">dev_addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sha&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">goto&lt;/span> &lt;span class="n">out&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>根据 &lt;code>arp_process&lt;/code> 函数所示，如果内核没有开启 &lt;code>arp_ignore&lt;/code>，那么哪个网卡收到的 arp 包，就会回复那个网卡的 mac 地址 。&lt;/p>
&lt;p>尝试开启 &lt;code>arp_ignore&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/all/arp_ignore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时再去执行 ping 操作，发现此时无法 ping 通 192.168.123.5.&lt;/p></description></item><item><title>NAT 穿透</title><link>https://wlynxg.github.io/blog/p/nat-%E7%A9%BF%E9%80%8F/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/nat-%E7%A9%BF%E9%80%8F/</guid><description>&lt;h1 id="nat-穿透">NAT 穿透
&lt;/h1>&lt;p>NAT可以分为&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对称型：外网端口由源IP，源port，目的IP，目的port共同决定。即同一源IP和源端口，不同的目的IP，端口会被NAT映射为不同的端口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>非对称型：外网端口由源IP，源端口决定。即同一源IP和源端口被NAT映射为同一端口。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>穿透需要根据不同的NAT类型采取不同的策略。
判断NAT类型的方法如下：&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">sequenceDiagram
P1-&amp;gt;&amp;gt;NAT1: 192.168.1.2:1234--&amp;gt;3.3.3.3:8080
NAT1-&amp;gt;&amp;gt;Coordinator: 1.1.1.1:aaaa--&amp;gt;3.3.3.3:8080
P1-&amp;gt;&amp;gt;NAT1: 192.168.1.2:1234--&amp;gt;3.3.3.3:8081
NAT1-&amp;gt;&amp;gt;Coordinator: 1.1.1.1:bbbb--&amp;gt;3.3.3.38081
Coordinator-&amp;gt;&amp;gt;Coordinator: aaaa = bbbb?
&lt;/code>&lt;/pre>&lt;p>如上图所示：&lt;/p>
&lt;ol>
&lt;li>内网机器P1向公网Coordinator的8080端口发送UDP报文&lt;/li>
&lt;li>报文经过NAT1后源端口会映射为aaaa&lt;/li>
&lt;li>公网Coordinator收到报文后可以看到其源端口为aaaa&lt;/li>
&lt;li>P1使用步骤1同样的源端口向Coordinator的另一个端口发送UDP报文&lt;/li>
&lt;li>NAT1收到报文后将源端口映射为bbbb&lt;/li>
&lt;li>公网Coordinator收到报文后可以看到其源端口bbbb&lt;/li>
&lt;li>比较aaaa和bbbb，如果相同则为非对称型NAT，反正则为对称型&lt;/li>
&lt;/ol>
&lt;h1 id="双非对称型nat内网穿透">双非对称型NAT内网穿透
&lt;/h1>&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">sequenceDiagram
P1-&amp;gt;&amp;gt;NAT1: 192.168.1.2:1234--&amp;gt;2.2.2.2:4321 ttl=5
NAT1--&amp;gt;&amp;gt;NAT2: droped
P2-&amp;gt;&amp;gt;NAT2: 192.168.1.2:1234--&amp;gt;1.1.1.1:5678
NAT2-&amp;gt;&amp;gt;NAT1: 2.2.2.2:4321--&amp;gt;1.1.1.1:5678
NAT1-&amp;gt;&amp;gt;P1: 2.2.2.2:4321--&amp;gt;192.168.1.2:1234
&lt;/code>&lt;/pre>&lt;p>如上图所示：
P1和P2为两个内网机器，其内网地址都为192.168.1.2，NAT1和NAT2为非对称型NAT，其外网地址分别为1.1.1.1和2.2.2.2。&lt;/p>
&lt;p>内网穿透步骤如下：&lt;/p>
&lt;ol>
&lt;li>P1和P2绑定任意本地端口（这里为1234），通过coordinator找到其对应的外网端口，并通知对方（这里P1的外网端口5678，P2的外网端口为4321）&lt;/li>
&lt;li>P1发送UDP报文至P2，其TTL设定一个较小的值，确保报文在到达NAT2之前被丢弃&lt;/li>
&lt;li>P2发送UDP报文至P1&lt;/li>
&lt;/ol>
&lt;h1 id="对称-非对称内网穿透">对称-非对称内网穿透
&lt;/h1>&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">sequenceDiagram
P1-&amp;gt;&amp;gt;P2: 192.168.1.2:1234--&amp;gt;2.2.2.2:2000 ttl=5
P1-&amp;gt;&amp;gt;P2: 192.168.1.2:1234--&amp;gt;2.2.2.2:2001 ttl=5
P1-&amp;gt;&amp;gt;P2: 192.168.1.2:1234--&amp;gt;2.2.2.2:2002 ttl=5
P1-&amp;gt;&amp;gt;P2: ...
P2-&amp;gt;&amp;gt;P1: 192.168.1.2:1234--&amp;gt;1.1.1.1:5678
P2-&amp;gt;&amp;gt;P1: 192.168.1.2:1234--&amp;gt;1.1.1.1:5678
P2-&amp;gt;&amp;gt;P1: 192.168.1.2:1234--&amp;gt;1.1.1.1:5678
P2-&amp;gt;&amp;gt;P1: ...
P2-&amp;gt;&amp;gt;P1: msg
&lt;/code>&lt;/pre>&lt;p>如上图，图中省略了NAT1和NAT2&lt;/p>
&lt;p>穿透步骤如下：&lt;/p>
&lt;ol>
&lt;li>通过coordinator确定NAT1为非对称型，NAT2为对称型，得到P1的外网端口（这里为5678）&lt;/li>
&lt;li>P1以固定端口（这里为1234）向P2的不同端口发送大量短TTL报文&lt;/li>
&lt;li>P2向P1的外网端口发送大量报文&lt;/li>
&lt;li>直到P1收到P2发送的报文，此时穿透成功&lt;/li>
&lt;/ol>
&lt;p>原理：
由于对称NAT无法预知外网端口，所以此方法实际是从非对称端出发，去碰撞对称NAT映射的端口&lt;/p></description></item><item><title>NAT 回流问题</title><link>https://wlynxg.github.io/blog/p/nat-%E5%9B%9E%E6%B5%81%E9%97%AE%E9%A2%98/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/nat-%E5%9B%9E%E6%B5%81%E9%97%AE%E9%A2%98/</guid><description>&lt;h1 id="nat-回流问题">NAT 回流问题
&lt;/h1>&lt;h2 id="现象">现象
&lt;/h2>&lt;blockquote>
&lt;p>通过在路由器上进行端口映射，将局域网主机暴露到公网。不在此局域网内的主机可通过公网 IP 直接访问该局域网主机，但是和局域网主机同一个局域网的主机不能通过公网 IP 访问该局域网主机。&lt;/p>
&lt;/blockquote>
&lt;h2 id="原因">原因
&lt;/h2>&lt;p>当同一局域网主机通过公网 IP 访问时，由于路由规则，数据包会被发送到路由器。&lt;/p>
&lt;p>在路由器上此时同时存在两种NAT规则，SNAT和DNAT：&lt;/p>
&lt;ul>
&lt;li>SNAT 主要目的是让是让源地址为内网网段的数据包的源地址转换为 WAN口IP；&lt;/li>
&lt;li>DNAT 主要目的是让目的地址为 WAN 口 IP，且端口为映射的端口的数据包的目的地址转换为内网主机的IP和端口。&lt;/li>
&lt;/ul>
&lt;p>当内网主机通过公网 IP 访问时，在路由器上会同时匹配两条NAT规则，导致数据包的目的IP和源IP都发生改变。从而导致了路由器的丢包。&lt;/p>
&lt;h2 id="解决方案">解决方案
&lt;/h2>&lt;ol>
&lt;li>增加 NAT 规则，让局域网主机访问端口映射主机时把源地址改为路由器 LAN 口地址。这样回包就会经过路由器进行转换，请求主机就能正常处理；&lt;/li>
&lt;li>内网进行 DNS 劫持。外部访问时解析为公网地址，内网访问时解析为内网地址；&lt;/li>
&lt;li>启用 Haripin 模式。在 Hairpin 模式下，内网流量全部会做一次源端口转换（这种会比较影响性能，大多数路由器也不支持这个功能）。&lt;/li>
&lt;/ol></description></item><item><title>Nat 类型探测</title><link>https://wlynxg.github.io/blog/p/nat-%E7%B1%BB%E5%9E%8B%E6%8E%A2%E6%B5%8B/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/nat-%E7%B1%BB%E5%9E%8B%E6%8E%A2%E6%B5%8B/</guid><description>&lt;h1 id="nat-类型探测">NAT 类型探测
&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-145817.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="rfc-5780-和-rfc-3489-对应关系">RFC 5780 和 RFC 3489 对应关系
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-145831.png"
loading="lazy"
alt="image.png"
>&lt;/p></description></item><item><title>NAT 行为测试实验</title><link>https://wlynxg.github.io/blog/p/nat-%E8%A1%8C%E4%B8%BA%E6%B5%8B%E8%AF%95%E5%AE%9E%E9%AA%8C/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/nat-%E8%A1%8C%E4%B8%BA%E6%B5%8B%E8%AF%95%E5%AE%9E%E9%AA%8C/</guid><description>&lt;h1 id="nat-行为测试实验">NAT 行为测试实验
&lt;/h1>&lt;blockquote>
&lt;p>实验目的：测试 NAT 的 Filtering Behavior&lt;/p>
&lt;/blockquote>
&lt;h2 id="实验一测试-c-端-nat-filtering-behavior-老化时间">实验一：测试 C 端 NAT Filtering Behavior 老化时间
&lt;/h2>&lt;p>&lt;strong>实验步骤：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>S 端启动服务进程，等待接收 C 端发送来的数据。S端接收到C端数据后开始递增间隔（每次增加1s）向C端发送数据&lt;/li>
&lt;li>C 端向 S 端发送数据，并等待接收响应，响应接收成功后停止向S端发送数据，转而向一个S1端定时发送数据(防止NAT Mapping Behavior过期)&lt;/li>
&lt;li>找出C端接收不到数据的时间间隔，进行下一步测试&lt;/li>
&lt;li>C 端向 S 端发送数据，并等待接收响应，响应接收成功后停止向S端发送数据&lt;/li>
&lt;li>S 端启动服务进程，等待接收 C 端发送来的数据。S端接收到C端数据后，以最大时间间隔（左右偏移五秒，依次递增）向C端发送数据，判断C端能否收到数据，如果不能收到数据，那么结束实验；如果能收到数据，进行下一步判断&lt;/li>
&lt;li>S 端启动服务进程，等待接收 C 端发送来的数据。S端接收到C端数据后，以C端第一次收到数据的时间到最后一次收到数据的时间间隔（左右偏移十秒，依次递增）向C端发送数据，判断C端能否收到数据，如果不能收到数据，那么结束实验；&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>实验数据：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 测试1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一次收到数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 15:24:01 recv from 116.62.229.23:22345 data: I&lt;span class="s1">&amp;#39;m Server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"># 最后一次接收到数据的时间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">2023/04/21 15:56:35 recv from 116.62.229.23:22345 data: I&amp;#39;&lt;/span>m Server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 15:56:35 use time: 1m2.0594247s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 测试2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一次收到数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 16:01:06 recv from 116.62.229.23:22345 data: I&lt;span class="s1">&amp;#39;m Server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"># 最后一次接收到数据的时间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">2023/04/21 16:37:58 recv from 116.62.229.23:22345 data: I&amp;#39;&lt;/span>m Server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 16:37:58 use time: 1m6.0623072s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 测试3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一次收到数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 16:44:57 recv from 116.62.229.23:22345 data: I&lt;span class="s1">&amp;#39;m Server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"># 最后一次接收到数据的时间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">2023/04/21 17:03:39 recv from 116.62.229.23:22345 data: I&amp;#39;&lt;/span>m Server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 17:03:39 use time: 1m8.062157s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 测试4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一次收到数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 17:08:48 start send data to 116.62.229.23:22346
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最后一次接收到数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 17:10:56 recv from 116.62.229.23:22345 data: I&lt;span class="err">&amp;#39;&lt;/span>m Server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/21 17:10:56 use time: 1m6.062787s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>实验结论：&lt;/strong>&lt;/p>
&lt;p>电信 NAT Filtering Behavior 规则有效时间大约在 1min 左右。&lt;/p>
&lt;h2 id="实验二测试-c-端-nat-mapping-behavior-老化时间">实验二：测试 C 端 NAT Mapping Behavior 老化时间
&lt;/h2>&lt;p>&lt;strong>实验步骤：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>C 端向 STUN 服务器间隔递增（每次递增10s）的方式发送请求，STUN返回公网NAT映射的端口，当返回的映射端口与之前公网端口不同时，代表NAT Mapping Behavior已经过期&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>实现数据：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一次发送数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 12:51:31.097 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>94b69e6bc0c558178c6447135a63c9aa&lt;span class="o">}&lt;/span> wait: 0s, addr: 182.139.187.130:37614
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最后发送数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 13:26:32.053 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>94b69e6bc0c558178c6447135a63c9aa&lt;span class="o">}&lt;/span> wait: 210s, addr: 182.139.187.130:37614
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 13:30:02.108 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>94b69e6bc0c558178c6447135a63c9aa&lt;span class="o">}&lt;/span> 182.139.187.130:37614 182.139.187.130:37655
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一次发送数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 14:41:53.318 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>a0690c47c6cb5817b9ac6a7a8cc5381b&lt;span class="o">}&lt;/span> wait: 100s, addr: 182.139.187.128:19774
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最后发送数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 15:06:03.769 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>a0690c47c6cb5817b9ac6a7a8cc5381b&lt;span class="o">}&lt;/span> wait: 200s, addr: 182.139.187.128:19774
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 15:09:23.809 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>a0690c47c6cb5817b9ac6a7a8cc5381b&lt;span class="o">}&lt;/span> 182.139.187.128:19774 182.139.187.128:19788
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一次发送数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 15:13:04.104 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>d41be8d979cd581708977d6136a21b22&lt;span class="o">}&lt;/span> wait: 180s, addr: 182.139.187.128:19272
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最后发送数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 15:16:04.163 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>d41be8d979cd581708977d6136a21b22&lt;span class="o">}&lt;/span> wait: 190s, addr: 182.139.187.128:19272
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 15:19:14.217 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>d41be8d979cd581708977d6136a21b22&lt;span class="o">}&lt;/span> 182.139.187.128:19272 182.139.187.128:19049
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一次发送数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 16:45:53.822 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>e4757c898ad25817656893318357add7&lt;span class="o">}&lt;/span> wait: 180s, addr: 182.139.187.130:37062
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最后发送数据的时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 16:52:03.930 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>e4757c898ad25817656893318357add7&lt;span class="o">}&lt;/span> wait: 200s, addr: 182.139.187.130:37062
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-24 16:55:23.975 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>e4757c898ad25817656893318357add7&lt;span class="o">}&lt;/span> 182.139.187.130:37062 182.139.187.130:38383
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>实验结论：&lt;/strong>&lt;/p>
&lt;p>根据多次实验得到的数据判断电信运营商的NAT Mapping Behavior规则老化时间在 &lt;strong>3min&lt;/strong> 左右。&lt;/p>
&lt;h2 id="实验三测试-c-端-nat-filtering-behavior--容量">实验三：测试 C 端 NAT Filtering Behavior 容量
&lt;/h2>&lt;p>&lt;strong>实验步骤：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>C 端向 S 端一定范围内服务端端口发送数据，用以在 NAT 上添加 NAT Filtering Behavior 规则，C 端发送完毕后进入等待数据接收状态&lt;/li>
&lt;li>S 端随机选择 20% C端已经发送给服务端的端口列表，新建套接字向 C 端发送数据，判断 C 端是否出现丢包情况&lt;/li>
&lt;li>重复实验，直到找到极限值&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>实验数据：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 尝试用500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-25 10:18:27.571 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>2069eac9fa0b591792bbba1b46be6ff5&lt;span class="o">}&lt;/span> send over, use 8.0016ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/25 10:18:34 execute &lt;span class="m">0&lt;/span> times,loss packet: 0.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-25 11:33:03.031 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>2069eac9fa0b591792bbba1b46be6ff5&lt;span class="o">}&lt;/span> send over, use 12.9997ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/25 11:33:10 execute &lt;span class="m">5&lt;/span> times,loss packet: 0.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 尝试用800&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-25 15:39:54.627 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>d470a967851d59170818856cef2101d2&lt;span class="o">}&lt;/span> send over, use 14.3895ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/25 15:40:01 execute &lt;span class="m">0&lt;/span> times,loss packet: 0.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-25 15:50:01.753 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>d470a967851d59170818856cef2101d2&lt;span class="o">}&lt;/span> send over, use 12.3033ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/25 16:00:00 execute &lt;span class="m">1&lt;/span> times,loss packet: 0.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-25 16:10:00.249 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>d470a967851d59170818856cef2101d2&lt;span class="o">}&lt;/span> send over, use 15ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/25 16:12:01 execute &lt;span class="m">2&lt;/span> times,loss packet: 20.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-25 16:52:10.521 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>d470a967851d59170818856cef2101d2&lt;span class="o">}&lt;/span> send over, use 13.362ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023/04/25 16:54:29 execute &lt;span class="m">5&lt;/span> times,loss packet: 22.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-04-25 17:04:29.983 &lt;span class="o">[&lt;/span>INFO&lt;span class="o">]&lt;/span> &lt;span class="o">{&lt;/span>d470a967851d59170818856cef2101d2&lt;span class="o">}&lt;/span> send over, use 11.7844ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>实验结论：&lt;/strong>&lt;/p>
&lt;p>根据实验发现当产生发包量为 500 时（500条 NAT Filtering Behavior）， 运营商 NAT 没有出现对流量进行风控情况；当产生发包量为 800 时（800条 NAT Filtering Behavior）， 运营商 NAT 出现了流量进行风控情况。&lt;/p>
&lt;p>根据实验，500 条是一个较为合适的NAT Filtering Behavior数量。&lt;/p></description></item><item><title>Noise 协议握手模式详解</title><link>https://wlynxg.github.io/blog/p/noise-%E5%8D%8F%E8%AE%AE%E6%8F%A1%E6%89%8B%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/noise-%E5%8D%8F%E8%AE%AE%E6%8F%A1%E6%89%8B%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h1 id="noise-协议握手模式详解">Noise 协议握手模式详解
&lt;/h1>&lt;h2 id="一noise协议简介">一、Noise协议简介
&lt;/h2>&lt;p>Noise是一个基于 Diffie-Hellman（DH）密钥交换的加密协议框架，旨在提供一种灵活而安全的加密通信方式。Noise通过定义不同的握手模式（Handshake Patterns），来满足不同应用场景下的安全需求。这些模式决定了如何在两个参与方之间交换密钥以建立安全通信会话。&lt;/p>
&lt;h2 id="二握手模式概述">二、握手模式概述
&lt;/h2>&lt;p>Noise协议提供了一系列握手模式，每种模式都有其特定的用途和安全属性。以下是这些模式的简要概述：&lt;/p>
&lt;h3 id="1-基本概念">1. 基本概念
&lt;/h3>&lt;p>在深入分析各个模式之前,我们需要理解一些基本概念:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>静态密钥对(s)&lt;/strong>: 长期使用的公私钥对&lt;/li>
&lt;li>&lt;strong>临时密钥对(e)&lt;/strong>: 每次会话新生成的公私钥对&lt;/li>
&lt;li>&lt;strong>预共享密钥(psk)&lt;/strong>: 双方提前约定的密钥&lt;/li>
&lt;li>&lt;strong>握手消息&lt;/strong>: 用于建立安全通道的初始消息交换&lt;/li>
&lt;li>&lt;strong>传输数据&lt;/strong>: 握手完成后的加密通信&lt;/li>
&lt;/ul>
&lt;h3 id="2-基本模式">2. &lt;strong>基本模式&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>NN&lt;/strong>：双方都没有静态密钥，仅使用临时密钥进行DH交换。&lt;/li>
&lt;li>&lt;strong>NK&lt;/strong>：发起方没有静态密钥，但知道响应方的静态公钥，支持零RTT加密。&lt;/li>
&lt;li>&lt;strong>NX&lt;/strong>：发起方没有静态密钥，响应方在握手过程中发送其静态公钥。&lt;/li>
&lt;li>&lt;strong>XN&lt;/strong>：发起方在握手过程中发送其静态公钥，响应方没有静态密钥。&lt;/li>
&lt;li>&lt;strong>XK&lt;/strong>：双方交换静态公钥，提供双向认证和零RTT加密。&lt;/li>
&lt;li>&lt;strong>XX&lt;/strong>：双方在握手过程中交换静态公钥，提供双向认证。&lt;/li>
&lt;li>&lt;strong>KN&lt;/strong>：响应方已知发起方的静态公钥，支持零RTT加密。&lt;/li>
&lt;li>&lt;strong>KK&lt;/strong>：双方都已知对方的静态公钥，支持双向认证和零RTT加密。&lt;/li>
&lt;li>&lt;strong>KX&lt;/strong>：发起方已知响应方的静态公钥，响应方在握手过程中发送其静态公钥。&lt;/li>
&lt;li>&lt;strong>IN&lt;/strong>：发起方在第一次消息中立即发送其静态公钥，减少或没有身份隐藏。&lt;/li>
&lt;li>&lt;strong>IK&lt;/strong>：发起方立即发送其静态公钥，响应方的静态公钥已知给发起方。&lt;/li>
&lt;li>&lt;strong>IX&lt;/strong>：发起方立即发送其静态公钥，响应方在握手过程中发送其静态公钥。&lt;/li>
&lt;/ul>
&lt;h3 id="3-延迟模式">3. &lt;strong>延迟模式&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>NK1&lt;/strong>、&lt;strong>XK1&lt;/strong>、&lt;strong>XX1&lt;/strong>等：这些模式在握手过程中推迟了认证DH操作的执行。&lt;/li>
&lt;/ul>
&lt;h3 id="4-预共享密钥psk模式">4. &lt;strong>预共享密钥（PSK）模式&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Npsk0&lt;/strong>、&lt;strong>Kpsk0&lt;/strong>、&lt;strong>Xpsk1&lt;/strong>等：加入了预共享密钥（PSK），以增强安全性。&lt;/li>
&lt;/ul>
&lt;h3 id="5-其他模式">5. &lt;strong>其他模式&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Fallback模式&lt;/strong>：允许在握手失败时回退到其他模式。&lt;/li>
&lt;/ul>
&lt;h2 id="三握手流程与适用场景分析">三、握手流程与适用场景分析
&lt;/h2>&lt;h3 id="1-nn模式">1. &lt;strong>NN模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; e] --&amp;gt; B[Responder &amp;lt;- e, ee]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>临时或匿名通信&lt;/strong>：如在线聊天室、即时通讯应用中的临时会话。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>一些即时通讯应用，如Signal的匿名模式。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择NN模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>简单、快速，不需要任何身份认证，适合不需要长期通信的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="2-nk模式">2. &lt;strong>NK模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Responder &amp;lt;- s] --&amp;gt; B[...]
B --&amp;gt; C[Initiator -&amp;gt; e, es]
C --&amp;gt; D[Responder &amp;lt;- e, ee]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>零RTT加密&lt;/strong>：如VPN客户端连接到已知服务器。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>VPN软件，如OpenVPN或WireGuard。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择NK模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供零RTT加密，适合需要立即加密数据的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="3-nx模式">3. &lt;strong>NX模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; e] --&amp;gt; B[Responder &amp;lt;- e, ee, s, es]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>客户端到服务器连接&lt;/strong>：如在线服务的客户端需要验证服务器身份。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>在线游戏客户端连接到服务器。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择NX模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供响应方认证，适合需要验证服务端身份但不提供零RTT加密的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="4-xn模式">4. &lt;strong>XN模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; e] --&amp;gt; B[Responder &amp;lt;- e, ee]
B --&amp;gt; C[Initiator -&amp;gt; s, se]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>客户端认证&lt;/strong>：如客户端需要向服务器证明自己的身份。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>云存储客户端认证。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择XN模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供发起方认证，适用于需要客户端认证的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="5-xk模式">5. &lt;strong>XK模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Responder &amp;lt;- s] --&amp;gt; B[...]
B --&amp;gt; C[Initiator -&amp;gt; e, es]
C --&amp;gt; D[Responder &amp;lt;- e, ee]
D --&amp;gt; E[Initiator -&amp;gt; s, se]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>双向认证和零RTT加密&lt;/strong>：如安全的客户端-服务器通信。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>安全的邮件客户端或云服务。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择XK模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供双向认证和零RTT加密，适合需要高安全性和立即加密通信的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="6-xx模式">6. &lt;strong>XX模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; e] --&amp;gt; B[Responder &amp;lt;- e, ee, s, es]
B --&amp;gt; C[Initiator -&amp;gt; s, se]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>双向认证&lt;/strong>：如VPN连接、安全的P2P通信。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>VPN软件如WireGuard。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择XX模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供双向认证，适用于需要双方都验证身份的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="7-kn模式">7. &lt;strong>KN模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; s] --&amp;gt; B[...]
B --&amp;gt; C[Initiator -&amp;gt; e]
C --&amp;gt; D[Responder &amp;lt;- e, ee, se]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>零RTT加密&lt;/strong>：如服务器主动联系已知的客户端。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>企业内部的自动更新服务。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择KN模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供零RTT加密，适合需要立即加密通信的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="8-kk模式">8. &lt;strong>KK模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; s] --&amp;gt; B[Responder &amp;lt;- s]
B --&amp;gt; C[...]
C --&amp;gt; D[Initiator -&amp;gt; e, es, ss]
D --&amp;gt; E[Responder &amp;lt;- e, ee, se]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>高安全性需求&lt;/strong>：如企业内网通信。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>企业级VPN或安全通信软件。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择KK模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供双向认证和零RTT加密，适合需要极高安全性的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="9-kx模式">9. &lt;strong>KX模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; s] --&amp;gt; B[...]
B --&amp;gt; C[Initiator -&amp;gt; e]
C --&amp;gt; D[Responder &amp;lt;- e, ee, se, s, es]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>安全的客户端-服务器通信&lt;/strong>：如需要双向认证的在线服务。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>安全的云存储服务。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择KX模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供双向认证，适合需要验证双方身份的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="10-in模式">10. &lt;strong>IN模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; e, s] --&amp;gt; B[Responder &amp;lt;- e, ee, se]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>客户端主动认证&lt;/strong>：如客户端需要立即验证身份。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>在线支付或银行客户端。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择IN模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供发起方立即认证，适用于需要立即验证身份的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="11-ik模式">11. &lt;strong>IK模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Responder &amp;lt;- s] --&amp;gt; B[...]
B --&amp;gt; C[Initiator -&amp;gt; e, es, s, ss]
C --&amp;gt; D[Responder &amp;lt;- e, ee, se]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>双向认证&lt;/strong>：如VPN连接。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>VPN软件如OpenVPN。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择IK模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供双向认证和零RTT加密，适合需要立即验证身份和加密通信的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="12-ix模式">12. &lt;strong>IX模式&lt;/strong>
&lt;/h3>&lt;p>&lt;strong>握手流程：&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
A[Initiator -&amp;gt; e, s] --&amp;gt; B[Responder &amp;lt;- e, ee, se, s, es]
&lt;/code>&lt;/pre>&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>双向认证&lt;/strong>：如高安全性需求的P2P通信。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>安全的P2P文件共享软件。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择IX模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供双向认证，适用于需要双方立即验证身份的场景。&lt;/li>
&lt;/ul>
&lt;h2 id="四延迟模式与psk模式">四、延迟模式与PSK模式
&lt;/h2>&lt;h3 id="1-延迟模式">1. &lt;strong>延迟模式&lt;/strong>
&lt;/h3>&lt;p>延迟模式（如NK1、XK1、XX1等）推迟了认证操作，提供更好的身份隐藏和灵活性。&lt;/p>
&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>身份隐藏&lt;/strong>：如在某些情况下需要更好的身份隐藏或更灵活的认证方式。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>需要高匿名性的通信软件。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择延迟模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>提供更好的身份隐藏和认证灵活性，适合需要保护参与方身份的场景。&lt;/li>
&lt;/ul>
&lt;h3 id="2-psk模式">2. &lt;strong>PSK模式&lt;/strong>
&lt;/h3>&lt;p>预共享密钥（PSK）模式（如Npsk0、Kpsk0、Xpsk1等）引入了预共享密钥，以增强安全性。&lt;/p>
&lt;p>&lt;strong>适用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>额外安全层&lt;/strong>：如IoT设备通信、企业内部网络通信。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例软件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>智能家居设备的通信协议。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么选择PSK模式&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>使用预共享密钥增强安全性，适用于需要额外安全层或预共享密钥的场景。&lt;/li>
&lt;/ul>
&lt;h2 id="五总结">五、总结
&lt;/h2>&lt;p>Noise协议通过提供多种握手模式，满足了不同应用场景下的安全需求：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>基本模式&lt;/strong>：如NN、NK、NX等，适用于基本的加密需求。&lt;/li>
&lt;li>&lt;strong>延迟模式&lt;/strong>：如NK1、XK1等，提供更好的身份隐藏和灵活性。&lt;/li>
&lt;li>&lt;strong>PSK模式&lt;/strong>：如Npsk0、Kpsk0等，适用于需要预共享密钥增强安全性的场景。&lt;/li>
&lt;/ul>
&lt;p>选择合适的握手模式需要考虑认证需求、前向安全性需求、是否需要零RTT加密，以及是否需要使用预共享密钥等因素。每个模式都为不同的使用场景提供了特定的安全属性和通信方式，确保了通信的安全性和效率。通过本报告的分析，第一次接触Noise的人可以更好地理解这些模式的应用场景和选择依据。&lt;/p></description></item><item><title>P2P 产品能力调研</title><link>https://wlynxg.github.io/blog/p/p2p-%E4%BA%A7%E5%93%81%E8%83%BD%E5%8A%9B%E8%B0%83%E7%A0%94/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/p2p-%E4%BA%A7%E5%93%81%E8%83%BD%E5%8A%9B%E8%B0%83%E7%A0%94/</guid><description>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>网络环境 \ 产品&lt;/th>
&lt;th>WebRTC&lt;/th>
&lt;th>libp2p&lt;/th>
&lt;th>syncthing&lt;/th>
&lt;th>tailscale&lt;/th>
&lt;th>PP透（绿联）&lt;/th>
&lt;th>节点小宝&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>IPv6 - IPv6&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Port Restricted Cone NAT - Port Restricted Cone NAT&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>一端位于 NAT 下，一端位于 NAT 上&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Port Restricted Cone NAT - Symmetric NAT&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>支持端口预测&lt;/td>
&lt;td>不支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>具有防护规则的防火墙(需要先用短TTL打洞)&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>能够依靠 UPnP/NAT-PMP/PCP进行端口映射的路由器&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>P2P 经验</title><link>https://wlynxg.github.io/blog/p/p2p-%E7%BB%8F%E9%AA%8C/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/p2p-%E7%BB%8F%E9%AA%8C/</guid><description>&lt;ul>
&lt;li>大部分手机的 IPv6 是可以直通的&lt;/li>
&lt;li>运营商没有对 IPv6 设置防火墙，IPv6 的防火墙是在光猫上设置的&lt;/li>
&lt;/ul></description></item><item><title>P2P 时遇到端口被改的坑</title><link>https://wlynxg.github.io/blog/p/p2p-%E6%97%B6%E9%81%87%E5%88%B0%E7%AB%AF%E5%8F%A3%E8%A2%AB%E6%94%B9%E7%9A%84%E5%9D%91/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/p2p-%E6%97%B6%E9%81%87%E5%88%B0%E7%AB%AF%E5%8F%A3%E8%A2%AB%E6%94%B9%E7%9A%84%E5%9D%91/</guid><description>&lt;h1 id="p2p-时遇到端口被改的坑">P2P 时遇到端口被改的坑
&lt;/h1>&lt;p>在尝试 Port Restricted Cone NAT 到 Port Restricted Cone NAT 的 P2P 时遇到一个很灵异的现象，UDP 套接字发往 STUN 的数据包能够正常回包，但是进行打洞时出现了端口被更改的现象。路由器上 tcpdump 抓包如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>15:56:16.555958 IP 11.11.11.11.1065 &amp;gt; 22.22.22.22.23215: UDP, length 40
15:56:17.307864 IP 11.11.11.11.60094 &amp;gt; 33.33.33.33.3478: UDP, length 40
15:56:17.309272 IP 11.11.11.11.60094 &amp;gt; 44.44.44.44.3478: UDP, length 40
&lt;/code>&lt;/pre>&lt;p>可以发现发往 33.33.33.33 和 44.44.44.44 两个 STUN 服务器的 src port 是正常的，但是发往 22.22.22.22 的 src port 却被改为了 1065.&lt;/p>
&lt;p>经过排查后，发现如果 22.22.22.22:23215 在 11.11.11.11.60094 发送过数据包之前到达了路由器，路由器会将端口更改为另外一个随机端口（应该是一种防火墙规则，防止udp端口被外部碰撞攻击）。&lt;/p>
&lt;p>解决方案：&lt;/p>
&lt;p>&lt;strong>更改打洞流程，打洞时采用短 ttl 包打开本地防火墙，再使用正常 ttl 的包来建立连接。&lt;/strong>&lt;/p></description></item><item><title>P2P 网络技术详解</title><link>https://wlynxg.github.io/blog/p/p2p-%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/p2p-%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h1 id="一p2p技术概述">一、P2P技术概述
&lt;/h1>&lt;h2 id="11-什么是p2p技术">1.1 什么是P2P技术
&lt;/h2>&lt;h3 id="p2p的定义与特点">P2P的定义与特点
&lt;/h3>&lt;p>P2P（Peer-to-Peer，点对点）技术是一种网络通信模型，它允许网络中的参与者（节点）直接相互通信和共享资源，而无需依赖中央服务器作为中介。在P2P网络中，每个节点既可以是资源的提供者（服务器），也可以是资源的消费者（客户端）。&lt;/p>
&lt;p>&lt;strong>P2P网络的主要特点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>去中心化&lt;/strong>：没有中央控制节点，网络中的每个节点地位平等&lt;/li>
&lt;li>&lt;strong>自组织性&lt;/strong>：网络能够自动适应节点的加入和离开&lt;/li>
&lt;li>&lt;strong>资源共享&lt;/strong>：计算能力、存储空间和网络带宽等资源可以在节点间共享&lt;/li>
&lt;li>&lt;strong>可扩展性&lt;/strong>：随着节点数量增加，网络整体资源和服务能力也相应增加&lt;/li>
&lt;li>&lt;strong>冗余性&lt;/strong>：数据和服务通常在多个节点上复制，提高了系统的容错能力&lt;/li>
&lt;/ul>
&lt;h3 id="与传统cs架构的区别">与传统C/S架构的区别
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>特性&lt;/th>
&lt;th>传统C/S（客户端/服务器）架构&lt;/th>
&lt;th>P2P（点对点）架构&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>中心化程度&lt;/td>
&lt;td>高度中心化，服务器作为核心&lt;/td>
&lt;td>去中心化，节点平等&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>资源分布&lt;/td>
&lt;td>资源集中在服务器端&lt;/td>
&lt;td>资源分布在所有参与节点&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>可扩展性&lt;/td>
&lt;td>受限于服务器性能，扩展成本高&lt;/td>
&lt;td>随节点增加自然扩展，成本分摊&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>稳定性&lt;/td>
&lt;td>服务器故障导致整体服务中断&lt;/td>
&lt;td>单个节点故障影响有限&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>带宽利用&lt;/td>
&lt;td>服务器带宽易成为瓶颈&lt;/td>
&lt;td>带宽需求分散到各节点&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>实现复杂度&lt;/td>
&lt;td>相对简单，架构清晰&lt;/td>
&lt;td>较为复杂，需处理各种网络环境&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>安全控制&lt;/td>
&lt;td>集中式安全控制，相对容易&lt;/td>
&lt;td>分散式安全控制，挑战较大&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="p2p网络的优势与挑战">P2P网络的优势与挑战
&lt;/h3>&lt;p>&lt;strong>优势：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>高效利用资源&lt;/strong>：充分利用边缘节点的计算能力、存储空间和网络带宽&lt;/li>
&lt;li>&lt;strong>降低成本&lt;/strong>：减少对中央服务器的依赖，降低基础设施和运维成本&lt;/li>
&lt;li>&lt;strong>提高可靠性&lt;/strong>：去中心化结构消除了单点故障风险&lt;/li>
&lt;li>&lt;strong>自然扩展&lt;/strong>：网络容量随着参与节点的增加而自然增长&lt;/li>
&lt;li>&lt;strong>抗审查性&lt;/strong>：分布式特性使得网络更难被审查或关闭&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>挑战：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>网络穿透问题&lt;/strong>：NAT和防火墙环境下的连接建立困难&lt;/li>
&lt;li>&lt;strong>节点发现与管理&lt;/strong>：如何高效发现和管理动态变化的节点&lt;/li>
&lt;li>&lt;strong>安全与信任&lt;/strong>：缺乏中央权威，节点间的信任建立机制复杂&lt;/li>
&lt;li>&lt;strong>服务质量保障&lt;/strong>：节点性能和连接质量参差不齐，难以保证一致的服务质量&lt;/li>
&lt;li>&lt;strong>法律与合规&lt;/strong>：在某些地区面临法律监管挑战，特别是涉及版权内容时&lt;/li>
&lt;li>&lt;strong>资源不均衡&lt;/strong>：&amp;ldquo;搭便车&amp;quot;现象（部分节点只消费不贡献）影响网络效率&lt;/li>
&lt;/ol>
&lt;h2 id="12-p2p技术的发展历程">1.2 P2P技术的发展历程
&lt;/h2>&lt;h3 id="早期p2p应用1999-2005">早期P2P应用（1999-2005）
&lt;/h3>&lt;p>&lt;strong>Napster时代（1999-2001）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>1999年，Shawn Fanning创建了Napster，这是第一个广为人知的P2P文件共享应用&lt;/li>
&lt;li>Napster采用了中心化索引 + P2P传输的混合架构，用户通过中央服务器查找音乐文件，但文件传输直接在用户之间进行&lt;/li>
&lt;li>2001年因版权诉讼而被迫关闭，但它开创了P2P文件共享的先河&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>去中心化探索（2000-2003）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Gnutella（文件共享网络）&lt;/strong>：2000年发布，首个完全去中心化的P2P网络，采用泛洪（Flooding）搜索机制&lt;/li>
&lt;li>&lt;strong>Freenet&lt;/strong>：2000年推出，注重匿名性和抗审查能力的 P2P 网络&lt;/li>
&lt;li>&lt;strong>Kazaa/FastTrack&lt;/strong>：2001年推出，引入了超级节点（Supernode）概念，形成两级架构&lt;/li>
&lt;li>&lt;strong>eDonkey/eMule&lt;/strong>：2002年出现，引入了服务器网络和文件哈希技术&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>BitTorrent革命（2003-2005）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>2001年，Bram Cohen设计了BitTorrent协议，2003年开始广泛应用&lt;/li>
&lt;li>创新性地引入了分片下载、稀有优先和互惠机制（tit-for-tat）&lt;/li>
&lt;li>显著提高了大文件分发效率，至今仍是最成功的P2P协议之一&lt;/li>
&lt;/ul>
&lt;h3 id="现代p2p技术的演进2005-2020">现代P2P技术的演进（2005-2020）
&lt;/h3>&lt;p>&lt;strong>结构化P2P网络（2005-2010）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>**分布式哈希表（DHT）**技术成熟：Kademlia、Chord、Pastry等算法广泛应用&lt;/li>
&lt;li>BitTorrent网络引入DHT，摆脱了对Tracker服务器的依赖&lt;/li>
&lt;li>学术界和工业界对P2P网络路由和查找算法进行了深入研究&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>P2P流媒体时代（2008-2015）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>P2P技术在视频直播领域得到应用：PPTV、PPS影音等&lt;/li>
&lt;li>P2P-CDN混合架构出现，如迅雷看看、阿里云PCDN&lt;/li>
&lt;li>WebRTC（2011年发布）标准化了浏览器中的P2P通信能力&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>区块链与去中心化应用（2009-至今）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>2009年比特币网络上线，将P2P技术与密码学、共识机制相结合&lt;/li>
&lt;li>2015年以太坊推出，支持智能合约，催生了大量去中心化应用（DApps）&lt;/li>
&lt;li>IPFS（星际文件系统）在2015年推出，致力于构建去中心化的文件存储和访问系统&lt;/li>
&lt;/ul>
&lt;h3 id="未来发展趋势">未来发展趋势
&lt;/h3>&lt;p>&lt;strong>Web3.0与去中心化互联网&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>基于区块链的去中心化身份和数据所有权&lt;/li>
&lt;li>去中心化存储和计算平台的普及&lt;/li>
&lt;li>用户直接控制和变现自己的数据和创作内容&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>边缘计算与P2P结合&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>利用边缘设备的闲置计算资源构建分布式计算网络&lt;/li>
&lt;li>降低云计算中心的负载和延迟&lt;/li>
&lt;li>物联网设备间的直接P2P通信和协作&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>5G/6G网络中的应用&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>高带宽、低延迟网络环境为P2P应用提供更好基础&lt;/li>
&lt;li>设备直连（Device-to-Device，D2D）通信技术与P2P结合&lt;/li>
&lt;li>移动边缘计算（MEC）中的P2P资源共享&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>安全与隐私增强&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>零知识证明等密码学技术在P2P网络中的应用&lt;/li>
&lt;li>去中心化隐私保护机制的发展&lt;/li>
&lt;li>抗量子计算的P2P安全协议研究&lt;/li>
&lt;/ul>
&lt;h1 id="二nat类型详解">二、NAT类型详解
&lt;/h1>&lt;h2 id="31-nat基础知识">3.1 NAT基础知识
&lt;/h2>&lt;p>NAT（Network Address Translation，网络地址转换）是一种在IP数据包通过路由器或防火墙时重写来源IP地址或目的IP地址的技术。它主要用于解决IPv4地址短缺问题，允许多个设备通过单个公网IP地址访问互联网。&lt;/p>
&lt;p>&lt;strong>NAT的主要作用：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>地址复用&lt;/strong>：允许多个私有IP地址共享一个公网IP地址&lt;/li>
&lt;li>&lt;strong>网络安全&lt;/strong>：隐藏内部网络结构，防止外部直接访问内部主机&lt;/li>
&lt;li>&lt;strong>负载均衡&lt;/strong>：在某些实现中用于分发流量&lt;/li>
&lt;li>&lt;strong>端口复用&lt;/strong>：通过端口号区分不同内部主机的连接&lt;/li>
&lt;/ul>
&lt;h3 id="nat的工作原理">NAT的工作原理
&lt;/h3>&lt;p>NAT通常部署在网络边界设备（如路由器）上，当内部主机向外部发送数据包时，NAT设备会：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>来源地址转换&lt;/strong>：将私有来源IP和端口替换为公网IP和临时端口&lt;/li>
&lt;li>&lt;strong>维护转换表&lt;/strong>：记录转换关系（内部IP:端口 -&amp;gt; 公网IP:端口）&lt;/li>
&lt;li>&lt;strong>转发数据包&lt;/strong>：将修改后的数据包发送到外部网络&lt;/li>
&lt;li>&lt;strong>反向转换&lt;/strong>：当响应数据包返回时，根据转换表还原为内部IP和端口&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>基本NAT转换流程示例：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>内部主机A (192.168.1.10:1234) 发送数据到外部服务器B (8.8.8.8:53)&lt;/li>
&lt;li>NAT设备将来源改为公网IP (203.0.113.1:5678)&lt;/li>
&lt;li>响应从B返回到203.0.113.1:5678&lt;/li>
&lt;li>NAT根据表转换为192.168.1.10:1234并转发&lt;/li>
&lt;/ul>
&lt;h3 id="公网ip与私网ip">公网IP与私网IP
&lt;/h3>&lt;p>&lt;strong>公网IP（Public IP）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>由IANA分配的全球唯一IP地址&lt;/li>
&lt;li>可在互联网上直接路由&lt;/li>
&lt;li>示例：203.0.113.1（IPv4），2001:db8::1（IPv6）&lt;/li>
&lt;li>特点：唯一性、全球可达性、需注册分配&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>私网IP（Private IP）&lt;/strong>：
RFC 1918定义的保留地址段，不在互联网上路由&lt;/p>
&lt;ul>
&lt;li>常见范围：&lt;/li>
&lt;li>10.0.0.0/8 (10.0.0.0 - 10.255.255.255)&lt;/li>
&lt;li>172.16.0.0/12 (172.16.0.0 - 172.31.255.255)&lt;/li>
&lt;li>192.168.0.0/16 (192.168.0.0 - 192.168.255.255)&lt;/li>
&lt;li>特点：可重复使用、仅限内部网络、需NAT转换才能访问互联网&lt;/li>
&lt;/ul>
&lt;p>公网IP资源有限，导致NAT的广泛应用，而私网IP允许多个网络独立使用相同地址空间。&lt;/p>
&lt;h2 id="32-nat类型分类">3.2 NAT类型分类
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/07/25/20250725-090607.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="33-nat类型检测原理">3.3 NAT类型检测原理
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/07/25/20250725-090522.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h1 id="四不同网络环境下的p2p连接原理">四、不同网络环境下的P2P连接原理
&lt;/h1>&lt;h2 id="41-公网---公网">4.1 公网 - 公网
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140449.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 A 和客户端 B 都位于公网。客户端 A 和 客户端 B 通过以下步骤即可建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 根据从中心服务器获取的信息发现 B 具有公网地址，于是 A 直接向 B 发起连接；（PS： 可以互换连接顺序）&lt;/li>
&lt;li>客户端 B 根据从中心服务器获取的信息发现 A 具有公网地址，因此 B 等待 A 进行连接；&lt;/li>
&lt;/ol>
&lt;h2 id="42-nat---公网">4.2 NAT - 公网
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140506.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 B 位于公网，有公网 IP，客户端 A 位于任意 NAT 后。客户端 A 和 客户端 B 通过以下步骤即可建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 B 根据从中心服务器获取的信息发现 A 位于 NAT 后，因此 B 等待 A 进行连接；&lt;/li>
&lt;li>客户端 A 根据从中心服务器获取的信息发现 B 位于公网，于是 A 直接向 B 发起连接；&lt;/li>
&lt;/ol>
&lt;h2 id="43-客户端位于同一nat后">4.3 客户端位于同一NAT后
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140531.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 A 和客户端 B 位于同一任意 NAT 后。客户端 A 和 客户端 B 通过以下步骤即可建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 根据从中心服务器获取的信息发现 B 的公网地址和自身相同，猜测 B 可能与自己位于同一内网中，于是 A 尝试直接向 B 发起连接；（PS： 可以互换连接顺序）&lt;/li>
&lt;li>客户端 B 根据从中心服务器获取的信息发现 A 的公网地址和自身相同，猜测 A 可能与自己位于同一内网中，因此 B 等待 A 进行连接；&lt;/li>
&lt;/ol>
&lt;h2 id="44-客户端分属与不同nat下">4.4 客户端分属与不同NAT下
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140547.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 A 和客户端 B 都位于 NAT 后。客户端 A 和 客户端 B 能否建立 P2P 连接和各自所属 NAT 类型有关。&lt;/p>
&lt;h3 id="441-任意-nat---full-cone-nat或restricted-cone-nat">4.4.1 任意 NAT - (Full Cone NAT或Restricted Cone NAT)
&lt;/h3>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140600.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>Full Cone NAT、Restricted Cone NAT和Port Restricted Cone NAT都有同样的映射规则：&lt;strong>本地地址和端口不变时，映射到 NAT 上的端口不变&lt;/strong>。&lt;/p>
&lt;p>当一端位于 Full Cone NAT或Restricted Cone NAT 下，另一端为任意 NAT 时，通过以下方式可以建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 持续向客户端 B 在 NAT 网关2 上映射的公网地址和端口发送数据。对于 Restricted Cone NAT，由于NAT 网关2上还没有放开相应的过滤规则，因此前面客户端A发向客户端B的部分数据包会被丢失；&lt;/li>
&lt;li>客户端 B 向客户端 A 的公网地址和端口发送数据，用以更新 NAT 网关2的过滤规则；&lt;/li>
&lt;li>当NAT 网关2的过滤规则被刷新后，客户端 A 发向客户端B的数据便会被 NAT 网关2 接收，并转发给客户端 B；&lt;/li>
&lt;li>接收数据时，客户端 B 就会知道客户端在 NAT 网关1上映射的端口和地址，此时客户端 B向NAT 网关1上映射的端口和地址发包，客户端A即可收到。此时客户端 A 和客户端 B 成功建立 P2P连接。&lt;/li>
&lt;/ol>
&lt;h3 id="442-easy-nat---easy-nat">4.4.2 Easy NAT - Easy NAT
&lt;/h3>&lt;blockquote>
&lt;p>Easy NAT 代指 RFC3489 所定义的 Full Cone NAT、Restricted Cone NAT、Port Restricted Cone NAT。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140612.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>当两端都位于 Easy NAT 下时，通过以下方式可以建立 P2P 连接（任意 NAT - (Full Cone NAT或Restricted Cone NAT) 流程类似）：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 持续向客户端 B 在 NAT 网关2 上映射的公网地址和端口发送数据，由于NAT 网关2上还没有放开相应的过滤规则，因此前面客户端A发向客户端B的部分数据包会被丢失；&lt;/li>
&lt;li>客户端 B 向客户端 A 的公网地址和端口发送数据，用以更新 NAT 网关2的过滤规则；&lt;/li>
&lt;li>当NAT 网关2的过滤规则被刷新后，客户端 A 发向客户端B的数据便会被 NAT 网关2 接收，并转发给客户端 B；&lt;/li>
&lt;li>接收数据时，客户端 B 就会知道客户端在 NAT 网关1上映射的端口和地址，此时客户端 B向NAT 网关1上映射的端口和地址发包，客户端A即可收到。此时客户端 A 和客户端 B 成功建立 P2P连接。&lt;/li>
&lt;/ol>
&lt;h3 id="443-symmetric-nat---port-restricted-cone-nat">4.4.3 Symmetric NAT - Port Restricted Cone NAT
&lt;/h3>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140627.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>当客户端 A 位于 Symmetric NAT 下，客户端 B 位于 Port Restricted Cone NAT 时，通过以下方式可以建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 持续向客户端 B 在 NAT 网关2 上映射的公网地址和端口发送数据。由于 NAT 网关2 没有放开相应的过滤规则，因此客户端 A 发往客户端 B 的数据包会被 NAT 网关2拦截，无法到达客户端 B；；&lt;/li>
&lt;li>由于客户端 A 在NAT 网关1上映射的端点(IP:Port 中 Port 未知)，因此客户端 B 无法向一个明确的端点发送数据包来更新 NAT 网关2 过滤规则。&lt;/li>
&lt;/ol>
&lt;p>此时就需要通过以下几种方案来让碰撞，让客户端 A 发向客户端 B 的包顺利通过 NAT 网关2。&lt;/p>
&lt;p>&lt;strong>全端口开放&lt;/strong>&lt;/p>
&lt;p>虽然我们不知道客户端 A 在映射NAT 网关1上映射的端口是多少，但是我们知道，他映射的端口一定是 1024 - 65535 内其中一个，并且一定不是 A 连接中心服务器时使用的端口。&lt;/p>
&lt;p>我们可以顺序构造目的端口为 1024 - 65535 的短 TTL 包（短 TTL 包可以让包不走到公网，仅仅用于打开防火墙规则，以免被识别为 Dos 攻击），让 NAT 网关2 开放所有可能端口（相当于将 Port Restricted Cone NAT 变为 Restricted Cone NAT）。&lt;/p>
&lt;blockquote>
&lt;p>但是经过实际测试发现该方法效果不佳，主要有以下原因：&lt;/p>
&lt;ul>
&lt;li>需要构造大量数据包：平均需要发包 32256 个包 才能碰撞到 客户端 A 在 NAT 网关1上映射的端口。假设客户端 B 的发包速率为 100 p/s，那么就需要五分半才能碰撞到端口；&lt;/li>
&lt;li>容易触发运营商 QoS 限制：经过实际测试，发现一定时间内无效数据包过多时，运营商会对客户端 B 的包进行大量丢弃，导致丢包率上升。严重情况下运营商会直接全部丢弃客户端 B 的数据包。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>端口预测&lt;/strong>&lt;/p>
&lt;p>在部分 NAT 上，端口映射具有一定规律 。&lt;/p>
&lt;p>比如发往目的 IP 1 时，映射的端口为 22001；发往目的 IP 2 时，映射的端口为 22002；那么我们可以猜测，发往目的 IP 3时使用的端口可能为 22003。&lt;/p>
&lt;p>使用此种方案，需要客户端 A 向多个服务器请求来确认自身映射端口，从这些映射的端口中找到可能存在的端口变化规律。&lt;/p>
&lt;blockquote>
&lt;p>此种方法具有一定可行性，但和 NAT 行为有关，不是一个通用解决方案。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>生日攻击&lt;/strong>&lt;/p>
&lt;p>在前面的“全端口开放”方法中，客户端 A 只在 NAT 网关1 上映射了一个端口。但是实际情况下，客户端 A 可以在 NAT 网关1 上映射多个端口。&lt;/p>
&lt;p>根据概率论的 &lt;a class="link" href="https://en.wikipedia.org/wiki/Birthday_problem" target="_blank" rel="noopener"
>生日悖论&lt;/a>，可以写发现客户端 A 映射的端口、客户端 B 发包数量与成功概率之间的关系，公式如下所示：&lt;/p>
$$
\begin{array}{c}
P_{success} = 1 - \frac{C_{64,512}^{ports} \times C_{64,512-ports}^{packets }}{C_{64,512}^{ports} \times C_{64,512}^{packets}}
\end{array}
$$&lt;p>
根据上面的公式绘制出三维图如图所示：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141224.svg"
loading="lazy"
alt="data.svg"
>&lt;/p>
&lt;p>根据函数图我们可以发现，当客户端 A 映射在公网上的端口越多时，建立连接所需的发包数越少，下表中列举了部分数据：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>使用端口数\发包数&lt;/th>
&lt;th>50%&lt;/th>
&lt;th>80%&lt;/th>
&lt;th>90%&lt;/th>
&lt;th>99%&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>10&lt;/td>
&lt;td>4320&lt;/td>
&lt;td>9590&lt;/td>
&lt;td>13268&lt;/td>
&lt;td>23807&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>50&lt;/td>
&lt;td>888&lt;/td>
&lt;td>2043&lt;/td>
&lt;td>2903&lt;/td>
&lt;td>5675&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>100&lt;/td>
&lt;td>446&lt;/td>
&lt;td>1030&lt;/td>
&lt;td>1468&lt;/td>
&lt;td>2902&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>200&lt;/td>
&lt;td>223&lt;/td>
&lt;td>517&lt;/td>
&lt;td>738&lt;/td>
&lt;td>1467&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>300&lt;/td>
&lt;td>149&lt;/td>
&lt;td>345&lt;/td>
&lt;td>493&lt;/td>
&lt;td>981&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>根据表中数据可以发现：假设客户端 A 占用100个端口，客户端 B 以 100 p/s 的速度进行探测，那么要达到50%的概率仅需 6s，达到 99% 也只需 29s！&lt;/p>
&lt;blockquote>
&lt;p>根据上面的数据分析可以发现生日攻击是在 Symmetric NAT - Port Restricted Cone NAT 进行 P2P 打洞时一个较为优秀的方案。&lt;/p>
&lt;/blockquote>
&lt;h3 id="444-symmetric-nat---symmetric-nat">4.4.4 Symmetric NAT - Symmetric NAT
&lt;/h3>&lt;p>当两端都是 Symmetric NAT 时，复杂度比 Symmetric NAT - Port Restricted Cone NAT 有了成倍的增长。&lt;/p>
&lt;p>假设使用上面的“全端口开发”方案，那么就需要发包 4,161,798,144 次，耗费时间需要一年以上；&lt;/p>
&lt;p>即使是使用“生日攻击”方案，一端打开 256 个端口，要达到 50% 的概率需要 54,000 次发包，按照 100 p/s 的发包速率需要9分钟；达到 99% 的成功率需要 170,000 次发包，时间上需要30分钟左右。&lt;/p>
&lt;p>即使时间上可以忍受，但 NAT 网关却无法忍受这么多次的发包行为。因为每发一次包，就需要在 NAT 的 session 表上记录一条，想创建一条成功的连接，大部分情况下都会打爆 NAT 的session 表。&lt;/p>
&lt;p>因此对于 Symmetric NAT - Symmetric NAT 网络类型，连接建立方案&lt;strong>只能选择中继服务器模式&lt;/strong>。&lt;/p>
&lt;h2 id="45-客户端位于同一大-nat-下但不属于同一内网">4.5 客户端位于同一大 NAT 下，但不属于同一内网
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141314.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 A 和客户端 B 位于同一任意大 NAT 后，但是分属于大 NAT 下的两个小子网中。客户端 A 和 客户端 B 需要通过以下步骤建立连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 根据从中心服务器获取的信息发现 B 的公网地址和自身相同，猜测 B 可能与自己位于同一内网中，于是 A 尝试直接向 B 发起连接。但是由于 A 和 B不在同一内网中，&lt;strong>因此连接建立失败&lt;/strong>。客户端 A 通过中心服务器通知 B 连接建立失败，需要进行下一步尝试；&lt;/li>
&lt;li>客户端 A 向 B 暴露的公网 IP 和端口直接发送请求。如果NAT 网关不支持 Hairpin 模式，那么这个&lt;strong>数据包会被直接丢弃，导致数据包无法到达 NAT 网关2&lt;/strong>；如果 NAT 网关开启了 Hairpin 模式，A 发向 B 的流量会被 NAT 网关转发给 NAT 网关2，流程进入下一步；&lt;/li>
&lt;li>当数据包到达 NAT 网关2后，下面的流程就和 “客户端分属与不同NAT下”时的打洞行为一致了。&lt;/li>
&lt;/ol>
&lt;h2 id="46-多层-nat">4.6 多层 NAT
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141330.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在网络中，存在设备在多层NAT后的情况。&lt;/p>
&lt;p>对于这种多层NAT而言，真正有影响的是最靠近公网的那一个 NAT 网关和最靠近设备的那一个 NAT 网关，其余的 NAT 对于客户端和服务端来说都是不可见的，连接不会关心到底经过了多少层NAT。&lt;/p>
&lt;p>但是多层 NAT 并非完全没有影响，准确来说，多层NAT 影响的是客户端的端口映射行为。客户端发出的端口映射请求，只有最靠近客户端的那层 NAT 设备会做出响应。其他的NAT设备不会收到客户端的端口映射请求。但是端口映射要产生作用的话，需要的是最靠近公网的 NAT 网关执行端口映射才行。&lt;/p>
&lt;h1 id="五tcp-p2p实现原理">五、TCP P2P实现原理
&lt;/h1>&lt;h2 id="51-tcp-p2p-的优势">5.1 TCP P2P 的优势
&lt;/h2>&lt;p>市面上实现 P2P 的产品主要都是以 UDP 协议为主。因为 UDP 是无连接的，能够往任意地址发包，便于实现 P2P 的能力。&lt;/p>
&lt;p>但是 UDP 同时也是不可靠的，如果想要实现可靠传输得自己基于 UDP 去实现可靠传输协议，例如 QUIC、KCP、SCTP 等基于 UDP 实现的可靠连接。&lt;/p>
&lt;p>但是基于 UDP 实现的可靠传输是位于应用层，运行在用户态的。&lt;/p>
&lt;p>而 TCP 协议是操作系统网络栈原生支持的，而且经过这么多年在操作系统内核层面的优化，TCP 性能是十分能打的，如果我们能够基于 TCP 建立 P2P 连接，对于我们应用层来说就会省事很多了。&lt;/p>
&lt;h2 id="52-实现原理">5.2 实现原理
&lt;/h2>&lt;p>要想实现基于 TCP 的 P2P，那么 TCP 也必须像 UDP 那样向不同地址建立连接时使用同一个 Src IP + Src Port。&lt;/p>
&lt;p>要实现这个效果就需要使用 Linux 中的端口重用技术。端口重用技术运行我们使用同一个 Src IP + Src Port 向不同的目的地址发起 TCP 连接。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;syscall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ResolveTCPAddr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;:34567&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dialer&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Dialer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">LocalAddr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Control&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">network&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">RawConn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Control&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span> &lt;span class="kt">uintptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetsockoptInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SO_REUSEADDR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetsockoptInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">listen&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ListenConfig&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Control&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">network&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">RawConn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Control&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span> &lt;span class="kt">uintptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetsockoptInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SO_REUSEADDR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetsockoptInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">listen&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;:34567&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;start listen at %s ...&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Addr&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Accept&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;accept new conn: %s -&amp;gt; %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RemoteAddr&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LocalAddr&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dialer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Dial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stun server&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s -&amp;gt; %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">conn1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LocalAddr&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">conn1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RemoteAddr&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;输入对端地址: &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">peer&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scanln&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">peer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;对端地址: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">peer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancel&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dialer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">DialContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">peer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">cancel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;第 %d 次连接 %s 失败: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">peer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s -&amp;gt; %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LocalAddr&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RemoteAddr&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面的 Demo 中，TCP dial 和 listen 在同一个 Src IP + Src Port 上，进行多次尝试之后就能达到与 UDP 一样的 P2P 打洞效果。&lt;/p></description></item><item><title>Socket Takeover</title><link>https://wlynxg.github.io/blog/p/socket-takeover/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/socket-takeover/</guid><description>&lt;h1 id="socket-takeover">Socket Takeover
&lt;/h1>&lt;p>在 Meta 的&lt;a class="link" href="https://dl.acm.org/doi/pdf/10.1145/3387514.3405885" target="_blank" rel="noopener"
>《Zero Downtime Release:Disruption-free Load Balancing of a Multi-Billion User Website》&lt;/a>论文中提到了一种 &lt;strong>Socket Takeover&lt;/strong> 技术，&lt;/p>
&lt;p>该技术能够 &lt;strong>将一个打开的 Socket FD 从旧进程传递到新进程&lt;/strong>。&lt;/p>
&lt;h2 id="相关技术">相关技术
&lt;/h2>&lt;h3 id="file-descriptor">file descriptor
&lt;/h3>&lt;p>要理解这项技术，首先要明白 Linux 的 file descriptor。file descriptor （简称 fd）是一个抽象的指示符，以一个非负整数来表示。fd 和底层文件系统中的文件进行绑定，fd 只在打开文件的进程有效。&lt;/p>
&lt;p>如果把 fd 当作一个普通的值传递给其他进程用于打开，其他进程是无法使用这个 fd 的。&lt;/p>
&lt;h3 id="unix-domain-socket">Unix domain socket
&lt;/h3>&lt;p>Unix domain socket（简称 uds）是在 unix 环境下的一种特殊的 socket。uds 地址采用路径名的形式。与网络套接字不同，跨 Unix 域套接字的 I/O 不涉及底层设备上的操作（这使得 Unix 域套接字比在同一主机上执行 IPC 的网络套接字要快得多）。&lt;/p>
&lt;p>uds 在传输数据时，除了能够像普通的 socket 那样传输数据，还能够进行特殊的 &lt;strong>辅助数据传输（Ancillary Data Transfer ）&lt;/strong>。&lt;/p>
&lt;p>在 Linux 上可以进行三种类型的辅助数据传输：&lt;/p>
&lt;ul>
&lt;li>&lt;code>SCM_RIGHTS&lt;/code>&lt;/li>
&lt;li>&lt;code>SCM_CREDENTIALS&lt;/code>&lt;/li>
&lt;li>&lt;code>SCM_SECURITY&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>在实现 Socket Takeover 时就需要使用到 &lt;code>SCM_RIGHTS&lt;/code>。&lt;/p>
&lt;p>&lt;code>SCM_RIGHTS&lt;/code> 能够在不同进程之间传递 file descriptor（更准确来说是传递的文件所有权，类似于父子进程之间能够共享文件）。&lt;/p>
&lt;h2 id="实现">实现
&lt;/h2>&lt;p>下面是用 Go 实现的 Socket Takeover demo，该demo中包含三个模块：client（TCP 客户端）、server（TCP server）和forward（UDS Server）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// client.go
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ResolveTCPAddr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;127.0.0.1:8080&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">DialTCP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;seq num %d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buff&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buff&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;recv data: %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">buff&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// server.go
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;syscall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">forwardSocket&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;/tmp/forward_demo.sock&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ResolveTCPAddr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;127.0.0.1:8080&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenTCP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">AcceptTCP&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">conn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">conn&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">TCPConn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">forwardConn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">conn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;fail to forward conn: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buff&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buff&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;recv data: %s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">buff&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;process by server&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">forwardConn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">conn&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">TCPConn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UnixAddr&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">forwardSocket&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Net&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;unix&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">unixConn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">DialUnix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;unix&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">unixConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">File&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">datan&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">oobn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">unixConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteMsgUnix&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;forward&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">UnixRights&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fd&lt;/span>&lt;span class="p">())),&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d bytes and %d oob written successfully&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">datan&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">oobn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// forward.go
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;errors&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;syscall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">forwardSocket&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;/tmp/forward_demo.sock&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Unlink&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">forwardSocket&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">unixListener&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenUnix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;unix&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UnixAddr&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">forwardSocket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Net&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;unix&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">unixConn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">unixListener&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">AcceptUnix&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">unixToTCP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">unixConn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buff&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buff&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp %s -&amp;gt; %s: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LocalAddr&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RemoteAddr&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">buff&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;process by forward&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">unixToTCP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">conn&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UnixConn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">TCPConn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">msg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">oob&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">128&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">128&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">msgn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">oobn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadMsgUnix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">msg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">oob&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">msgn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">oobn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;recv msg: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">msg&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="nx">msgn&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">cmsgs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseSocketControlMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">oob&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nx">oobn&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cmsgs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;expected 1 control message; got %d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cmsgs&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseUnixRights&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">cmsgs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fds&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">errors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;invalid number of fds received&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fd&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">uintptr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fds&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">fd&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">errors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not open fd&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fileConn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FileConn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fileConn&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">TCPConn&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>socket 地址和端口复用</title><link>https://wlynxg.github.io/blog/p/socket-%E5%9C%B0%E5%9D%80%E5%92%8C%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/socket-%E5%9C%B0%E5%9D%80%E5%92%8C%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8/</guid><description>&lt;h1 id="socket-地址和端口复用">socket 地址和端口复用
&lt;/h1>&lt;h2 id="socket-概念">socket 概念
&lt;/h2>&lt;p>TCP/UDP socket 是由以下五元组唯一地识别的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">{&lt;span class="nt">&amp;lt;protocol&amp;gt;&lt;/span>, &lt;span class="nt">&amp;lt;src&lt;/span> &lt;span class="err">addr&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>, &lt;span class="nt">&amp;lt;src&lt;/span> &lt;span class="err">port&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>, &lt;span class="nt">&amp;lt;dest&lt;/span> &lt;span class="err">addr&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>, &lt;span class="nt">&amp;lt;dest&lt;/span> &lt;span class="err">port&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>对于任意连接，五元组组成不能完全相同。否则操作系统无法区别这些连接。&lt;/strong>&lt;/p>
&lt;p>socket 的协议是在用 &lt;code>socket()&lt;/code> 初始化的时候就设置好的。&lt;/p>
&lt;p>源地址（source address）和源端口（source port）是在调用 &lt;code>bind()&lt;/code> 的时候设置。&lt;/p>
&lt;p>目的地址（destination address）和目的端口（destination port）是在调用 &lt;code>connect()&lt;/code> 的时候设置。&lt;/p>
&lt;p>其中 UDP 是无连接的，UDP socket 可以在未与目的端口连接的情况下使用。但 UDP 也可以在某些情况下先与目的地址和端口建立连接后使用。在使用无连接 UDP 发送数据的情况下，如果没有显式地调用bind()，操作系统会在第一次发送数据时自动将 UDP socket 与本机的地址和某个端口绑定（否则的话程序无法接受任何远程主机回复的数据）。同样的，一个没有绑定地址的 TCP socket 也会在建立连接时被自动绑定一个本机地址和端口。&lt;/p>
&lt;p>如果我们手动绑定一个端口，我们可以将socket绑定至端口0，绑定至端口0的意思是让系统自己决定使用哪个端口（一般是从一组操作系统特定的提前决定的端口数范围中），所以也就是任何端口的意思。同样的，我们也可以使用一个通配符来让系统决定绑定哪个源地址（ipv4通配符为0.0.0.0，ipv6通配符为::）。而与端口不同的是，一个socket可以被绑定到主机上所有接口所对应的地址中的任意一个。基于连接在本socket的目的地址和路由表中对应的信息，操作系统将会选择合适的地址来绑定这个socket，并用这个地址来取代之前的通配符IP地址。&lt;/p>
&lt;p>在默认情况下，任意两个socket不能被绑定在同一个源地址和源端口组合上。比如说我们将 socketA 绑定在 A:X 地址，将 socketB 绑定在 B:Y 地址，其中A和B是IP地址，X和Y是端口。那么在A==B的情况下X!=Y必须满足，在X==Y的情况下A!=B必须满足。需要注意的是，如果某一个socket被绑定在通配符IP地址下，那么事实上本机所有IP都会被系统认为与其绑定了。例如一个socket绑定了0.0.0.0:21，在这种情况下，任何其他socket不论选择哪一个具体的IP地址，其都不能再绑定在21端口下。因为通配符IP0.0.0.0与所有本地IP都冲突。&lt;/p>
&lt;h2 id="so_reuseaddr">SO_REUSEADDR
&lt;/h2>&lt;p>如果在一个socket绑定到某一地址和端口之前设置了其SO_REUSEADDR的属性，那么除非本socket与产生了尝试与另一个socket绑定到完全相同的源地址和源端口组合的冲突，否则的话这个socket就可以成功的绑定这个地址端口对。这听起来似乎和之前一样。但是其中的关键字是完全。SO_REUSEADDR主要改变了系统对待通配符IP地址冲突的方式。&lt;/p>
&lt;p>如果不用SO_REUSEADDR的话，如果我们将socketA绑定到0.0.0.0:21，那么任何将本机其他socket绑定到端口21的举动（如绑定到192.168.1.1:21）都会导致EADDRINUSE错误。因为0.0.0.0是一个通配符IP地址，意味着任意一个IP地址，所以任何其他本机上的IP地址都被系统认为已被占用。如果设置了SO_REUSEADDR选项，因为0.0.0.0:21和192.168.1.1:21并不是完全相同的地址端口对（其中一个是通配符IP地址，另一个是一个本机的具体IP地址），所以这样的绑定是可以成功的。需要注意的是，无论socketA和socketB初始化的顺序如何，只要设置了SO_REUSEADDR，绑定都会成功；而只要没有设置SO_REUSEADDR，绑定都不会成功。&lt;/p></description></item><item><title>Socks5 代理</title><link>https://wlynxg.github.io/blog/p/socks5-%E4%BB%A3%E7%90%86/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/socks5-%E4%BB%A3%E7%90%86/</guid><description>&lt;h1 id="socks5-代理">Socks5 代理
&lt;/h1>&lt;blockquote>
&lt;p>SOCKS是一种网络传输协议，名字取自 SOCKetS，主要用于客户端与外网服务器之间通讯的中间传递。&lt;/p>
&lt;p>Socks5 是 Socks 协议的第五个版本，在 Socks4 的基础上增加了 UDP 转发和认证功能。&lt;/p>
&lt;/blockquote>
&lt;p>Socks 的流程为：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150010.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="实现代码">实现代码
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;span class="lnt">219
&lt;/span>&lt;span class="lnt">220
&lt;/span>&lt;span class="lnt">221
&lt;/span>&lt;span class="lnt">222
&lt;/span>&lt;span class="lnt">223
&lt;/span>&lt;span class="lnt">224
&lt;/span>&lt;span class="lnt">225
&lt;/span>&lt;span class="lnt">226
&lt;/span>&lt;span class="lnt">227
&lt;/span>&lt;span class="lnt">228
&lt;/span>&lt;span class="lnt">229
&lt;/span>&lt;span class="lnt">230
&lt;/span>&lt;span class="lnt">231
&lt;/span>&lt;span class="lnt">232
&lt;/span>&lt;span class="lnt">233
&lt;/span>&lt;span class="lnt">234
&lt;/span>&lt;span class="lnt">235
&lt;/span>&lt;span class="lnt">236
&lt;/span>&lt;span class="lnt">237
&lt;/span>&lt;span class="lnt">238
&lt;/span>&lt;span class="lnt">239
&lt;/span>&lt;span class="lnt">240
&lt;/span>&lt;span class="lnt">241
&lt;/span>&lt;span class="lnt">242
&lt;/span>&lt;span class="lnt">243
&lt;/span>&lt;span class="lnt">244
&lt;/span>&lt;span class="lnt">245
&lt;/span>&lt;span class="lnt">246
&lt;/span>&lt;span class="lnt">247
&lt;/span>&lt;span class="lnt">248
&lt;/span>&lt;span class="lnt">249
&lt;/span>&lt;span class="lnt">250
&lt;/span>&lt;span class="lnt">251
&lt;/span>&lt;span class="lnt">252
&lt;/span>&lt;span class="lnt">253
&lt;/span>&lt;span class="lnt">254
&lt;/span>&lt;span class="lnt">255
&lt;/span>&lt;span class="lnt">256
&lt;/span>&lt;span class="lnt">257
&lt;/span>&lt;span class="lnt">258
&lt;/span>&lt;span class="lnt">259
&lt;/span>&lt;span class="lnt">260
&lt;/span>&lt;span class="lnt">261
&lt;/span>&lt;span class="lnt">262
&lt;/span>&lt;span class="lnt">263
&lt;/span>&lt;span class="lnt">264
&lt;/span>&lt;span class="lnt">265
&lt;/span>&lt;span class="lnt">266
&lt;/span>&lt;span class="lnt">267
&lt;/span>&lt;span class="lnt">268
&lt;/span>&lt;span class="lnt">269
&lt;/span>&lt;span class="lnt">270
&lt;/span>&lt;span class="lnt">271
&lt;/span>&lt;span class="lnt">272
&lt;/span>&lt;span class="lnt">273
&lt;/span>&lt;span class="lnt">274
&lt;/span>&lt;span class="lnt">275
&lt;/span>&lt;span class="lnt">276
&lt;/span>&lt;span class="lnt">277
&lt;/span>&lt;span class="lnt">278
&lt;/span>&lt;span class="lnt">279
&lt;/span>&lt;span class="lnt">280
&lt;/span>&lt;span class="lnt">281
&lt;/span>&lt;span class="lnt">282
&lt;/span>&lt;span class="lnt">283
&lt;/span>&lt;span class="lnt">284
&lt;/span>&lt;span class="lnt">285
&lt;/span>&lt;span class="lnt">286
&lt;/span>&lt;span class="lnt">287
&lt;/span>&lt;span class="lnt">288
&lt;/span>&lt;span class="lnt">289
&lt;/span>&lt;span class="lnt">290
&lt;/span>&lt;span class="lnt">291
&lt;/span>&lt;span class="lnt">292
&lt;/span>&lt;span class="lnt">293
&lt;/span>&lt;span class="lnt">294
&lt;/span>&lt;span class="lnt">295
&lt;/span>&lt;span class="lnt">296
&lt;/span>&lt;span class="lnt">297
&lt;/span>&lt;span class="lnt">298
&lt;/span>&lt;span class="lnt">299
&lt;/span>&lt;span class="lnt">300
&lt;/span>&lt;span class="lnt">301
&lt;/span>&lt;span class="lnt">302
&lt;/span>&lt;span class="lnt">303
&lt;/span>&lt;span class="lnt">304
&lt;/span>&lt;span class="lnt">305
&lt;/span>&lt;span class="lnt">306
&lt;/span>&lt;span class="lnt">307
&lt;/span>&lt;span class="lnt">308
&lt;/span>&lt;span class="lnt">309
&lt;/span>&lt;span class="lnt">310
&lt;/span>&lt;span class="lnt">311
&lt;/span>&lt;span class="lnt">312
&lt;/span>&lt;span class="lnt">313
&lt;/span>&lt;span class="lnt">314
&lt;/span>&lt;span class="lnt">315
&lt;/span>&lt;span class="lnt">316
&lt;/span>&lt;span class="lnt">317
&lt;/span>&lt;span class="lnt">318
&lt;/span>&lt;span class="lnt">319
&lt;/span>&lt;span class="lnt">320
&lt;/span>&lt;span class="lnt">321
&lt;/span>&lt;span class="lnt">322
&lt;/span>&lt;span class="lnt">323
&lt;/span>&lt;span class="lnt">324
&lt;/span>&lt;span class="lnt">325
&lt;/span>&lt;span class="lnt">326
&lt;/span>&lt;span class="lnt">327
&lt;/span>&lt;span class="lnt">328
&lt;/span>&lt;span class="lnt">329
&lt;/span>&lt;span class="lnt">330
&lt;/span>&lt;span class="lnt">331
&lt;/span>&lt;span class="lnt">332
&lt;/span>&lt;span class="lnt">333
&lt;/span>&lt;span class="lnt">334
&lt;/span>&lt;span class="lnt">335
&lt;/span>&lt;span class="lnt">336
&lt;/span>&lt;span class="lnt">337
&lt;/span>&lt;span class="lnt">338
&lt;/span>&lt;span class="lnt">339
&lt;/span>&lt;span class="lnt">340
&lt;/span>&lt;span class="lnt">341
&lt;/span>&lt;span class="lnt">342
&lt;/span>&lt;span class="lnt">343
&lt;/span>&lt;span class="lnt">344
&lt;/span>&lt;span class="lnt">345
&lt;/span>&lt;span class="lnt">346
&lt;/span>&lt;span class="lnt">347
&lt;/span>&lt;span class="lnt">348
&lt;/span>&lt;span class="lnt">349
&lt;/span>&lt;span class="lnt">350
&lt;/span>&lt;span class="lnt">351
&lt;/span>&lt;span class="lnt">352
&lt;/span>&lt;span class="lnt">353
&lt;/span>&lt;span class="lnt">354
&lt;/span>&lt;span class="lnt">355
&lt;/span>&lt;span class="lnt">356
&lt;/span>&lt;span class="lnt">357
&lt;/span>&lt;span class="lnt">358
&lt;/span>&lt;span class="lnt">359
&lt;/span>&lt;span class="lnt">360
&lt;/span>&lt;span class="lnt">361
&lt;/span>&lt;span class="lnt">362
&lt;/span>&lt;span class="lnt">363
&lt;/span>&lt;span class="lnt">364
&lt;/span>&lt;span class="lnt">365
&lt;/span>&lt;span class="lnt">366
&lt;/span>&lt;span class="lnt">367
&lt;/span>&lt;span class="lnt">368
&lt;/span>&lt;span class="lnt">369
&lt;/span>&lt;span class="lnt">370
&lt;/span>&lt;span class="lnt">371
&lt;/span>&lt;span class="lnt">372
&lt;/span>&lt;span class="lnt">373
&lt;/span>&lt;span class="lnt">374
&lt;/span>&lt;span class="lnt">375
&lt;/span>&lt;span class="lnt">376
&lt;/span>&lt;span class="lnt">377
&lt;/span>&lt;span class="lnt">378
&lt;/span>&lt;span class="lnt">379
&lt;/span>&lt;span class="lnt">380
&lt;/span>&lt;span class="lnt">381
&lt;/span>&lt;span class="lnt">382
&lt;/span>&lt;span class="lnt">383
&lt;/span>&lt;span class="lnt">384
&lt;/span>&lt;span class="lnt">385
&lt;/span>&lt;span class="lnt">386
&lt;/span>&lt;span class="lnt">387
&lt;/span>&lt;span class="lnt">388
&lt;/span>&lt;span class="lnt">389
&lt;/span>&lt;span class="lnt">390
&lt;/span>&lt;span class="lnt">391
&lt;/span>&lt;span class="lnt">392
&lt;/span>&lt;span class="lnt">393
&lt;/span>&lt;span class="lnt">394
&lt;/span>&lt;span class="lnt">395
&lt;/span>&lt;span class="lnt">396
&lt;/span>&lt;span class="lnt">397
&lt;/span>&lt;span class="lnt">398
&lt;/span>&lt;span class="lnt">399
&lt;/span>&lt;span class="lnt">400
&lt;/span>&lt;span class="lnt">401
&lt;/span>&lt;span class="lnt">402
&lt;/span>&lt;span class="lnt">403
&lt;/span>&lt;span class="lnt">404
&lt;/span>&lt;span class="lnt">405
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">socks5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;encoding/binary&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;io&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;strconv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;github.com/gogf/gf/v2/os/glog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Authentication METHODs described in RFC 1928, section 3.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">noAuthRequired&lt;/span> &lt;span class="kt">byte&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">passwordAuth&lt;/span> &lt;span class="kt">byte&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">noAcceptableAuth&lt;/span> &lt;span class="kt">byte&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">255&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// passwordAuthVersion is the auth version byte described in RFC 1929.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">const&lt;/span> &lt;span class="nx">passwordAuthVersion&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// socks5Version is the byte that represents the SOCKS version
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// in requests.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">const&lt;/span> &lt;span class="nx">socks5Version&lt;/span> &lt;span class="kt">byte&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// commandType are the bytes sent in SOCKS5 packets
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// that represent the kind of connection the client needs.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">commandType&lt;/span> &lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// The set of valid SOCKS5 commands as described in RFC 1928.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">connect&lt;/span> &lt;span class="nx">commandType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bind&lt;/span> &lt;span class="nx">commandType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">udpAssociate&lt;/span> &lt;span class="nx">commandType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// addrType are the bytes sent in SOCKS5 packets
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// that represent particular address types.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">addrType&lt;/span> &lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// The set of valid SOCKS5 address types as defined in RFC 1928.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ipv4&lt;/span> &lt;span class="nx">addrType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainName&lt;/span> &lt;span class="nx">addrType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ipv6&lt;/span> &lt;span class="nx">addrType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// replyCode are the bytes sent in SOCKS5 packets
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// that represent replies from the server to a client
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// request.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// The set of valid SOCKS5 reply types as per the RFC 1928.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">success&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">generalFailure&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">connectionNotAllowed&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">networkUnreachable&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hostUnreachable&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">connectionRefused&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ttlExpired&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">commandNotSupported&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addrTypeNotSupported&lt;/span> &lt;span class="nx">replyCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Server is a SOCKS5 proxy server.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Server&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Logf optionally specifies the logger to use.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// If nil, the standard logger is used.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">Logf&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">glog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Logger&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Dialer optionally specifies the dialer to use for outgoing connections.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// If nil, the net package&amp;#39;s standard dialer is used.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">Dialer&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">network&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Username and Password, if set, are the credential clients must provide.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">Username&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Password&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Server&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">dial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">network&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dial&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Dialer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dialer&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Dialer&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dial&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">dialer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DialContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nf">dial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">network&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Server&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">logf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">format&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">args&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="nx">any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Logf&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Logf&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">glog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Logf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetFlags&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">glog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F_TIME_STD&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nx">glog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">F_FILE_SHORT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Logf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Infof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">format&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">args&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Serve accepts and handles incoming connections on the given listener.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Server&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Serve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">l&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Listener&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Accept&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">Conn&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">srv&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Run&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">logf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;client connection failed: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Conn is a SOCKS5 connection for client to reach
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// server.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Conn&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// The struct is filled by each of the internal
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// methods in turn as the transaction progresses.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">srv&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">clientConn&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Conn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">request&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Run starts the new connection.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Conn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Run&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">needAuth&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">srv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Username&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">srv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Password&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">authMethod&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">noAuthRequired&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">needAuth&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">authMethod&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">passwordAuth&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">parseClientGreeting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">authMethod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">socks5Version&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">noAcceptableAuth&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">socks5Version&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">authMethod&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">needAuth&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">handleRequest&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pwd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">parseClientAuth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">srv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Username&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">pwd&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">srv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Password&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="c1">// auth error
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="c1">// auth success
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">handleRequest&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Conn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">handleRequest&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">parseClientRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">reply&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">generalFailure&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">marshal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buf&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">command&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">connect&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">reply&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">commandNotSupported&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">marshal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buf&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;unsupported command %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">command&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">req&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancel&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nf">cancel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">srv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">srv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">dial&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">JoinHostPort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destination&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strconv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Itoa&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">))),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">reply&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">generalFailure&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">marshal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buf&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">srv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">serverAddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">serverPortStr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SplitHostPort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">srv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LocalAddr&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nf">String&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">serverPort&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strconv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Atoi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">serverPortStr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">bindAddrType&lt;/span> &lt;span class="nx">addrType&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">ip&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseIP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">serverAddr&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">ip&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">ip&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">To4&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindAddrType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">ipv4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindAddrType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">ipv6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindAddrType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">domainName&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">reply&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">success&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindAddrType&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">bindAddrType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindAddr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">serverAddr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindPort&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">uint16&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">serverPort&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">marshal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">reply&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">generalFailure&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">marshal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buf&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">errc&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">chan&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">srv&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;from backend to client: %w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">errc&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">srv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clientConn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;from client to backend: %w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">errc&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nx">errc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// parseClientGreeting parses a request initiation packet.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">parseClientGreeting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Reader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">authMethod&lt;/span> &lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">hdr&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">hdr&lt;/span>&lt;span class="p">[:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read packet header&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">hdr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">socks5Version&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;incompatible SOCKS version&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">count&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">hdr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">methods&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">count&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">methods&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read methods&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">methods&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">authMethod&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;no acceptable auth methods&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">parseClientAuth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Reader&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">usr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pwd&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">hdr&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">hdr&lt;/span>&lt;span class="p">[:]);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read auth packet header&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">hdr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">passwordAuthVersion&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bad SOCKS auth version&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">usrLen&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">hdr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">usrBytes&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">usrLen&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">usrBytes&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read auth packet username&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">hdrPwd&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">hdrPwd&lt;/span>&lt;span class="p">[:]);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read auth packet password length&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pwdLen&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">hdrPwd&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pwdBytes&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pwdLen&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pwdBytes&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read auth packet password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">usrBytes&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pwdBytes&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// request represents data contained within a SOCKS5
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// connection request packet.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">request&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">command&lt;/span> &lt;span class="nx">commandType&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">destination&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">port&lt;/span> &lt;span class="kt">uint16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">destAddrType&lt;/span> &lt;span class="nx">addrType&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// parseClientRequest converts raw packet bytes into a
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// SOCKS5Request struct.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">parseClientRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Reader&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">hdr&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">hdr&lt;/span>&lt;span class="p">[:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read packet header&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">cmd&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">hdr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">destAddrType&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">addrType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">hdr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">destination&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">port&lt;/span> &lt;span class="kt">uint16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">destAddrType&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">ipv4&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">ip&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ip&lt;/span>&lt;span class="p">[:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read IPv4 address&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">destination&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">IP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ip&lt;/span>&lt;span class="p">[:]).&lt;/span>&lt;span class="nf">String&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">destAddrType&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">domainName&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">dstSizeByte&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dstSizeByte&lt;/span>&lt;span class="p">[:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read domain name size&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dstSize&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dstSizeByte&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domainName&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dstSize&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">domainName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read domain name&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">destination&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">domainName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">destAddrType&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">ipv6&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">ip&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ip&lt;/span>&lt;span class="p">[:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read IPv6 address&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">destination&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">IP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ip&lt;/span>&lt;span class="p">[:]).&lt;/span>&lt;span class="nf">String&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;unsupported address type&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">portBytes&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">portBytes&lt;/span>&lt;span class="p">[:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;could not read port&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">port&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">binary&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BigEndian&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Uint16&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">portBytes&lt;/span>&lt;span class="p">[:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">command&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nf">commandType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cmd&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">destination&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">destination&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">port&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">destAddrType&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">destAddrType&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// response contains the contents of
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// a response packet sent from the proxy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// to the client.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">reply&lt;/span> &lt;span class="nx">replyCode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindAddrType&lt;/span> &lt;span class="nx">addrType&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindAddr&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bindPort&lt;/span> &lt;span class="kt">uint16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// marshal converts a SOCKS5Response struct into
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// a packet. If res.reply == Success, it may throw an error on
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// receiving an invalid bind address. Otherwise, it will not throw.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">marshal&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pkt&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pkt&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">socks5Version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pkt&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reply&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pkt&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1">// null reserved byte
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">pkt&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindAddrType&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reply&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">success&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">pkt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">addr&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindAddrType&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nx">ipv4&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseIP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindAddr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">To4&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">addr&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;invalid IPv4 address for binding&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nx">domainName&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindAddr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">255&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;invalid domain name for binding&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindAddr&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindAddr&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindAddr&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="nx">ipv6&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseIP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindAddr&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">To16&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">addr&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;invalid IPv6 address for binding&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Errorf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;unsupported address type&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pkt&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pkt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pkt&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">binary&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BigEndian&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">AppendUint16&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pkt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">uint16&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bindPort&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">pkt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>TCP socket option</title><link>https://wlynxg.github.io/blog/p/tcp-socket-option/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/tcp-socket-option/</guid><description>&lt;h1 id="tcp-socket-option">TCP socket option
&lt;/h1>&lt;h2 id="so_linger">SO_LINGER
&lt;/h2>&lt;p>&lt;code>SO_LINGER&lt;/code> 参数用于设置 TCP 延迟关闭的时间。&lt;/p>
&lt;p>默认情况下，TCP socket 在调用 close 后，会发送 FIN 并立即进行清理工作。&lt;/p></description></item><item><title>TCP 实现 P2P</title><link>https://wlynxg.github.io/blog/p/tcp-%E5%AE%9E%E7%8E%B0-p2p/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/tcp-%E5%AE%9E%E7%8E%B0-p2p/</guid><description>&lt;h1 id="tcp-实现-p2p">TCP 实现 P2P
&lt;/h1>&lt;h2 id="简介">简介
&lt;/h2>&lt;p>市面上实现 P2P 的产品主要都是以 UDP 协议为主。因为 UDP 是无连接的，能够往任意地址发包，便于实现 P2P 的能力。&lt;/p>
&lt;p>但是 UDP 同时也是不可靠的，如果想要实现可靠传输得自己基于 UDP 去实现可靠传输协议，例如 QUIC、KCP、SCTP 等基于 UDP 实现的可靠连接。&lt;/p>
&lt;p>但是基于 UDP 实现的可靠传输是位于应用层，运行在用户态的。&lt;/p>
&lt;p>而 TCP 协议是操作系统网络栈原生支持的，而且经过这么多年在操作系统内核层面的优化，TCP 性能是十分能打的，如果我们能够基于 TCP 建立 P2P 连接，对于我们应用层来说就会省事很多了。&lt;/p>
&lt;h2 id="实现">实现
&lt;/h2>&lt;p>要想实现基于 TCP 的 P2P，那么 TCP 也必须像 UDP 那样向不同地址建立连接时使用同一个 Src IP + Src Port。&lt;/p>
&lt;p>要实现这个效果就需要使用 Linux 中的端口重用技术。端口重用技术运行我们使用同一个 Src IP + Src Port 向不同的目的地址发起 TCP 连接。&lt;/p>
&lt;p>下面是用 Go 实现的 Demo:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;syscall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ResolveTCPAddr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;:34567&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dialer&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Dialer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">LocalAddr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Control&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">network&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">RawConn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Control&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span> &lt;span class="kt">uintptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetsockoptInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SO_REUSEADDR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetsockoptInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">listen&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ListenConfig&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Control&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">network&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">RawConn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Control&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span> &lt;span class="kt">uintptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetsockoptInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SO_REUSEADDR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetsockoptInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">syscall&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">listen&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;:34567&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;start listen at %s ...&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Addr&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">tcp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Accept&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;accept new conn: %s -&amp;gt; %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RemoteAddr&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LocalAddr&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dialer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Dial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;stun server&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s -&amp;gt; %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">conn1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LocalAddr&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">conn1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RemoteAddr&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;输入对端地址: &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">peer&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scanln&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">peer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;对端地址: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">peer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">cancel&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">conn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dialer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">DialContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;tcp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">peer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">cancel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;第 %d 次连接 %s 失败: %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">peer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s -&amp;gt; %s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">LocalAddr&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nx">conn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">RemoteAddr&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面的 Demo 中，TCP dial 和 listen 在同一个 Src IP + Src Port 上，进行多次尝试之后就能达到与 UDP 一样的 P2P 打洞效果。&lt;/p></description></item><item><title>TCP 长连接</title><link>https://wlynxg.github.io/blog/p/tcp-%E9%95%BF%E8%BF%9E%E6%8E%A5/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/tcp-%E9%95%BF%E8%BF%9E%E6%8E%A5/</guid><description>&lt;h1 id="tcp-长连接">TCP 长连接
&lt;/h1>&lt;h2 id="tcp-短连接">TCP 短连接
&lt;/h2>&lt;p>使用 TCP 传输数据时，每一次传输都打开一个 socket ，当次数据传输完后就关闭这个 socket。&lt;/p>
&lt;p>由于每次打开 socket、关闭 socket 时就会经历 TCP 的三次握手和四次挥手流程，这些流程会消耗大量时间。&lt;/p>
&lt;h2 id="tcp-长连接-1">TCP 长连接
&lt;/h2>&lt;p>如果能够单次传输完成后不关闭 socket，后续传输数据时，可以复用同一个 socket，那么就会节省下大量的 TCP 握手和挥手的时间。&lt;/p>
&lt;p>TCP 中的 Keep-Alive 机制就实现了上诉需求。&lt;/p>
&lt;p>Linux 端可通过 &lt;code>sysctl -a | grep keepalive&lt;/code> 命令查看内核的 tcp_keepalive 相关参数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@ubuntu:~# sysctl -a &lt;span class="p">|&lt;/span>grep keepalive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_keepalive_intvl &lt;span class="o">=&lt;/span> 75 &lt;span class="c1"># 当没有收到对方的确认时，继续发送保活探测报文的间隔时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_keepalive_probes &lt;span class="o">=&lt;/span> 9 &lt;span class="c1"># 当没有收到对方的确认时，继续发送保活探测报文的默认次数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_keepalive_time &lt;span class="o">=&lt;/span> 7200 &lt;span class="c1"># 最后一次数据传输结束开始计时起到发送第一个保活探测报文的时间间隔&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当开启 TCP 的 Keep-Alive 机制后，TCP socket 连接会定期向对端发送心跳保活包。超过 7200s 没有进行收发数据后，TCP socket 向对端发送保活包时，对端有可能处于以下三种状态：&lt;/p>
&lt;ul>
&lt;li>对方成功接收，连接正常：以期望的ACK报文段响应；本地 socket 等待 7200s 后又会发送保活包；&lt;/li>
&lt;li>对方已崩溃且已重新启动：回复 RST 报文响应。本地 socket 的待处理错误被置为 &lt;code>ECONNRESET&lt;/code>，socket本身则被关闭，断开TCP连接；&lt;/li>
&lt;li>对方无任何响应：发送保活探测报文的一方，相隔 75s 后，再次重发保活探测报文，重发8次，一共尝试9次。若仍无响应就放弃。socket的待处理错误被置为ETIMEOUT，socket本身则被关闭，断开TCP连接。&lt;/li>
&lt;/ul>
&lt;p>其他系统上 keepalive 的默认设置：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>FreeBSD、Mac OS X系统：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sysctl net.inet.tcp &lt;span class="p">|&lt;/span> grep -E &lt;span class="s2">&amp;#34;keepidle|keepintvl|keepcnt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net.inet.tcp.keepidle: &lt;span class="m">7200000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net.inet.tcp.keepintvl: &lt;span class="m">75000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net.inet.tcp.keepcnt: &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Windows 系统：&lt;a class="link" href="https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd349797%28v=ws.10%29?redirectedfrom=MSDN#tcpip-related-registry-entries" target="_blank" rel="noopener"
>官方文档&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Registry entry&lt;/th>
&lt;th style="text-align: left">Format&lt;/th>
&lt;th style="text-align: left">Windows Vista® and Windows Server® 2008 default setting&lt;/th>
&lt;th style="text-align: left">Recommended setting&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">DisableIPSourceRouting&lt;/td>
&lt;td style="text-align: left">DWORD&lt;/td>
&lt;td style="text-align: left">1 for IPv4, 0 for IPv6&lt;/td>
&lt;td style="text-align: left">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">KeepAliveTime&lt;/td>
&lt;td style="text-align: left">DWORD&lt;/td>
&lt;td style="text-align: left">7,200,000 (time in milliseconds)&lt;/td>
&lt;td style="text-align: left">300,000 (time in milliseconds)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">PerformRouterDiscovery&lt;/td>
&lt;td style="text-align: left">DWORD&lt;/td>
&lt;td style="text-align: left">2&lt;/td>
&lt;td style="text-align: left">0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">TcpMaxDataRetransmissions&lt;/td>
&lt;td style="text-align: left">DWORD&lt;/td>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">3&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>tracert 原理</title><link>https://wlynxg.github.io/blog/p/tracert-%E5%8E%9F%E7%90%86/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/tracert-%E5%8E%9F%E7%90%86/</guid><description>&lt;h1 id="tracert-原理">tracert 原理
&lt;/h1>&lt;p>tracert 是 Windows 端一个用于路由追踪的程序。&lt;/p>
&lt;p>例如我们想看我们到 baidu.com 之间经过了哪些路由，就可以在 Windows 的 Terminal 执行：&lt;/p></description></item><item><title>TUN IFF_MULTI_QUEUE</title><link>https://wlynxg.github.io/blog/p/tun-iff_multi_queue/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/tun-iff_multi_queue/</guid><description>&lt;h1 id="tun-iff_multi_queue-使用">TUN IFF_MULTI_QUEUE 使用
&lt;/h1>&lt;p>&lt;a class="link" href="https://blog.cloudflare.com/virtual-networking-101-understanding-tap/" target="_blank" rel="noopener"
>https://blog.cloudflare.com/virtual-networking-101-understanding-tap/&lt;/a>&lt;/p></description></item><item><title>tun2socks 原理分析</title><link>https://wlynxg.github.io/blog/p/tun2socks-%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/tun2socks-%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</guid><description>&lt;h1 id="tun2socks-原理分析">tun2socks 原理分析
&lt;/h1>&lt;h2 id="简介">简介
&lt;/h2>&lt;p>&lt;code>tun&lt;/code> 是一种位于 &lt;strong>网络层&lt;/strong> 的虚拟网卡，从 &lt;code>tun&lt;/code> 读取和写入的数据都是 &lt;strong>网络层&lt;/strong>的数据。而 Socks 是一种使用 Socket 代理的技术，代理的是会话层的流量。&lt;/p>
&lt;p>因此想要将从 &lt;code>tun&lt;/code> 出来的流量塞到 socks 代理，就需要&lt;strong>去除 网络层和 传输层的 Header&lt;/strong>；而想要将 Socks 回来的数据塞到 Tun，则需要在流量前面&lt;strong>增加 网络层 和 传输层的 Header&lt;/strong>。&lt;/p>
&lt;p>下面介绍两种市面上使用较多的方案。&lt;/p>
&lt;h2 id="系统网络栈">系统网络栈
&lt;/h2>&lt;p>在启用 &lt;code>tun&lt;/code> 网卡时，同时监听一个对应传输层协议的 socket。当从 &lt;code>tun&lt;/code> 网卡读取到网络包后，改变网络包的四元组（源IP改为 tun 网卡 IP，源端口更换为一个随机端口，目的 IP 和 目的端口改为监听的 Socket 的IP和端口），再将网络包写回 &lt;code>tun&lt;/code> 网卡。&lt;/p>
&lt;p>当网络包写回系统网络栈后，系统会自行转发包到监听的 socket，从监听的 socket 中读取的数据就是已经去除了 网络层和传输层 header 的数据。&lt;/p>
&lt;p>要注意的是，在发送数据包的过程中需要记忆改变前后的四元组（NAT 映射）。当 socket 返回数据时，从 tun 网卡读取数据，再改变回原始的映射关系。&lt;/p>
&lt;p>这样就利用系统网络栈实现了 tun2socks。&lt;/p>
&lt;h2 id="gvisor-协议栈">gVisor 协议栈
&lt;/h2>&lt;p>&lt;code>gVisor&lt;/code> 是谷歌开发实现的容器沙箱。在 &lt;code>gVisor&lt;/code> 中实现了一套较为完整的网络协议栈。&lt;/p>
&lt;p>&lt;code>gVisor&lt;/code>中提供了不同层网络协议包的解析以及读取，因此我们可以利用 &lt;code>gVisor&lt;/code> 对 网络包解析来实现 tun2socks。&lt;/p></description></item><item><title>udp recvfrom connection refused 问题</title><link>https://wlynxg.github.io/blog/p/udp-recvfrom-connection-refused-%E9%97%AE%E9%A2%98/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/udp-recvfrom-connection-refused-%E9%97%AE%E9%A2%98/</guid><description>&lt;h1 id="udp-recvfrom-connection-refused-问题">udp recvfrom: connection refused 问题
&lt;/h1>&lt;h2 id="出错代码">出错代码
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">udp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">DialUDP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;udp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UDPAddr&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">IP&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ParseIP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;192.168.1.2&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nx">Port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2222&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">udp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buff&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">udp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadFromUDP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buff&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>错误信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">panic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="mf">192.168.1.5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">45529&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">192.168.1.2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">2222&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">recvfrom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">refused&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">goroutine&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">running&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">/&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">udp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">20&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mh">0x177&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">exit&lt;/span> &lt;span class="nx">status&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="问题原因">问题原因
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@ubuntu:~# tcpdump -i enp1s0 host 192.168.1.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tcpdump: verbose output suppressed, use -v&lt;span class="o">[&lt;/span>v&lt;span class="o">]&lt;/span>... &lt;span class="k">for&lt;/span> full protocol decode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">listening on enp1s0, link-type EN10MB &lt;span class="o">(&lt;/span>Ethernet&lt;span class="o">)&lt;/span>, snapshot length &lt;span class="m">262144&lt;/span> bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:36:06.764008 IP 192.168.1.5.60398 &amp;gt; 192.168.1.2.2222: UDP, length &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:36:06.764420 IP 192.168.1.2 &amp;gt; 192.168.1.5: ICMP 10.0.0.1 udp port &lt;span class="m">2222&lt;/span> unreachable, length &lt;span class="m">40&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用 tcpdump 抓包发现目标主机为给主机回复了一个 ICMP 包，用来指示 2222 端口不可达。&lt;/p>
&lt;p>根据《UNIX网络编程卷1：套接字联网API（第3版）》第八章第8.9小结所讲，这个 ICMP 错误被称为异步错误（asynchronous error）。&lt;/p>
&lt;p>该错误是由 &lt;code>sendto&lt;/code> 引起（&lt;code>udp.Write&lt;/code>函数内部实际调用了 unix 的&lt;code>sendto&lt;/code>系统接口），但是 &lt;code>sendto&lt;/code> 本身却返回成功。这个 ICMP 数据被送入了 UDP 套接字的接收缓冲区，当调用 &lt;code>recvfrom&lt;/code>接口时返回错误。因此当程序调用 &lt;code>udp.ReadFromUDP&lt;/code>时会抛出错误。&lt;/p>
&lt;p>根据错误分析可以发现，如果没有执行&lt;code>sendto&lt;/code>操作，那么&lt;code>recvfrom&lt;/code>则不会收到错误信息。&lt;/p></description></item><item><title>VM虚拟机三种网络模式</title><link>https://wlynxg.github.io/blog/p/vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%89%E7%A7%8D%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%BC%8F/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/vm%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%89%E7%A7%8D%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%BC%8F/</guid><description>&lt;h1 id="vm-虚拟机三种网络模式">VM 虚拟机三种网络模式
&lt;/h1>&lt;p>VMware 作为一种使用极其广泛的虚拟机软件，它为我们提供了三种网络工作模式，它们分别是：&lt;strong>Bridged（桥接模式）&lt;/strong>、&lt;strong>NAT（网络地址转换模式）&lt;/strong>、&lt;strong>Host-Only（仅主机模式）&lt;/strong>，三种网络模式都各自有各自的特点。&lt;/p>
&lt;h2 id="bridged桥接模式">Bridged（桥接模式）
&lt;/h2>&lt;p>VMnet0 默认桥接模式。桥接模式下虚拟机通过 VMnet0 虚拟交换机实现与物理机在同一个局域网中。在这种模式下，虚拟机和物理机能够互 ping，物理机能上网虚拟机也能够上网：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150223.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="host-only仅主机模式">Host-Only（仅主机模式）
&lt;/h2>&lt;p>VMnet1 默认仅主机模式。仅主机模式下，虚拟机处于 VMnet1 虚拟路由器和虚拟交换机构建的网络中。该模式下，主机模式下的虚拟机，是一种与世隔绝的状态。由于没有去 Internet 的路由，因此虚拟机不能上网：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150418.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="nat模式网络地址转换模式">NAT模式（网络地址转换模式）
&lt;/h2>&lt;p>VMnet8 默认 NAT 模式。NAT 模式与仅主机模式十分相像，但是不同的是，使用NAT模式网络连接时，VMware会在主机上建立单独的专用网络，用以在主机和虚拟机之间相互通信。&lt;/p>
&lt;p>虚拟机向外部网络发送的请求数据 &amp;ldquo;包裹&amp;rdquo;，都会交由NAT网络适配器加上&amp;quot;特殊标记&amp;quot;并以主机的名义转发出去，外部网络返回的响应数据&amp;quot;包裹&amp;quot;，也是先由主机接收，然后交由NAT网络适配器根据&amp;quot;特殊标记&amp;quot;进行识别并转发给对应的虚拟机，因此，虚拟机在外部网络中不必具有自己的IP地址。从外部网络来看，&lt;strong>虚拟机和主机在共享一个IP地址&lt;/strong>，默认情况下，&lt;strong>外部网络终端也无法访问到虚拟机&lt;/strong>。&lt;/p>
&lt;p>在一台主机上只允许有一个NAT模式的虚拟网络。因此，同一台主机上的多个采用NAT模式网络连接的虚拟机也是可以相互访问的：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150428.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;blockquote>
&lt;p>参考来源：&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/swadian2008/article/details/109518783" target="_blank" rel="noopener"
>桥接模式、NAT模式和仅主机模式_swadian2008的博客-CSDN博客_桥接模式和nat模式和仅主机模式&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/98548852" target="_blank" rel="noopener"
>三言两语说清VM虚拟机的三种网卡模式 - 知乎 (zhihu.com)&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>VPN 流量分析</title><link>https://wlynxg.github.io/blog/p/vpn-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/vpn-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</guid><description>&lt;h1 id="vpn-流量分析">VPN 流量分析
&lt;/h1>&lt;h2 id="正常网络">正常网络
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150832.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="tun-网卡-vpn">TUN 网卡 VPN
&lt;/h2>&lt;p>TUN 网卡是一个工作在三层网络（IP）的虚拟网卡。&lt;/p>
&lt;p>注意：下图中的 eth0 代表的 eth0 是在三层的 IP 地址，准确来说 eth0 是工作在二层网络的。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150843.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>对于没有代理全局路由的 VPN，VPN 应用在收到数据时直接根据路由规则将数据发送到实际物理网卡即可。但是对于代理了全部路由，或 VPN 路由和 VPN 服务器路由重叠时，VPN应用在发送数据时就会因为路由规则从而再次将数据发送回 VPN 网卡从而造成流量回环。&lt;/p>
&lt;p>此时为了避免流量回环，需要加一些额外的路由规则，例如 Wireguard 选择过滤自身流量，&lt;code>32765: not from all fwmark 0xca6c lookup 51820&lt;/code>。也可以选择将套接字绑定到实际网卡直接进行发包。&lt;/p>
&lt;h2 id="tap-网卡-vpn">TAP 网卡 VPN
&lt;/h2>&lt;p>TAP 网卡是一个工作在二层（数据链路层）的虚拟网卡，拥有自己的 MAC 地址和 IP 地址。TAP 网卡此时和物理网卡是极其相似的，只不过物理网卡拿到数据后会交给真实的物理设备，让物理设备将数据以信号的方式传递出去；TAP 拿到数据后不会将数据交给真实的物理设备，而是交给用户态的软件。&lt;/p>
&lt;p>TAP 网卡的 VPN 和 TUN 网卡工作流程是极其相似的，如下图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150900.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="tap-与-tun-的区别">TAP 与 TUN 的区别
&lt;/h2>&lt;p>TAP 网卡与 TUN 最大的区别在于他们工作的层次不一样：&lt;strong>TAP 网卡工作在数据链路层，TUN 网卡工作在网络层&lt;/strong>。&lt;/p></description></item><item><title>WebRTC P2P 能力</title><link>https://wlynxg.github.io/blog/p/webrtc-p2p-%E8%83%BD%E5%8A%9B/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/webrtc-p2p-%E8%83%BD%E5%8A%9B/</guid><description>&lt;h1 id="webrtc-p2p-能力">WebRTC P2P 能力
&lt;/h1>&lt;h2 id="p2p-连接流程">P2P 连接流程
&lt;/h2>&lt;blockquote>
&lt;ul>
&lt;li>Signal Server: 用于协助双端数据交换；&lt;/li>
&lt;li>STUN：用于探测自身节点公网 IP + Port 和 自身所处 NAT 类型；&lt;/li>
&lt;li>TURN：中继服务器，用于转发中继流量。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150918.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="p2p-能力">P2P 能力
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>网络环境&lt;/th>
&lt;th>WebRTC P2P 是否支持&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>IPv6 - IPv6&lt;/td>
&lt;td>支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Port Restricted Cone NAT - Port Restricted Cone NAT&lt;/td>
&lt;td>支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>一端位于 NAT 下，一端位于 NAT 上&lt;/td>
&lt;td>支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Port Restricted Cone NAT - Symmetric NAT&lt;/td>
&lt;td>不支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>具有爆破防护规则的防火墙&lt;/td>
&lt;td>不支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>能够依靠 UPnP/NAT-PMP/PCP进行端口映射的路由器&lt;/td>
&lt;td>不支持&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="data-channel">Data Channel
&lt;/h2>&lt;p>WebRTC 的 Data Channel 底层使用 SCTP 。SCTP 为你提供流，并且每个流都可以独立配置。WebRTC 数据通道只是基于流的简单抽象。有关持久性和顺序的设置会被直接传递到 SCTP Agent 中。&lt;/p>
&lt;p>Data Channel 的通道类型具有以下可选属性：&lt;/p>
&lt;ul>
&lt;li>&lt;code>DATA_CHANNEL_RELIABLE&lt;/code> (&lt;code>0x00&lt;/code>) - 没有消息丢失，消息依序到达。&lt;/li>
&lt;li>&lt;code>DATA_CHANNEL_RELIABLE_UNORDERED&lt;/code> (&lt;code>0x80&lt;/code>) - 没有消息丢失，但消息可能乱序到达。&lt;/li>
&lt;li>&lt;code>DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT&lt;/code> (&lt;code>0x01&lt;/code>) - 按照请求中的次数重试发送后，消息可能会丢失，但消息将依序到达。&lt;/li>
&lt;li>&lt;code>DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT_UNORDERED&lt;/code> (&lt;code>0x81&lt;/code>) - 按照请求中的次数重试发送后，消息可能会丢失，且消息可能乱序到达。&lt;/li>
&lt;li>&lt;code>DATA_CHANNEL_PARTIAL_RELIABLE_TIMED&lt;/code> (&lt;code>0x02&lt;/code>) - 如果没有在请求的时间内到达，消息可能会丢失，但消息将依序到达。&lt;/li>
&lt;li>&lt;code>DATA_CHANNEL_PARTIAL_RELIABLE_TIMED_UNORDERED&lt;/code> (&lt;code>0x82&lt;/code>) - 如果没有在请求的时间内到达，消息可能会丢失，且消息可能乱序到达。&lt;/li>
&lt;/ul>
&lt;h2 id="libp2p-如何使用-webrtc">libp2p 如何使用 WebRTC
&lt;/h2>&lt;h3 id="webrtc-direct">WebRTC Direct
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">offerSdp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createOffer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">mungedOfferSdp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sdp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">munge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">offerSdp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ufrag&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">await&lt;/span> &lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setLocalDescription&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mungedOfferSdp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// construct answer sdp from multiaddr and ufrag
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">answerSdp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sdp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fromMultiAddr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ma&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ufrag&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">await&lt;/span> &lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setRemoteDescription&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">answerSdp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在 WebRTC Direct 中，libp2p 直接使用地址转换成 SDP 进行 WebRTC 连接。&lt;/p></description></item><item><title>Wireguard 实践</title><link>https://wlynxg.github.io/blog/p/wireguard-%E5%AE%9E%E8%B7%B5/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/wireguard-%E5%AE%9E%E8%B7%B5/</guid><description>&lt;h1 id="wireguard-实践">Wireguard 实践
&lt;/h1>&lt;h2 id="一安装">一、安装
&lt;/h2>&lt;h3 id="ubuntu">Ubuntu
&lt;/h3>&lt;blockquote>
&lt;p>⚠️ &lt;strong>注意&lt;/strong> ：&lt;/p>
&lt;p>WireGuard 对 Linux 内核版本有要求，&lt;code>5.4&lt;/code> 以上内核才将其纳入其中。
如果内核低于该版本（典型如：RHEL 和 CentOS），就需要比较复杂的涉及内核编译的过程，请自行登录 &lt;a class="link" href="https://www.wireguard.com/install/" target="_blank" rel="noopener"
>官网 &lt;/a>查找详细信息。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo apt install wireguard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装完成后系统中会存在以下东西：&lt;/p>
&lt;ul>
&lt;li>两个 cli 命令：&lt;code>wg&lt;/code> 和 &lt;code>wg-quick&lt;/code>;&lt;/li>
&lt;li>两个 systemd 文件: &lt;code>wg-quick@.service&lt;/code> 和 &lt;code>wg-quick.target&lt;/code>.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>可以在 WireGuard 的 Service 文件中加入如下一行，重新加载配置流量不中断：
&lt;code>ExecReload=/bin/bash -c 'exec /usr/bin/wg syncconf %i &amp;lt;(exec /usr/bin/wg-quick strip %i)'&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h3 id="windows">Windows
&lt;/h3>&lt;p>&lt;a class="link" href="https://download.wireguard.com/windows-client/wireguard-installer.exe" target="_blank" rel="noopener"
>下载链接&lt;/a>&lt;/p>
&lt;p>Windows 下载完成后，会存在一个后台服务和一个 GUI 的界面&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150945.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-150955.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="android">Android
&lt;/h3>&lt;p>&lt;a class="link" href="https://play.google.com/store/apps/details?id=com.wireguard.android" target="_blank" rel="noopener"
>Google Store 下载链接&lt;/a>&lt;/p>
&lt;h2 id="二使用实践">二、使用实践
&lt;/h2>&lt;h3 id="1-peer-to-peer">1. Peer to Peer
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装 wireguard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install wireguard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /etc/wireguard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 修改文件夹权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">umask&lt;/span> &lt;span class="m">077&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成服务端公私钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wg genkey &lt;span class="p">|&lt;/span> tee server_privatekey &lt;span class="p">|&lt;/span> wg pubkey &amp;gt; server_publickey
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成客户端公私钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wg genkey &lt;span class="p">|&lt;/span> tee client_privatekey &lt;span class="p">|&lt;/span> wg pubkey &amp;gt; client_publickey
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成服务端配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;[Interface]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">PrivateKey = &lt;/span>&lt;span class="k">$(&lt;/span>cat server_privatekey&lt;span class="k">)&lt;/span>&lt;span class="s2"> # 填写本机的privatekey 内容
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">Address = 192.168.199.1/24
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o &lt;/span>&lt;span class="k">$(&lt;/span>ip r &lt;span class="p">|&lt;/span> grep default &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $5}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2"> -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o &lt;/span>&lt;span class="k">$(&lt;/span>ip r &lt;span class="p">|&lt;/span> grep default &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $5}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2"> -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">ListenPort = 12345 # 注意该端口是UDP端口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">DNS = 8.8.8.8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">MTU = 1420
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">[Peer]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">PublicKey = &lt;/span>&lt;span class="k">$(&lt;/span>cat client_publickey&lt;span class="k">)&lt;/span>&lt;span class="s2"> # 填写对端的publickey 内容
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">AllowedIPs = 192.168.199.2/24 &amp;#34;&lt;/span> &amp;gt; wg0.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动网卡&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wg-quick up wg0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 加入开机自启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> systemctl &lt;span class="nb">enable&lt;/span> wg-quick@wg0.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成客户端配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;[Interface]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">PrivateKey = &lt;/span>&lt;span class="k">$(&lt;/span>cat client_privatekey&lt;span class="k">)&lt;/span>&lt;span class="s2"> # 填写客户端的privatekey 内容
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">Address = 192.168.199.2/32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">DNS = 8.8.8.8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">MTU = 1420
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">[Peer]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">PublicKey = &lt;/span>&lt;span class="k">$(&lt;/span>cat server_publickey&lt;span class="k">)&lt;/span>&lt;span class="s2"> # 填写对端的publickey 内容
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">Endpoint = &lt;/span>&lt;span class="k">$(&lt;/span>ip a &lt;span class="p">|&lt;/span> grep &lt;span class="k">$(&lt;/span>ip r &lt;span class="p">|&lt;/span> grep default &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $5}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="p">|&lt;/span> grep inet &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $2}&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> -f 1&lt;span class="k">)&lt;/span>&lt;span class="s2">:12345 # 对端地址
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">AllowedIPs = 192.168.199.1/24
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">PersistentKeepalive = 25 &amp;#34;&lt;/span> &amp;gt; client.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 为了方便使用，可以生成二维码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install qrencode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">qrencode -t ansiutf8 &amp;lt; client.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 客户端导入配置即可连接到服务端&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-peer-to-lan">2. Peer to LAN
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># LAN 中的机器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开启 ip 报文转发&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;net.ipv4.ip_forward = 1&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;net.ipv4.conf.all.proxy_arp = 1&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl -p /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 拥有公网 IP 的机器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>Interface&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">Address&lt;/span> &lt;span class="o">=&lt;/span> 172.30.66.1/32
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ListenPort&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">12345&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PrivateKey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">GFw4BUsqlZFxBDdbGy64gATQtC6VfeCc820XRZpfLWs&lt;/span>&lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PostUp&lt;/span> &lt;span class="o">=&lt;/span> iptables -t nat -A POSTROUTING -o %i -j MASQUERADE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PostDown&lt;/span> &lt;span class="o">=&lt;/span> iptables -t nat -D POSTROUTING -o %i -j MASQUERADE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>Peer&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PublicKey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">l6ZuOCtYWCvW4o2o1QIZ1W4kGGCErVt3ERdzyxwJ9h8&lt;/span>&lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">AllowedIPs&lt;/span> &lt;span class="o">=&lt;/span> 172.30.66.12/32,10.113.0.0/16, 10.20.0.0/16, 10.50.0.0/16, 192.168.80.0/24, 192.168.3.0/24, 192.168.8.0/24, 192.168.10.0/24, 192.168.12.0/24, 192.168.24.0/24, 192.168.25.0/24, 192.168.26.0/24, 192.168.27.0/24, 192.168.30.0/24, 192.168.32.0/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PersistentKeepalive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-lan-to-lan">3. LAN to LAN
&lt;/h3>&lt;p>与 &amp;ldquo;Peer to LAN&amp;rdquo; 类似，双端都开放网段，即可打通两个 LAN.&lt;/p></description></item><item><title>不同网络模型下建立 P2P 连接</title><link>https://wlynxg.github.io/blog/p/%E4%B8%8D%E5%90%8C%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8B%E5%BB%BA%E7%AB%8B-p2p-%E8%BF%9E%E6%8E%A5/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E4%B8%8D%E5%90%8C%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8B%E5%BB%BA%E7%AB%8B-p2p-%E8%BF%9E%E6%8E%A5/</guid><description>&lt;h1 id="不同网络模型下建立-p2p-连接">不同网络模型下建立 P2P 连接
&lt;/h1>&lt;h2 id="一公网---公网">一、公网 - 公网
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140449.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 A 和客户端 B 都位于公网。客户端 A 和 客户端 B 通过以下步骤即可建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 根据从中心服务器获取的信息发现 B 具有公网地址，于是 A 直接向 B 发起连接；（PS： 可以互换连接顺序）&lt;/li>
&lt;li>客户端 B 根据从中心服务器获取的信息发现 A 具有公网地址，因此 B 等待 A 进行连接；&lt;/li>
&lt;/ol>
&lt;h2 id="二nat---公网">二、NAT - 公网
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140506.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 B 位于公网，有公网 IP，客户端 A 位于任意 NAT 后。客户端 A 和 客户端 B 通过以下步骤即可建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 B 根据从中心服务器获取的信息发现 A 位于 NAT 后，因此 B 等待 A 进行连接；&lt;/li>
&lt;li>客户端 A 根据从中心服务器获取的信息发现 B 位于公网，于是 A 直接向 B 发起连接；&lt;/li>
&lt;/ol>
&lt;h2 id="三客户端位于同一nat后">三、客户端位于同一NAT后
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140531.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 A 和客户端 B 位于同一任意 NAT 后。客户端 A 和 客户端 B 通过以下步骤即可建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 根据从中心服务器获取的信息发现 B 的公网地址和自身相同，猜测 B 可能与自己位于同一内网中，于是 A 尝试直接向 B 发起连接；（PS： 可以互换连接顺序）&lt;/li>
&lt;li>客户端 B 根据从中心服务器获取的信息发现 A 的公网地址和自身相同，猜测 A 可能与自己位于同一内网中，因此 B 等待 A 进行连接；&lt;/li>
&lt;/ol>
&lt;h2 id="四客户端分属与不同nat下">四、客户端分属与不同NAT下
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140547.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 A 和客户端 B 都位于 NAT 后。客户端 A 和 客户端 B 能否建立 P2P 连接和各自所属 NAT 类型有关。&lt;/p>
&lt;h3 id="1-任意-nat---full-cone-nat或restricted-cone-nat">1. 任意 NAT - (Full Cone NAT或Restricted Cone NAT)
&lt;/h3>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140600.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>Full Cone NAT、Restricted Cone NAT和Port Restricted Cone NAT都有同样的映射规则：&lt;strong>本地地址和端口不变时，映射到 NAT 上的端口不变&lt;/strong>。&lt;/p>
&lt;p>当一端位于 Full Cone NAT或Restricted Cone NAT 下，另一端为任意 NAT 时，通过以下方式可以建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 持续向客户端 B 在 NAT 网关2 上映射的公网地址和端口发送数据。对于 Restricted Cone NAT，由于NAT 网关2上还没有放开相应的过滤规则，因此前面客户端A发向客户端B的部分数据包会被丢失；&lt;/li>
&lt;li>客户端 B 向客户端 A 的公网地址和端口发送数据，用以更新 NAT 网关2的过滤规则；&lt;/li>
&lt;li>当NAT 网关2的过滤规则被刷新后，客户端 A 发向客户端B的数据便会被 NAT 网关2 接收，并转发给客户端 B；&lt;/li>
&lt;li>接收数据时，客户端 B 就会知道客户端在 NAT 网关1上映射的端口和地址，此时客户端 B向NAT 网关1上映射的端口和地址发包，客户端A即可收到。此时客户端 A 和客户端 B 成功建立 P2P连接。&lt;/li>
&lt;/ol>
&lt;h3 id="2-easy-nat---easy-nat">2. Easy NAT - Easy NAT
&lt;/h3>&lt;blockquote>
&lt;p>Easy NAT 代指 RFC3489 所定义的 Full Cone NAT、Restricted Cone NAT、Port Restricted Cone NAT。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140612.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>当两端都位于 Easy NAT 下时，通过以下方式可以建立 P2P 连接（任意 NAT - (Full Cone NAT或Restricted Cone NAT) 流程类似）：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 持续向客户端 B 在 NAT 网关2 上映射的公网地址和端口发送数据，由于NAT 网关2上还没有放开相应的过滤规则，因此前面客户端A发向客户端B的部分数据包会被丢失；&lt;/li>
&lt;li>客户端 B 向客户端 A 的公网地址和端口发送数据，用以更新 NAT 网关2的过滤规则；&lt;/li>
&lt;li>当NAT 网关2的过滤规则被刷新后，客户端 A 发向客户端B的数据便会被 NAT 网关2 接收，并转发给客户端 B；&lt;/li>
&lt;li>接收数据时，客户端 B 就会知道客户端在 NAT 网关1上映射的端口和地址，此时客户端 B向NAT 网关1上映射的端口和地址发包，客户端A即可收到。此时客户端 A 和客户端 B 成功建立 P2P连接。&lt;/li>
&lt;/ol>
&lt;h3 id="3-symmetric-nat---port-restricted-cone-nat">3. Symmetric NAT - Port Restricted Cone NAT
&lt;/h3>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-140627.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>当客户端 A 位于 Symmetric NAT 下，客户端 B 位于 Port Restricted Cone NAT 时，通过以下方式可以建立 P2P 连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 持续向客户端 B 在 NAT 网关2 上映射的公网地址和端口发送数据。由于 NAT 网关2 没有放开相应的过滤规则，因此客户端 A 发往客户端 B 的数据包会被 NAT 网关2拦截，无法到达客户端 B；；&lt;/li>
&lt;li>由于客户端 A 在NAT 网关1上映射的端点(IP:Port 中 Port 未知)，因此客户端 B 无法向一个明确的端点发送数据包来更新 NAT 网关2 过滤规则。&lt;/li>
&lt;/ol>
&lt;p>此时就需要通过以下几种方案来让碰撞，让客户端 A 发向客户端 B 的包顺利通过 NAT 网关2。&lt;/p>
&lt;p>&lt;strong>全端口开放&lt;/strong>&lt;/p>
&lt;p>虽然我们不知道客户端 A 在映射NAT 网关1上映射的端口是多少，但是我们知道，他映射的端口一定是 1024 - 65535 内其中一个，并且一定不是 A 连接中心服务器时使用的端口。&lt;/p>
&lt;p>我们可以顺序构造目的端口为 1024 - 65535 的短 TTL 包（短 TTL 包可以让包不走到公网，仅仅用于打开防火墙规则，以免被识别为 Dos 攻击），让 NAT 网关2 开放所有可能端口（相当于将 Port Restricted Cone NAT 变为 Restricted Cone NAT）。&lt;/p>
&lt;blockquote>
&lt;p>但是经过实际测试发现该方法效果不佳，主要有以下原因：&lt;/p>
&lt;ul>
&lt;li>需要构造大量数据包：平均需要发包 32256 个包 才能碰撞到 客户端 A 在 NAT 网关1上映射的端口。假设客户端 B 的发包速率为 100 p/s，那么就需要五分半才能碰撞到端口；&lt;/li>
&lt;li>容易触发运营商 QoS 限制：经过实际测试，发现一定时间内无效数据包过多时，运营商会对客户端 B 的包进行大量丢弃，导致丢包率上升。严重情况下运营商会直接全部丢弃客户端 B 的数据包。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>端口预测&lt;/strong>&lt;/p>
&lt;p>在部分 NAT 上，端口映射具有一定规律 。&lt;/p>
&lt;p>比如发往目的 IP 1 时，映射的端口为 22001；发往目的 IP 2 时，映射的端口为 22002；那么我们可以猜测，发往目的 IP 3时使用的端口可能为 22003。&lt;/p>
&lt;p>使用此种方案，需要客户端 A 向多个服务器请求来确认自身映射端口，从这些映射的端口中找到可能存在的端口变化规律。&lt;/p>
&lt;blockquote>
&lt;p>此种方法具有一定可行性，但和 NAT 行为有关，不是一个通用解决方案。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>生日攻击&lt;/strong>&lt;/p>
&lt;p>在前面的“全端口开放”方法中，客户端 A 只在 NAT 网关1 上映射了一个端口。但是实际情况下，客户端 A 可以在 NAT 网关1 上映射多个端口。&lt;/p>
&lt;p>根据概率论的 &lt;a class="link" href="https://en.wikipedia.org/wiki/Birthday_problem" target="_blank" rel="noopener"
>生日悖论&lt;/a>，可以写发现客户端 A 映射的端口、客户端 B 发包数量与成功概率之间的关系，公式如下所示：&lt;/p>
$$
\begin{array}{c}
P_{success} = 1 - \frac{C_{64,512}^{ports} \times C_{64,512-ports}^{packets }}{C_{64,512}^{ports} \times C_{64,512}^{packets}}
\end{array}
$$&lt;p>
根据上面的公式绘制出三维图如图所示：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141224.svg"
loading="lazy"
alt="data.svg"
>&lt;/p>
&lt;p>根据函数图我们可以发现，当客户端 A 映射在公网上的端口越多时，建立连接所需的发包数越少，下表中列举了部分数据：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>使用端口数\发包数&lt;/th>
&lt;th>50%&lt;/th>
&lt;th>80%&lt;/th>
&lt;th>90%&lt;/th>
&lt;th>99%&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>10&lt;/td>
&lt;td>4320&lt;/td>
&lt;td>9590&lt;/td>
&lt;td>13268&lt;/td>
&lt;td>23807&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>50&lt;/td>
&lt;td>888&lt;/td>
&lt;td>2043&lt;/td>
&lt;td>2903&lt;/td>
&lt;td>5675&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>100&lt;/td>
&lt;td>446&lt;/td>
&lt;td>1030&lt;/td>
&lt;td>1468&lt;/td>
&lt;td>2902&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>200&lt;/td>
&lt;td>223&lt;/td>
&lt;td>517&lt;/td>
&lt;td>738&lt;/td>
&lt;td>1467&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>300&lt;/td>
&lt;td>149&lt;/td>
&lt;td>345&lt;/td>
&lt;td>493&lt;/td>
&lt;td>981&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>根据表中数据可以发现：假设客户端 A 占用100个端口，客户端 B 以 100 p/s 的速度进行探测，那么要达到50%的概率仅需 6s，达到 99% 也只需 29s！&lt;/p>
&lt;blockquote>
&lt;p>根据上面的数据分析可以发现生日攻击是在 Symmetric NAT - Port Restricted Cone NAT 进行 P2P 打洞时一个较为优秀的方案。&lt;/p>
&lt;/blockquote>
&lt;h4 id="4-symmetric-nat---symmetric-nat">4. Symmetric NAT - Symmetric NAT
&lt;/h4>&lt;p>当两端都是 Symmetric NAT 时，复杂度比 Symmetric NAT - Port Restricted Cone NAT 有了成倍的增长。&lt;/p>
&lt;p>假设使用上面的“全端口开发”方案，那么就需要发包 4,161,798,144 次，耗费时间需要一年以上；&lt;/p>
&lt;p>即使是使用“生日攻击”方案，一端打开 256 个端口，要达到 50% 的概率需要 54,000 次发包，按照 100 p/s 的发包速率需要9分钟；达到 99% 的成功率需要 170,000 次发包，时间上需要30分钟左右。&lt;/p>
&lt;p>即使时间上可以忍受，但 NAT 网关却无法忍受这么多次的发包行为。因为每发一次包，就需要在 NAT 的 session 表上记录一条，想创建一条成功的连接，大部分情况下都会打爆 NAT 的session 表。&lt;/p>
&lt;p>因此对于 Symmetric NAT - Symmetric NAT 网络类型，连接建立方案&lt;strong>只能选择中继服务器模式&lt;/strong>。&lt;/p>
&lt;h2 id="五客户端位于同一大-nat-下但不属于同一内网">五、客户端位于同一大 NAT 下，但不属于同一内网
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141314.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在当前网络模型中，客户端 A 和客户端 B 位于同一任意大 NAT 后，但是分属于大 NAT 下的两个小子网中。客户端 A 和 客户端 B 需要通过以下步骤建立连接：&lt;/p>
&lt;ol>
&lt;li>客户端 A 向中心服务器上报自身信息，并获取客户端 B 信息；客户端 B 向中心服务器上报自身信息，并获取客户端 A 信息；（PS： 忽略两端获取对端信息时的时间差）&lt;/li>
&lt;li>客户端 A 根据从中心服务器获取的信息发现 B 的公网地址和自身相同，猜测 B 可能与自己位于同一内网中，于是 A 尝试直接向 B 发起连接。但是由于 A 和 B不在同一内网中，&lt;strong>因此连接建立失败&lt;/strong>。客户端 A 通过中心服务器通知 B 连接建立失败，需要进行下一步尝试；&lt;/li>
&lt;li>客户端 A 向 B 暴露的公网 IP 和端口直接发送请求。如果NAT 网关不支持 Hairpin 模式，那么这个&lt;strong>数据包会被直接丢弃，导致数据包无法到达 NAT 网关2&lt;/strong>；如果 NAT 网关开启了 Hairpin 模式，A 发向 B 的流量会被 NAT 网关转发给 NAT 网关2，流程进入下一步；&lt;/li>
&lt;li>当数据包到达 NAT 网关2后，下面的流程就和 “客户端分属与不同NAT下”时的打洞行为一致了。&lt;/li>
&lt;/ol>
&lt;h2 id="六多层-nat">六、多层 NAT
&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141330.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>在网络中，存在设备在多层NAT后的情况。&lt;/p>
&lt;p>对于这种多层NAT而言，真正有影响的是最靠近公网的那一个 NAT 网关，其余的 NAT 对于客户端和服务端来说都是不可见的，连接不会关心到底经过了多少层NAT。&lt;/p>
&lt;p>但是多层 NAT 并非完全没有影响，准确来说，多层NAT 影响的是客户端的端口映射行为。客户端发出的端口映射请求，只有最靠近客户端的那层 NAT 设备会做出响应。其他的NAT设备不会收到客户端的端口映射请求。但是端口映射要产生作用的话，需要的是最靠近公网的 NAT 网关执行端口映射才行。&lt;/p></description></item><item><title>单网卡多IP网段代理</title><link>https://wlynxg.github.io/blog/p/%E5%8D%95%E7%BD%91%E5%8D%A1%E5%A4%9Aip%E7%BD%91%E6%AE%B5%E4%BB%A3%E7%90%86/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E5%8D%95%E7%BD%91%E5%8D%A1%E5%A4%9Aip%E7%BD%91%E6%AE%B5%E4%BB%A3%E7%90%86/</guid><description>&lt;h1 id="单网卡多ip网段代理">单网卡多IP网段代理
&lt;/h1>&lt;h2 id="效果图">效果图
&lt;/h2>&lt;p>&lt;strong>实现效果：OS-A 通过 OS-B 能够访问 OS-C 。&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141352.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="实现步骤">实现步骤
&lt;/h2>&lt;p>OS-A 需要添加路由，将 192.168.1.0/24 网段的流量发送到 OS-B&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ip addr add 192.168.1.0/24 dev eth0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>OS-B 需要开启数据包转发的能力，并且设置 SNAT，将收到的 192.168.1.0/2 的源 IP 换为 192.168.1.22：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开启包转发能力&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl -w net.ipv4.ip_forward&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl -p /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加 SNAT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -t nat -A POSTROUTING -d 192.168.1.0/24 -j SNAT --to-source 192.168.1.22
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>如何判断连接双端位于同一局域网</title><link>https://wlynxg.github.io/blog/p/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E8%BF%9E%E6%8E%A5%E5%8F%8C%E7%AB%AF%E4%BD%8D%E4%BA%8E%E5%90%8C%E4%B8%80%E5%B1%80%E5%9F%9F%E7%BD%91/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E8%BF%9E%E6%8E%A5%E5%8F%8C%E7%AB%AF%E4%BD%8D%E4%BA%8E%E5%90%8C%E4%B8%80%E5%B1%80%E5%9F%9F%E7%BD%91/</guid><description>&lt;h1 id="局域网连接判断">局域网连接判断
&lt;/h1>&lt;h2 id="一局域网类型">一、局域网类型
&lt;/h2>&lt;h3 id="1-通过局域网-ip-直连">1. 通过局域网 IP 直连
&lt;/h3>&lt;p>场景：客户端 A 与客户端 B 处于同一个路由器下。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141427.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="2-通过公网-ipv6-直连">2. 通过公网 IPv6 直连
&lt;/h3>&lt;p>场景：客户端 A 与 客户端 B 处于同一个路由器下，路由器为客户端 A 与客户端 B 皆分配了公网 IP 地址。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141439.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="3-单边位于-nat-下">3. 单边位于 NAT 下
&lt;/h3>&lt;p>场景：客户端 A 位于路由器的局域网中，路由器与客户端 B 都位于光猫下。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141448.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="4-双边位于-nat-下">4. 双边位于 NAT 下
&lt;/h3>&lt;p>场景：光猫下有多个路由器，未做 mesh。客户端 A 与客户端 B 分别位于一个路由器下。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141457.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="5-通过-isp-nat-建立连接">5. 通过 ISP NAT 建立连接
&lt;/h3>&lt;p>场景：光猫 A 和光猫 B 都是同一个 ISP 运营商的设备。两个光猫无公网地址，只有 ISP 运营商分配到的 100.64.0.0 - 100.127.255.255 地址。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141507.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="6-通过-vpn-网关建立连接">6. 通过 VPN 网关建立连接
&lt;/h3>&lt;p>场景：双端通过 VPN 网关（例如 WireGuard、ZeroTire）构建了局域网。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141518.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="7-通过-nat-回环建立连接">7. 通过 NAT 回环建立连接
&lt;/h3>&lt;p>场景：客户端 A 通过端口映射协议（例如UPnP）在路由器上增加 NAT 规则，并获取路由器 WAN 地址作为自身地址。客户端 B 通过路由器 WAN 地址与客户端 A 建立连接。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141531.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="二判断方式">二、判断方式
&lt;/h2>&lt;h3 id="1-通过-rfc-定义">1. 通过 RFC 定义
&lt;/h3>&lt;p>当对端地址为以下类型时，可以直接判断为局域网：&lt;/p>
&lt;ul>
&lt;li>根据 &lt;a class="link" href="https://datatracker.ietf.org/doc/html/rfc1918#autoid-3" target="_blank" rel="noopener"
>RFC 1918&lt;/a> 和 &lt;a class="link" href="https://datatracker.ietf.org/doc/html/rfc4193#autoid-3" target="_blank" rel="noopener"
>RFC 4193&lt;/a>，&lt;code>10.0.0.0/8&lt;/code>, &lt;code>172.16.0.0/12&lt;/code>, &lt;code>192.168.0.0/16&lt;/code>, &lt;code>fc00::/7&lt;/code> 地址为私网地址；&lt;/li>
&lt;li>根据 &lt;a class="link" href="https://datatracker.ietf.org/doc/html/rfc3927#section-2.1" target="_blank" rel="noopener"
>RFC 3927&lt;/a> 和 &lt;a class="link" href="https://datatracker.ietf.org/doc/html/rfc4291#section-2.4" target="_blank" rel="noopener"
>RFC 4291&lt;/a>，&lt;code>169.254.0.0/16&lt;/code>, &lt;code>fe80::/10&lt;/code> 地址为 Link-Local 地址；&lt;/li>
&lt;/ul>
&lt;p>通过 RFC 定义，可以将 &lt;strong>通过局域网 IP 直连&lt;/strong> 、&lt;strong>单边位于 NAT 下&lt;/strong>、&lt;strong>双边位于 NAT&lt;/strong> 正确识别为局域网连接。&lt;/p>
&lt;h3 id="2-计算子网">2. 计算子网
&lt;/h3>&lt;p>当在局域网通过其他类型地址建立连接时（如：Global Unicast IPv6 地址），通过获取本地网卡地址列表和对应子网掩码。&lt;/p>
&lt;p>通过计算子网判断对端地址是否和本地地址位于同一局域网。&lt;/p>
&lt;p>通过计算子网的方式，可以将 &lt;strong>通过局域网 IP 直连&lt;/strong> 、&lt;strong>单边位于 NAT 下&lt;/strong>、&lt;strong>双边位于 NAT&lt;/strong>、&lt;strong>通过公网 IPv6 直连&lt;/strong> 正确识别为局域网连接。&lt;/p>
&lt;h3 id="3-特殊场景">3. 特殊场景
&lt;/h3>&lt;h4 id="isp-地址">ISP 地址
&lt;/h4>&lt;p>当双端通过 ISP 地址建立局域网连接时，&lt;/p>
&lt;p>如果通过 ISP 地址建立的&lt;strong>连接速率不受双端购买的套餐限制&lt;/strong>，则可以&lt;strong>认为是局域网连接&lt;/strong>；&lt;/p>
&lt;p>如果建立的&lt;strong>连接速率受双端购买的套餐限制&lt;/strong>，则&lt;strong>不应认为是局域网连接&lt;/strong>。&lt;/p>
&lt;h4 id="vpn-地址">VPN 地址
&lt;/h4>&lt;p>在 Linux 端可以根据路由表来判断对端地址对应路由是否属于 VPN 网卡；&lt;/p>
&lt;p>但是在移动端无法直接拿到路由表，因此无法判断对端地址会不会经过 VPN 网卡。&lt;/p>
&lt;h4 id="nat-回环地址">NAT 回环地址
&lt;/h4>&lt;p>当通过 NAT 回环地址建立连接后，双端看到的对端地址皆为 NAT WAN 口地址。&lt;/p>
&lt;p>此时有几种方式判断是否是位于同一局域网：&lt;/p>
&lt;ol>
&lt;li>双端交换自身看到的对端地址信息。如果一致则可以判断当前连接为通过 NAT 回环地址建立；&lt;/li>
&lt;li>双端通过端口映射协议获取 NAT 网关的 External 地址。如果 NAT 网关地址与对端地址相同则可以判断当前连接为通过 NAT 回环地址建立；&lt;/li>
&lt;/ol></description></item><item><title>使用rpcapd（libpcap）进行Wireshark远程抓包</title><link>https://wlynxg.github.io/blog/p/%E4%BD%BF%E7%94%A8rpcapdlibpcap%E8%BF%9B%E8%A1%8Cwireshark%E8%BF%9C%E7%A8%8B%E6%8A%93%E5%8C%85/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E4%BD%BF%E7%94%A8rpcapdlibpcap%E8%BF%9B%E8%A1%8Cwireshark%E8%BF%9C%E7%A8%8B%E6%8A%93%E5%8C%85/</guid><description>&lt;h1 id="wireshark-远程抓包">Wireshark 远程抓包
&lt;/h1>&lt;p>Wireshark 支持使用远程接口抓包，想要使用这个能力需要使用 &lt;code>libpcap&lt;/code> 提供远程抓包服务。&lt;/p>
&lt;h2 id="自行编译运行-libpcap">自行编译运行 libpcap
&lt;/h2>&lt;p>&lt;code>libpcap&lt;/code> 源码可以从 &lt;a class="link" href="https://www.tcpdump.org/index.html" target="_blank" rel="noopener"
>tcpdump 官网&lt;/a> 下载：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 下载 libpcap&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://www.tcpdump.org/release/libpcap-1.10.4.tar.xz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装依赖程序&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install gcc flex bison make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 配置 libpcap, 启用远程抓包能力&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --enable-remote
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 编译程序&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 运行 rpcapd, 监听 ipv4 地址, 无密码认证&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./rpcapd/rpcapd -4 -n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="wireshark-添加远程接口">Wireshark 添加远程接口
&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141548.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141558.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141610.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141623.png"
loading="lazy"
alt="image.png"
>
输入远程主机地址，即可拿到所有网卡：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-141635.png"
loading="lazy"
alt="image.png"
>&lt;/p></description></item><item><title>双端时间不同步导致连接失败</title><link>https://wlynxg.github.io/blog/p/%E5%8F%8C%E7%AB%AF%E6%97%B6%E9%97%B4%E4%B8%8D%E5%90%8C%E6%AD%A5%E5%AF%BC%E8%87%B4%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E5%8F%8C%E7%AB%AF%E6%97%B6%E9%97%B4%E4%B8%8D%E5%90%8C%E6%AD%A5%E5%AF%BC%E8%87%B4%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5/</guid><description>&lt;p>如果双端时间不一致，可能会引发加密信道协商出问题。&lt;/p>
&lt;ul>
&lt;li>主机端可能由于电池失效，导致时钟出错。在未联网状态下，无法获取准确时间。&lt;/li>
&lt;li>手机端手动设置一个错误时间的概率比较低。&lt;/li>
&lt;/ul>
&lt;h1 id="底层信道不支持加密时">底层信道不支持加密时
&lt;/h1>&lt;p>如果在底层信道不支持加密，libp2p 提供了tls和noise两种加密。目前版本的默认值是先tls，后noise。&lt;/p>
&lt;h2 id="noise">Noise
&lt;/h2>&lt;ul>
&lt;li>与时间无关&lt;/li>
&lt;/ul>
&lt;h2 id="tls">TLS
&lt;/h2>&lt;ul>
&lt;li>和时间有关，libp2p在生成证书时，证书有效期为一小时前到一百年后。https://github.com/libp2p/go-libp2p/blob/master/p2p/security/tls/crypto.go&lt;/li>
&lt;li>libp2p校验证书使用&lt;code>&amp;quot;crypto/x509&amp;quot;&lt;/code>，该库校验证书时会比对证书有效期。可以设置当前时间，但未提供忽略。&lt;/li>
&lt;li>当某一端的时间错误地设置成未来，另一端就会报错。&lt;/li>
&lt;/ul>
&lt;h1 id="底层信道支持加密时">底层信道支持加密时
&lt;/h1>&lt;p>如果在底层信道支持加密，libp2p直接使用信道提供的加密。&lt;/p>
&lt;h2 id="quic">QUIC
&lt;/h2>&lt;p>未测试是否受时间影响&lt;/p>
&lt;h2 id="webrtc">WebRTC
&lt;/h2>&lt;p>未测试是否受时间影响&lt;/p>
&lt;h2 id="webtransport">WebTransport
&lt;/h2>&lt;p>未测试是否受时间影响&lt;/p>
&lt;h1 id="方案">方案
&lt;/h1>&lt;h2 id="方案a暂定">方案A【暂定？】
&lt;/h2>&lt;p>初始化时手动指定优先使用noise。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;github.com/libp2p/go-libp2p/p2p/security/noise&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tls&lt;/span> &lt;span class="s">&amp;#34;github.com/libp2p/go-libp2p/p2p/security/tls&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">libp2p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">libp2p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Security&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">noise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">noise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">New&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">libp2p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Security&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">tls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">tls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">New&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="方案b暂定">方案B【暂定？】
&lt;/h2>&lt;p>初始化时手动指定只使用noise，不使用tls。&lt;/p>
&lt;p>&lt;img src="https://yoledigi.feishu.cn/space/api/box/stream/download/asynccode/?code=YjJjYmJjNGE2MTFmMDAwOTUyMzBiMmE0ZGRhMDkzY2NfSHB2T0FJd1NvZ3c0d2NOTVVHUWt4d1NHNFBXWkxidktfVG9rZW46T3NEMmJWNzdjb3l3UGN4WXZaTGNCSWZybm1iXzE3NDg3NjEzNjk6MTc0ODc2NDk2OV9WNA"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>由于tls的实现要早于noise，所以放弃tls会与只使用tls的老p2p客户端不兼容。但不兼容对我们影响不大。&lt;/li>
&lt;li>noise推出后，比tls的支持范围要普及。&lt;/li>
&lt;li>放弃tls可以减少一些库依赖。&lt;/li>
&lt;/ul>
&lt;h2 id="方案c">方案C
&lt;/h2>&lt;p>修改libp2p库，比如让证书有效期为固定的前后一百年。或者修改x509的代码，使之不校验时间。&lt;/p></description></item><item><title>网络变更对libp2p的影响</title><link>https://wlynxg.github.io/blog/p/%E7%BD%91%E7%BB%9C%E5%8F%98%E6%9B%B4%E5%AF%B9libp2p%E7%9A%84%E5%BD%B1%E5%93%8D/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E7%BD%91%E7%BB%9C%E5%8F%98%E6%9B%B4%E5%AF%B9libp2p%E7%9A%84%E5%BD%B1%E5%93%8D/</guid><description>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>网络事件&lt;/strong>&lt;/th>
&lt;th>&lt;strong>造成影响&lt;/strong>&lt;/th>
&lt;th>&lt;strong>能否感知&lt;/strong>&lt;/th>
&lt;th>&lt;strong>处理&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>非默认路由网卡IP变更&lt;/td>
&lt;td>和变更网卡相关的局域网连接断开&lt;/td>
&lt;td>能&lt;/td>
&lt;td>重新进行mDNS广播&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>默认路由网卡IP变更&lt;/td>
&lt;td>1. PMP 映射失效 2. P2P 映射失效，相关连接断开 3. 局域网连接断开 4. DHT 记录失效&lt;/td>
&lt;td>能&lt;/td>
&lt;td>1. 重新建立PMP映射 2. 重新获取网卡接口地址和外网出口地址 3. 重新进行mDNS广播 4. 重新广播到DHT网络&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>路由器LAN口IP改变WAN口IP不变&lt;/td>
&lt;td>1. PMP网关地址失效&lt;/td>
&lt;td>能&lt;/td>
&lt;td>重新获取默认路由地址，刷新缓存&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>路由器WAN口IP改变&lt;/td>
&lt;td>1. PMP 映射失效 2. P2P 映射失效，相关连接断开 3. DHT 记录失效&lt;/td>
&lt;td>不能&lt;/td>
&lt;td>1. 重新建立PMP映射 2. 重新获取外网出口地址 3. 重新广播到DHT网络&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>network event&lt;/th>
&lt;th>affect&lt;/th>
&lt;th>can capture?&lt;/th>
&lt;th>process&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Non-default routing network card IP change&lt;/td>
&lt;td>The LAN connection related to changing the network card is disconnected&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Restart mDNS broadcast&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Default routing network card IP change&lt;/td>
&lt;td>1. PMP mapping is invalid &lt;br />2. P2P mapping is invalid and related connections are disconnected &lt;br />3. LAN connection is disconnected &lt;br />4. DHT records are invalid&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>1. Re-establish PMP mapping. &lt;br />2. Re-obtain the network card interface address and external network egress address &lt;br />3. Re-broadcast mDNS &lt;br />4. Re-broadcast to the DHT network&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>The router LAN port IP changes and the WAN port IP remains unchanged.&lt;/td>
&lt;td>PMP gateway address invalid&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Retrieve gateway address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Router WAN port IP changed&lt;/td>
&lt;td>1. PMP mapping is invalid &lt;br />2. P2P mapping is invalid and related connections are disconnected &lt;br />3. DHT record is invalid&lt;/td>
&lt;td>No&lt;/td>
&lt;td>1. Re-establish PMP mapping &lt;br />2. Re-obtain the external network egress address &lt;br />3. Re-broadcast to the DHT network&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>网络卸载技术</title><link>https://wlynxg.github.io/blog/p/%E7%BD%91%E7%BB%9C%E5%8D%B8%E8%BD%BD%E6%8A%80%E6%9C%AF/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E7%BD%91%E7%BB%9C%E5%8D%B8%E8%BD%BD%E6%8A%80%E6%9C%AF/</guid><description>&lt;h1 id="网络卸载技术">网络卸载技术
&lt;/h1>&lt;p>网络卸载（Offload）技术指的是在操作系统中将数据包的处理尽量向下层移动，避免 CPU 消耗大量的计算资源用于处理网络包。&lt;/p>
&lt;p>网络卸载技术当前主要应用于三个层面：&lt;strong>硬件层面&lt;/strong>、&lt;strong>驱动层面&lt;/strong>和&lt;strong>操作系统层面&lt;/strong>。&lt;/p>
&lt;h2 id="硬件层面">硬件层面
&lt;/h2>&lt;h3 id="tso--ufo">TSO / UFO
&lt;/h3>&lt;p>TSP 全称 （TCP 分段卸载技术， TCP Segmentation Offload）；UFO 全称（UDP 分片卸载技术，UDP Fragmentation Offload）。&lt;/p>
&lt;p>开启 TSO 能力后，OS 可将一个不超过 64K 字节（包含 TCP 头部）的任意大小的TCP报文传给网卡，由网卡执行TCP分段、Checksum 计算和包头、帧头生成以及封装等工作，这样就消除了 TCP 分段工作带给 CPU 的负担。被 TCP 分段后的每个 TCP Segment，都需要封装 TCP 头，TCP 头部中有 Checksum（校验和），因此TSO通常需要 Checksum Offload 支持，即由网卡同时完成TCP校验工作。&lt;/p>
&lt;p>工作流程如图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142330.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="rsc">RSC
&lt;/h3>&lt;p>RSC 全称（接受侧合并技术，Receive Side Coalescing (RSC) or hardware LRO）。&lt;/p>
&lt;p>RSC 允许网卡在接收同一个连接的数据包时，将多个数据包拼接为一个大的网络包（不超过64kb）再传递到操作系统进行处理。&lt;/p>
&lt;p>RSC 工作流程如图所示：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142349.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="网卡驱动层面">网卡驱动层面
&lt;/h2>&lt;h3 id="lrolso">LRO/LSO
&lt;/h3>&lt;p>LRO 全称&lt;strong>大段接收卸载技术&lt;/strong>， Large Receive Offload；LSO 全称大段分片卸载技术，Large Segment Offload。原理和上面硬件层面的技术类似，只不过这个发生在网卡驱动层面。&lt;/p>
&lt;p>原理如图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142403.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="操作系统层面">操作系统层面
&lt;/h2>&lt;h3 id="gsogro">GSO/GRO
&lt;/h3>&lt;p>GSO（Generic Segmentation Offload） 和 GRO（Generic Receive Offload），比 LSO 和 LRO 更通用。&lt;/p>
&lt;p>网卡驱动在注册时会告诉 GSO/GRO 自身支持的能力。因此 GSO/GRO 能够自动选择是交给网卡进行包处理还是自身进行包处理。&lt;/p>
&lt;p>在 Linux 环境下，可以通过 &lt;code>ethtool -K eth0 gso/gro off/on&lt;/code> 进行 GSO/GRO 能力的开关。&lt;/p>
&lt;p>流程如图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142421.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="实验">实验
&lt;/h2>&lt;p>利用 iperf3 进行灌包测试。&lt;/p>
&lt;p>&lt;strong>未启用 TSO&lt;/strong> ：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>带宽：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142432.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据包总量：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142454.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据包分析：&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142507.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>启用 TSO&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>带宽：&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142525.png"
loading="lazy"
alt="image.png"
>&lt;/li>
&lt;li>数据包总量：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142540.png"
loading="lazy"
alt="image.png"
>&lt;/li>
&lt;li>数据包分析：
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142606.png"
loading="lazy"
alt="image.png"
>
&lt;strong>实验分析&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>根据实验结果可以发现，未 TSO 时，TCP 连接会根据协商的 &lt;code>MSS=1460&lt;/code>进行数据包构造，因此在系统网络栈中会构造大量的数据包；在启用了 TSO 之后，数据包的长度超过了协商的 &lt;code>MSS=1460&lt;/code>，最大数据长度来到的 64kb。&lt;/p>
&lt;p>大包让操作系统不用去构造大量的数据包，减少了 CPU 在数据包构造上面的花销。因此会发现测试出来的带宽比未开启 TSO 时大了许多。&lt;/p>
&lt;p>参考资料：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://blog-img-figure.oss-cn-chengdu.aliyuncs.com/img/20140928_GSO_EuroBSDcon_2014.pdf" target="_blank" rel="noopener"
>20140928_GSO_EuroBSDcon_2014.pdf&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>修改 VMWare 网卡速率</title><link>https://wlynxg.github.io/blog/p/%E4%BF%AE%E6%94%B9-vmware-%E7%BD%91%E5%8D%A1%E9%80%9F%E7%8E%87/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E4%BF%AE%E6%94%B9-vmware-%E7%BD%91%E5%8D%A1%E9%80%9F%E7%8E%87/</guid><description>&lt;h1 id="修改-vmware-虚拟机速率">修改 VMWare 虚拟机速率
&lt;/h1>&lt;h2 id="物理机上的-vmnet8-和-vmnet1">物理机上的 VMnet8 和 VMnet1
&lt;/h2>&lt;p>在设备管理器上查看两个网卡会发现这两个网卡显示的都是百兆。&lt;/p>
&lt;center class="half">
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142638.png" alt="image-20230621092858154" style="zoom:50%;" />
&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142707.png" alt="image-20230621093337424" style="zoom:50%;" />
&lt;/center>
但是，实际上这里的网卡速率是没有影响的，在这里显示的速度仅是一个展示的网络速度，是可以被忽略。详细表述可查看：https://serverfault.com/questions/366704/vmware-server-reports-100mb-nic-when-its-actually-1gb/366707#366707。
&lt;p>虚拟网卡实际上没有线速度，因为处理是由主机的物理 CPU 完成的。https://communities.vmware.com/t5/VMware-Workstation-Pro/VMware-Workstation-Pro-network-adapter-settings/m-p/515293/highlight/true#M27737&lt;/p>
&lt;h2 id="虚拟机默认网卡驱动">虚拟机默认网卡驱动
&lt;/h2>&lt;p>创建虚拟机的时候默认使用的是 &lt;code>e1000&lt;/code> 网络驱动，&lt;code>e1000&lt;/code> 网络驱动支持到千兆网络：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@Ubuntu:~# ethtool ens33
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Settings &lt;span class="k">for&lt;/span> ens33:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supported ports: &lt;span class="o">[&lt;/span> TP &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supported link modes: 10baseT/Half 10baseT/Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 100baseT/Half 100baseT/Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1000baseT/Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supported pause frame use: No
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supports auto-negotiation: Yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supported FEC modes: Not reported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Advertised link modes: 10baseT/Half 10baseT/Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 100baseT/Half 100baseT/Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1000baseT/Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Advertised pause frame use: No
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Advertised auto-negotiation: Yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Advertised FEC modes: Not reported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Speed: 1000Mb/s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Duplex: Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Auto-negotiation: on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Port: Twisted Pair
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PHYAD: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Transceiver: internal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MDI-X: off &lt;span class="o">(&lt;/span>auto&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supports Wake-on: d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Wake-on: d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Current message level: 0x00000007 &lt;span class="o">(&lt;/span>7&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> drv probe link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Link detected: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root@Ubuntu:~# ethtool -i ens33
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">driver: e1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">version: 5.15.0-72-generic
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">firmware-version:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expansion-rom-version:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bus-info: 0000:02:01.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-statistics: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-test: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-eeprom-access: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-register-dump: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-priv-flags: no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="修改虚拟机网卡驱动">修改虚拟机网卡驱动
&lt;/h2>&lt;p>可以通过修改虚拟机安装目录下的 &lt;code>虚拟机.vmx&lt;/code> 配置（通过记事本打开），将 &lt;code>ethernet0.virtualDev = &amp;quot;e1000&amp;quot; &lt;/code> 修改为 &lt;code>ethernet0.virtualDev = &amp;quot;vmxnet3&amp;quot;&lt;/code>。&lt;/p>
&lt;p>打开虚拟机，此时可以发现虚拟机的网卡驱动变成了 &lt;code>vmxnet3&lt;/code>，&lt;code>vmxnet3&lt;/code>是一个万兆网卡驱动：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@Ubuntu:~# ethtool ens192
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Settings &lt;span class="k">for&lt;/span> ens192:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supported ports: &lt;span class="o">[&lt;/span> TP &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supported link modes: 1000baseT/Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 10000baseT/Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supported pause frame use: No
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supports auto-negotiation: No
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supported FEC modes: Not reported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Advertised link modes: Not reported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Advertised pause frame use: No
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Advertised auto-negotiation: No
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Advertised FEC modes: Not reported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Speed: 10000Mb/s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Duplex: Full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Auto-negotiation: off
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Port: Twisted Pair
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PHYAD: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Transceiver: internal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MDI-X: Unknown
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Supports Wake-on: uag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Wake-on: d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Link detected: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root@Ubuntu:~# ethtool -i ens192
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">driver: vmxnet3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">version: 1.6.0.0-k-NAPI
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">firmware-version:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expansion-rom-version:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bus-info: 0000:0b:00.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-statistics: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-test: no
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-eeprom-access: no
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-register-dump: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">supports-priv-flags: no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>移动端 socket 问题</title><link>https://wlynxg.github.io/blog/p/%E7%A7%BB%E5%8A%A8%E7%AB%AF-socket-%E9%97%AE%E9%A2%98/</link><pubDate>Fri, 22 Aug 2025 17:34:52 +0800</pubDate><guid>https://wlynxg.github.io/blog/p/%E7%A7%BB%E5%8A%A8%E7%AB%AF-socket-%E9%97%AE%E9%A2%98/</guid><description>&lt;h1 id="移动端-socket-问题">移动端 socket 问题
&lt;/h1>&lt;p>APP 端会使用三种类型 socket：&lt;/p>
&lt;ul>
&lt;li>UDP socket&lt;/li>
&lt;li>TCP client socket&lt;/li>
&lt;li>TCP listen socket&lt;/li>
&lt;/ul>
&lt;p>但是由于系统原因，这三种 socket 在 APP 前后台状态切换时会受到影响（❗：&lt;strong>当APP在界面上无法看到时即为后台，包括Android上传文件时打开文件选择界面，手机锁屏时；当APP在界面上能够看到时为前台&lt;/strong>）。&lt;/p>
&lt;p>下面是对三种 socket 在不同手机环境下受到的影响的测试说明文档。&lt;/p>
&lt;h1 id="测试方案">测试方案
&lt;/h1>&lt;p>以下问题均需要在 release 版本下才能复现，debug 模式下不存在问题！&lt;/p>
&lt;p>&lt;strong>UDP&lt;/strong> &lt;strong>测试&lt;/strong>：APP 向 服务端定时发送数据包，UDP server 回复收到的数据；&lt;/p>
&lt;p>&lt;strong>TCP&lt;/strong> &lt;strong>Client 测试&lt;/strong>：APP 向服务端端建立 TCP 连接后，定时发送数据包，TCP server 回复收到的数据；&lt;/p>
&lt;p>&lt;strong>TCP&lt;/strong> &lt;strong>Serer 测试&lt;/strong>：在 APP 端建立 TCP server，服务端向手机端发起 TCP 连接，并定时发送数据，TCP server回复收到的数据。&lt;/p>
&lt;h1 id="测试结果">测试结果
&lt;/h1>&lt;p>当前能够稳定复现的主要是华为手机和 iOS 手机。其他手机的后台任务管理没有这两个严格，暂未进行测试。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">socket\手机品牌&lt;/th>
&lt;th style="text-align: left">华为&lt;/th>
&lt;th style="text-align: left">iOS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">UDP&lt;/td>
&lt;td style="text-align: left">系统抛错&lt;code>destination address required&lt;/code>&lt;/td>
&lt;td style="text-align: left">系统抛错&lt;code>broken pipe&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">服务端&lt;/td>
&lt;td style="text-align: left">无错误信息&lt;/td>
&lt;td style="text-align: left">无错误信息&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">TCP client&lt;/td>
&lt;td style="text-align: left">系统抛错 &lt;code>software caused connection abort&lt;/code>&lt;/td>
&lt;td style="text-align: left">系统抛错&lt;code>broken pipe&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">服务端&lt;/td>
&lt;td style="text-align: left">系统抛错&lt;code>connection reset by peer&lt;/code>&lt;/td>
&lt;td style="text-align: left">系统抛错&lt;code>EOF&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">TCP server&lt;/td>
&lt;td style="text-align: left">无错误信息&lt;/td>
&lt;td style="text-align: left">无错误信息&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">服务端&lt;/td>
&lt;td style="text-align: left">系统抛错&lt;code>connection reset by peer&lt;/code>；重新建立连接时无响应&lt;/td>
&lt;td style="text-align: left">系统抛错 &lt;code>EOF&lt;/code>；重新建立连接时系统抛错&lt;code>connection refused&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="华为">华为
&lt;/h2>&lt;h3 id="udp">UDP
&lt;/h3>&lt;p>&lt;strong>现象&lt;/strong>：当 APP 从后台恢复前台后，APP 端发送会抛错 &lt;code>write: destination address required&lt;/code>。服务端无错误信息。&lt;/p>
&lt;p>APP 端：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 正常输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">44.018&lt;/span> &lt;span class="mi">16617&lt;/span> &lt;span class="mi">16659&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">48.756&lt;/span> &lt;span class="mi">17961&lt;/span> &lt;span class="mi">17999&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">53.765&lt;/span> &lt;span class="mi">17961&lt;/span> &lt;span class="mi">17999&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">58.638&lt;/span> &lt;span class="mi">18044&lt;/span> &lt;span class="mi">18078&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// APP 从后台恢复到前台
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">03.678&lt;/span> &lt;span class="mi">18044&lt;/span> &lt;span class="mi">18070&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15000&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">destination&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="nx">required&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="tcp-client">TCP client
&lt;/h3>&lt;p>&lt;strong>测试方法&lt;/strong>：&lt;/p>
&lt;p>&lt;strong>现象&lt;/strong>：当 APP 从前台进入后台后，华为手机系统会立即向已经建立的 socket 连接发出 &lt;code>RST&lt;/code> 包，服务端 socket 会抛出 &lt;code>read: connection reset by peer&lt;/code> 错误。&lt;/p>
&lt;p>当 APP 从后台恢复前台后，APP 端发送会抛错 &lt;code>write: software caused connection abort&lt;/code>，当尝试重新 &lt;code>bind&lt;/code> 相同端口 tcp socket 时，会抛出 &lt;code>bind: address already in use&lt;/code> (💡：未设置&lt;code>SO_REUSEADDR&lt;/code> 和 &lt;code>SO_REUSEPORT&lt;/code>，设置之后可重新 &lt;code>bind&lt;/code>)。&lt;/p>
&lt;p>服务端：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 正常输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">52&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">51&lt;/span> &lt;span class="nx">recv&lt;/span> &lt;span class="nx">new&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">52&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">51&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">03&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">08&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// APP 进入后台
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15100&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">reset&lt;/span> &lt;span class="nx">by&lt;/span> &lt;span class="nx">peer&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142916.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>APP 端：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 正常输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">52&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">51.624&lt;/span> &lt;span class="mi">20975&lt;/span> &lt;span class="mi">21069&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">03.266&lt;/span> &lt;span class="mi">21302&lt;/span> &lt;span class="mi">21338&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">08.272&lt;/span> &lt;span class="mi">21302&lt;/span> &lt;span class="mi">21338&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// APP 从后台恢复到前台
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">13.310&lt;/span> &lt;span class="mi">21302&lt;/span> &lt;span class="mi">21333&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15100&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">software&lt;/span> &lt;span class="nx">caused&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">abort&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 重新 bind 抛错
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">13.310&lt;/span> &lt;span class="mi">21302&lt;/span> &lt;span class="mi">21333&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">panic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15100&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">bind&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="nx">already&lt;/span> &lt;span class="nx">in&lt;/span> &lt;span class="nx">use&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="tcp-server">TCP server
&lt;/h3>&lt;p>&lt;strong>测试方法&lt;/strong>：&lt;/p>
&lt;p>&lt;strong>现象：&lt;/strong>&lt;/p>
&lt;p>当 APP 从前台进入后台后，华为手机系统会向所有已经建立连接的 TCP 连接发送 &lt;code>RST&lt;/code> 报文，导致服务端写数据时抛错 &lt;code>write: connection reset by peer&lt;/code> 。&lt;/p>
&lt;p>并且当 APP 恢复前台时，服务端继续向 APP 端 TCP Server 发起连接建立请求时，APP 端无回复包。查看手机端日志，发现手机端无错误信息输出。&lt;/p>
&lt;p>服务端：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 正常输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// APP 从前台进入后台
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mo">07&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">14&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">52980&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">52980&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">reset&lt;/span> &lt;span class="nx">by&lt;/span> &lt;span class="nx">peer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mo">07&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">14&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">42090&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">42090&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">reset&lt;/span> &lt;span class="nx">by&lt;/span> &lt;span class="nx">peer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 服务端重新 connect 手机端 TCP server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mo">07&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">24&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">timed&lt;/span> &lt;span class="nx">out&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">panic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.159&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">timed&lt;/span> &lt;span class="nx">out&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142935.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>APP 端：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">08.573&lt;/span> &lt;span class="mi">26359&lt;/span> &lt;span class="mi">26396&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">recv&lt;/span> &lt;span class="nx">new&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">34566&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">08.573&lt;/span> &lt;span class="mi">26359&lt;/span> &lt;span class="mi">26396&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">34566&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">21&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">08.624&lt;/span> &lt;span class="mi">26359&lt;/span> &lt;span class="mi">26396&lt;/span> &lt;span class="nx">I&lt;/span> &lt;span class="nx">GoLog&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">36210&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="ios">iOS
&lt;/h2>&lt;blockquote>
&lt;p>iOS 开发手册中写了对以下问题进行了解释：https://developer.APPle.com/library/archive/technotes/tn2277/_index.html&lt;/p>
&lt;/blockquote>
&lt;h3 id="udp-1">UDP
&lt;/h3>&lt;p>&lt;strong>现象：&lt;/strong>&lt;/p>
&lt;p>当 APP 从后台恢复到前台后，udp socket 会抛出 &lt;code>write: broken pipe&lt;/code>错误。此时重新 &lt;code>bind&lt;/code> 相同端口的 udp socket 会抛出 &lt;code>bind: address already in use&lt;/code> 错误 (💡：未设置&lt;code>SO_REUSEADDR&lt;/code> 和 &lt;code>SO_REUSEPORT&lt;/code>，设置之后可重新 &lt;code>bind&lt;/code>)。&lt;/p>
&lt;p>iOS APP 端：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 正常输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// APP 恢复前台
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">01&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15000&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">broken&lt;/span> &lt;span class="nx">pipe&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">01.029327&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">0800&lt;/span> &lt;span class="nx">anet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1088&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">374879&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">os_log&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">01&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15000&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">broken&lt;/span> &lt;span class="nx">pipe&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 重新创建 socket，bind 相同端口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">panic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15000&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">bind&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="nx">already&lt;/span> &lt;span class="nx">in&lt;/span> &lt;span class="nx">use&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="tcp-client-1">TCP Client
&lt;/h3>&lt;p>&lt;strong>现象&lt;/strong>：当 APP 进入后台被挂起后，iOS 系统会给服务端 TCP server 发送 &lt;code>FIN&lt;/code> 包，让服务端已经建立连接的 socket 关闭。&lt;/p>
&lt;p>当 APP 从后台恢复到前台后，调用 socket 发送数据时会抛出 &lt;code>write: broken pipe&lt;/code> 。此时重新 &lt;code>bind&lt;/code> 相同端口的 tcp socket 会抛出 &lt;code>bind: address already in use&lt;/code> 错误 (💡：未设置&lt;code>SO_REUSEADDR&lt;/code> 和 &lt;code>SO_REUSEPORT&lt;/code>，设置之后可重新 &lt;code>bind&lt;/code>)。&lt;/p>
&lt;p>服务端：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">06&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">06&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">32&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">06&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">34&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-142951.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>iOS APP 端：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">04&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">49&lt;/span> &lt;span class="nx">udp&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15100&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">broken&lt;/span> &lt;span class="nx">pipe&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">04&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">49.548568&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">0800&lt;/span> &lt;span class="nx">anet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1156&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">389115&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">os_log&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mo">04&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">49&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15100&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">write&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">broken&lt;/span> &lt;span class="nx">pipe&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">panic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">15100&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">bind&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">address&lt;/span> &lt;span class="nx">already&lt;/span> &lt;span class="nx">in&lt;/span> &lt;span class="nx">use&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="tcp-server-1">TCP Server
&lt;/h3>&lt;p>&lt;strong>现象：&lt;/strong>&lt;/p>
&lt;p>当 APP 从前台进入后台后，iOS 系统会向所有已经建立连接的 TCP 连接发送 &lt;code>FIN&lt;/code> 报文，导致服务端所有 socket 关闭 。&lt;/p>
&lt;p>并且当服务端继续向 APP 端 TCP Server 发起连接建立请求时，iOS 系统会拒绝连接。当 APP 从后端恢复到前台后，查看手机端日志，发现 &lt;code>accept&lt;/code> 无错误信息输出，但是从之前已经建立连接的 TCP socket 读数据时会 iOS 系统抛出 &lt;code>read: socket is not connected&lt;/code>错误，此时服务端即使再尝试连接 TCP server，会抛出 &lt;code>connect: connection refused&lt;/code>错误。&lt;/p>
&lt;p>服务端日志输出：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 正常输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// APP 退到后台
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">59&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38314&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">59&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38308&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">59&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">47762&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">59&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">47778&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">59&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">refused&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">panic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">refused&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// APP 恢复前台后再次尝试重连
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">12&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">refused&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">panic&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">dial&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connect&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">refused&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/wlynxg/pic/main/2025/06/01/20250601-143005.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>iOS APP:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Go" data-lang="Go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 正常输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">53.941595&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">0800&lt;/span> &lt;span class="nx">anet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1077&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">371301&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">os_log&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38308&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38314&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">53.942296&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">0800&lt;/span> &lt;span class="nx">anet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1077&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">371301&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">os_log&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38314&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span> &lt;span class="nx">recv&lt;/span> &lt;span class="nx">new&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">47778&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">53.960323&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">0800&lt;/span> &lt;span class="nx">anet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1077&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">371302&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">os_log&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span> &lt;span class="nx">recv&lt;/span> &lt;span class="nx">new&lt;/span> &lt;span class="nx">connection&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">47778&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">47778&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">53.960779&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">0800&lt;/span> &lt;span class="nx">anet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1077&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">371302&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">os_log&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">27&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">hello&lt;/span>&lt;span class="err">&amp;#39;&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">47778&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// APP 恢复前台后，已经建立连接的 socket 抛错
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">14&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38308&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38308&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">socket&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">not&lt;/span> &lt;span class="nx">connected&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2024&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">14.703214&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">0800&lt;/span> &lt;span class="nx">anet&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1077&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">371377&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">os_log&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="mi">2024&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mo">04&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">14&lt;/span> &lt;span class="nx">conn&lt;/span> &lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38308&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span> &lt;span class="nx">tcp&lt;/span> &lt;span class="mf">10.0.0.110&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">33322&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="mf">10.0.1.238&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">38308&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">read&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">socket&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">not&lt;/span> &lt;span class="nx">connected&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>